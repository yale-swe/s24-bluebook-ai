{
 "crn_code": "10503",
 "season": "201603",
 "legacy_coursetable_course_id": 39111,
 "enrollment": {
  "enrolled": 128,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC402",
   "question_text": "Your level of engagement with the course was:",
   "options": [
    "very low",
    "low",
    "medium",
    "high",
    "very high"
   ],
   "data": [
    2,
    4,
    9,
    35,
    41
   ]
  },
  {
   "question_id": "YC404",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "fair",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    3,
    9,
    14,
    27,
    36
   ]
  },
  {
   "question_id": "YC405",
   "question_text": "The course was well organized to facilitate student learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    0,
    3,
    15,
    35,
    38
   ]
  },
  {
   "question_id": "YC406",
   "question_text": "I received clear feedback that improved my learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    1,
    2,
    13,
    36,
    39
   ]
  },
  {
   "question_id": "YC407",
   "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    2,
    10,
    46,
    32
   ]
  },
  {
   "question_id": "YC408",
   "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    1,
    5,
    29,
    56
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC401",
   "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
   "comments": [
    "I learned how to write programs in several different languages and I gained a greater appreciation for what \"computer science\" actually is.",
    "I learned how to code in multiple languages at a basic level.",
    "It is a good introduction course to CS but it is indeed tough. All the materials and lectures are excellent but the learning curve is very steep. Depending on how much effort you are willing to put into this class at the expense of your other commitments at Yale, you will either learn tremendously or you will be discouraged due to the frustrating nature of the work especially towards the end where they teach you so many different languages and everything becomes slightly less clear.",
    "definitely learned a ton of skills relating to computer science.",
    "I learned so much in this class. Coming in with no coding background, I am now confident in several programming languages, and know how to build cool websites and the like!",
    "Coming in, I had no concept of what comp sci even was. Now I feel like I have a solid foundation in it.",
    "I learnt coding! which was incredibly hard and time-consuming but overall a worthwhile experience.",
    "I learned to code!:-) it was an incredibly challenging but fun journey that I'm glad I got a chance to partake in.",
    "I learned basic principles of computer science as well as programming in C, Python, Javascript, and SQL. I thought the course motivated the how and why of CS.",
    "Basic coding in languages C++, Python, JavaScript, HTML, CSS, SQL",
    "I learned how to write code from scratch for the first time, and learned the process of asking the right questions on places like Google and StackOverflow to get to the information I need.",
    "I learnt a lot from this course, especially Python and Javascript.",
    "- Learnt programming languages and applied them to the psets and my own final project - Learnt how to proactively seek for help, and to look for answers in online forums, as is common in CS",
    "I went from not knowing how to code at all to knowing, with a workable degree of familiarity, seven languages including C, Python, html, Javascript, SQL, and css. Now I know how I would go about learning a new language, and I know the basics of web app development. Probably most importantly, I have a pretty good grasp of how to debug.",
    "I learned basic coding skills, in C and Python as well as some web related stuff.",
    "Basic introductions to the ideas of computer science, mostly through learning a variety of programming languages.",
    "I learned a lot about coding.",
    "I learned the basics of coding in C+, python, javascript, SQL, and HTML. I think that this class also tested and built my problem solving skills. I had never been exposed to CS before this course and I absolutely feel more comfortable with coding now.",
    "Already filled out a course evaluation for CS50.",
    "I learned several programming languages, computer science logic, and, most importantly for future study in the field, I learned problem-solving and debugging techniques.",
    "I learned the essentials of computer programming.",
    "Webprogramming and exposure to wide variety of languages",
    "I learned the computer science fundamentals. This course taught me how to think like a programmer and tackle many common tasks that a programmer might face.",
    "I developed a wide range of computer science skills in this course. I have a solid understanding of how computers work \"under the hood\", as well as the powerful features of the more high-level programming languages like Python and Javascript.",
    "I learned several new programming languages such as python, C, JavaScript and HTML. I also learned to be more mindful of the efficiency of my code.",
    "Previously, I had never taken a computer science course. CS50 was the perfect introduction to CS material. I learned the fundamentals of CS and now truly understand how important CS is to know.",
    "This course was a thorough overview of programming and computer science thinking in general. I learned a lot about various programming languages like HTML\/CSS\/C\/Python, etc. but also felt much more comfortable with actually programming and making things.",
    "I learned the basic foundation of several computing languages as well as how to teach myself new languages.",
    "Basic proficiency in Python, C, Javascript, other languages",
    "I gained valuable analytical\/quantitative\/problem-solving skills, and of course, many practical coding skills.",
    "Developed great programming skills, logical and critical thinking in this course.",
    "Python, Javascript, HTML, CSS, C, SQL Thinking like a computer scientist.",
    "I felt I got an in-depth overview of several different programming languages (C, Python, HTML etc), and learned basic information about how the internet worked. I had not had any prior computer programming experience, and so I felt that I was able to learn to think in a slightly different way.",
    "Learned to code and approach problem solving as a programmer",
    "I definitely have learnt a lot from the class. It is not about coding, but about solving problems",
    "Developed a great background of CS concepts as well as basic programming skills.",
    "I learned basic programming essentials: -How to create a website and its underlying concepts -C programming language -Python language -SQL language -HTML formatting -Data structures and how they operate",
    "I developed countless skills in this course, mainly problem solving and thinking about algorithms in a theoretical and complex way. I learned many different programming languages including C, Python, Javascript, HTML, and CSS. All of these were wonderful tools that gave me wonderful insight to how computer programs work under the hood. I loved working with algorithms and truly understanding what it means to problem solve with real world applications.",
    "I learned how to code in a number of languages and also now understand the logic behind CS",
    "I learned a lot of CS while taking this course...maybe too much. The courseload was very heavy and demanding.",
    "Learned how to write code and how programming allows things like websites to run",
    "Introductory programming skills in C++, python and various other languages.",
    "I learned the basics to computer science",
    "This is a great course where you learn a ton of important information about the internet, coding, different programming languages, networks, machine learning, and more. Highly recommended for any undergraduate or graduate student.",
    "I developed an elementary understanding in coding, in C, in Python, as well as to a smaller extent in HTML and CSS.",
    "Basic programming skills, mostly C and python but also a little bit of html and javascript logic to computer programming",
    "Taking CS50, I learned a lot of computing skills, new algorithms multiple computing languages, networking, data structures, trade-offs between different computing languages and how to debug and write code- all of which will be extremely helpful for my future computer science journey. It was a fantastic course and a great introduction to the basics of computer science. Loved it.",
    "I learned how to code in C, Python, and JavaScript, as well as other coding languages,learning how to make command line programs, websites, databases, and more.",
    "Knowledge 1. Programming languages: C, Python, JavaScript, HTML, CSS, SQL 2. Thinking programmatically: algorithms, data structures, problem solving, debugging Skills 1. Coding Insights 1. Programming is integral to future world 2. Machine learning is fun",
    "You learn about a lot of different languages including c++, python, sql, html, and javascript, but it is important to note that you only actually learn a few of them in depth, even though you are expected to know all of them by the final project. This course was very concept based, focused less on the exact syntax of code and more on what each function may do.",
    "many new languages in one semester, pretty challenging class, C, Python, php, SQL, java script, html: good for apps, web development, understanding of the internet",
    "I learned the fundamentals of computing as well as how to program in C, Python and Javascript. I developed an intuition for coding as well as analytical skills and logic.",
    "Helps a lot students with no previous CS experience. The level of improvement is many times shocking.",
    "I learned the skill of coding and how to teach myself more code.",
    "Coding in C, Python, JavaScript, HTML, and CSS, data structures, web design, machine learning. I learned applicable skills for jobs involving technology.",
    "I learned the basics of computer science, and developed a budding passion for the subject as well. Though cs50 is renowned to be fun at first, absolute hell later on, I found myself to really enjoy the later pset assignments because they showed me the unlimited control computer science potentially has.",
    "I learned about several different programming languages and how to use them, as well as problem solving in general.",
    "programming, logical reasoning",
    "I gained great problem solving skills and tackled some very difficult problems.",
    "A ton of CS, and the skill set to go out and learn more."
   ]
  },
  {
   "question_id": "YC403",
   "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
   "comments": [
    "Strengths - huge support staff, well planned lessons\/homeworks, engaging sections, hype Weakness - takes up a TON of students' time which, depending on the student's courseload outside CS50, could be a real issue",
    "CS50 is relevant and very applicable in the modern world, and the network of support is extensive. However, the online lectures made it difficult to ask questions and really understand the material.",
    "I think the initial lessons on C were well-taught. The transition from C to Python and then JS was too abrupt and honestly I did not find too beneficial. This seems after the midpoint of the semester to be a class where people can boast about having taken a CS class and have a final project to show -- for the future benefits of getting employed in a tech company or internship. I doubt majority of the students truly understood the details due to the rapid nature of the course. I would have appreciated if it slowed down and did not focus so much on producing some kind of end product.",
    "The TA's were either very helpful or very unhelpful, and that was how learning was done in this class so that was very frustrating. seems kind of ridiculous that yale couldn't have someone lecture live. the amount of work in this class is overwhelming. take home quizzes seemed totally unfair and even if you watched every lecture you basically had to just use google and spend hours on stuff that didn't seem related. lectures and sections did not set you up for success.",
    "This class is great. Much better than any intro CS course that Yale offers on its own. Loved the style of lecture in videos at Harvard, and section in small groups. Definitely go to section, it's super helpful! I'd love to see more talk of how coding\/programming works locally outside of CS50 ide.",
    "Strengths: A great intro course for anyone interested in computer science. Covers a lot and is deeply engaging",
    "The class was incredibly challenging - some of the problem sets may need re-visiting to make them more manageable to enhance learning",
    "Consolidate sections - mine only had 3-5 students and I think we would have benefitted from a larger section.",
    "The new format of the course is both a strength and a weakness. Although having recorded lectures is super helpful throughout the week to refer back to, not having face to face contact sometimes makes it harder to grasp the information, especially when things are unclear in the moment. The strength of this course is that it has so many undergraduate TAs to help with problem sets, but a huge caveat is that it honestly just expects too much, too quickly throughout one semester, frequently from those who do not wish to be CS majors.",
    "I think one of the greatest strength is the ability to watch the course at any time you choose. Sometimes I have times of the day where I just can't focus, so it's a better use of time to watch the lectures when I'm in the right state of mind. I also loved the freedom of the final project.",
    "Strengths - Level of support (section, office hours, 1-on-1 tutoring, CS50 discuss) - Community with TAs and with peers - Events add a different dimension to the class and encourage interaction e.g. hackathon, cs50 fair, Friday lunches - Flip classroom-style, where you can replay the lecture videos and go at your own pace - Relevant content, skills\/concept-based learning - Abundant resources e.g. CS50 Reference, notes Weaknesses - Teaching of JS and HTML \/ CSS was very rushed, and I think a lot of people are still not confident in that area -> can we have a CS50 part 2? - Office hours sometimes get really crowded, especially on Sundays, and the TA:student ratio becomes insufficient - Wish the postmortems could be released in code instead of video format. I think the video discourages people from looking at the postmortems, and it is pretty frustrating to have to watch a video when you just want to compare a section of the code, for example, or to briefly look it over",
    "I enjoyed the flipped-classroom approach for this particular course. It gave me the flexibility to watch lectures whenever I could, and then I'd go to section to review and apply things in the lecture. My section TAs were also very helpful, as were office hours. As a first-time coder, I found the course very helpful, but I could imagine it being too easy for others who've taken one class before. There were attempts to stratify skill levels, but I think even more work could be put to that. Especially because CS50 is such an awesome skills-based course that many people, even experienced coders, can benefit from.",
    "Although the course is meant to be introductory, I would have liked to see more introductions to application of computer science--i.e. working with big data, security, generating algorithms, etc. The problem sets were fairly interesting and engaging, but sometimes seemed a bit contrived and a little too much hand-holding was provided (particularly near the end of the course).",
    "The beginning of the class is very overwhelming when learning syntax. I believe that could be focused on more.",
    "Weakness: I think with a couple of the problem sets too much was expected. I was prepared to devote up to 10 hours a week to problem set, but any more time than that I believe is overkill for a class that already requires 2 hours of lecture time and two hours of section. I think that this problem could be alleviated if students were allowed to drop one problem set. Strengths: Dedicated staff of CAs and TAs who absolutely wanted you to succeed. And I know that behind them was Jason, Patrick, and David who were 100% invested in the course. I wish that more classes had office hours and help that was accessible as CS50. Another strength of the course was the set up with the final project at the end. I think that the psets really set you up to have a great final project and that was one of my favorite parts of the course.",
    "Already filled out a course evaluation for CS50.",
    "I liked the format of the course and the student support (through office hours, etc) was very good. I didn't find discussion section very helpful with the problem sets because it was very early in the week. If discussion section could be at the end of the week, that would be helpful.",
    "Very strong staff and support system.",
    "This course has an incredibly individualized learning style. Every lecture is online to be watched at your own leisure and few in-person activities are required. This has the positive effect of allowing you to learn the material in whatever way you choose. However, this also has the negative effect of a largely impersonal learning experience putting all of the burden of the course on self motivation to learn and tackle the material.",
    "The online format of the class took some getting used to. Since the majority of the lectures are meant to be viewed online, it took a lot of self-discipline to watch the lectures early enough to give myself time to work on the problem sets. However, once I got used to this an settled into a routine, I really liked the ability to watch lectures again, speed them up or slow them down, and read through the lecture notes to reinforce concepts. The strength of the course is absolutely the teaching staff. I had nothing but positive experiences with the helpful, understanding, and knowledgable undergraduate TAs. Because there were so many of them, it was much easier than many other courses at Yale to get meaningful support. I loved that there were ample office hours, and that they were at times that fit well into my schedule.",
    "The course has very interesting material but the lectures don't really prepare you enough for the problem sets or tests.",
    "This course is brilliantly taught. There are SO MANY opportunities to be helped - TA hours, section, office hours, etc. The lectures are very clear and section supplements the material taught in lecture well. Occasionally, however, the material taught in lecture will differ from the problem sets.",
    "The course has a lot of TA's so there is a good support system for students. The PSETs were challenging but doable forcing you to think a little harder than many other course do. I can't think of that many weaknesses with this course, maybe just the intensity of th psets being a little it too high.",
    "Great lectures Well-run TAs were accessible Exciting social events Fair assessments interesting subject matter",
    "The online lecture system and in person section was great. The support for the course is absolutely amazing--the number of TAs and office hours turned what could've been an insanely difficult and frustrating course into a manageable one. That being said, the level of support was necessary for the challenge the course provided. So there is a careful balance at play here- if psets were even a tiny bit more difficult, the course would have been a disaster for me. So teaching more to the p-sets, or making the p-sets more relevant to what is explicitly taught would be good.",
    "Strengths: Grest amount of skills learned, applicable skills, and support Weakness: Course expectations and workload were not presented in beginning of course during shopping period; lots of \"fluff\"",
    "CS50 is well structured, challenging and engaging. Problem sets are challenging, demanding, but you will learn a lot and notice how much you learn as weeks go by.",
    "The course has several strengths. It is well taught, very focused from week to week, and well organized. Particularly, it has resources to really support students -- there are many online resources, office hours every week, peer tutors available, etc. This is a fantastic aspect of cs50. It's also clear that everyone involved is passionate about computer science and teaching computer science well. One drawback I found was a lack of flexibility in the course. While I can see how this is important (the class is so fast-paced that I think they don't want any students falling behind), I think it can sometimes be difficult to work around. It might be nice to give all students one 2-day extension (or even 24hr. extension) to use at their discretion. This could help keep the course moving, while giving everybody some of that flexibility. I also think that it's really important to help students understand all the wonderful resources CS50 has to offer. As someone who joined the class halfway into shopping period, I wasn't fully aware of a) all the resources available and b) how essential it was, as someone with no prior experience, to take full advantage of those resources from week 0. I know all of this info is in the syllabus, but I think making it extremely obvious would be great.",
    "Strengths: flexible, plenty of resources",
    "I guess the current format (lecture videos from Harvard + TA sessions) works very well, especially for a technology-oriented class. As an introduction class, there is expectedly very little teaching about actual coding, which is fine. The problem is that the the level of coding as required for each pset is unproportionally higher than what we actually have learnt. Unless you are willing to spend 10,15 hours coding (but most of the time just figuring out syntax problem), then this class may not be for you.",
    "Loved the video lectures with in-person section that was also videoed. Amazing office hours thanks to their timeslots, the TAs and CAs, and the high staff-student ratio. Weaknesses were that the lectures spent too long explaining the basic concepts and the details behind only simple examples, and did not spend enough time demonstrating higher-level applications of the concepts. Also, the lectures did not really address the higher-level skills necessary to complete the psets.",
    "The course strength is its overwhelming support given to students. A possible weakness may be the online lectures which may be easy to postpone and hence make the interaction more one-sided.",
    "My strengths include understanding each language fairly well for each problem set. I was able to get a grasp on what the problem was trying to say and I completed it with constructive help from the teaching assistants at office hours. My weaknesses were largely the tests. I couldn't do the questions on the test very well even though I was successful for each problem set.",
    "Strengths- number of opportunities for help, exposure to real-world CS industry, and section Weakness- way material is taught\/ introduced, Thursday lectures were not terribly helpful",
    "Strengths were that I did feel like I learned a lot from the course and office hours were extremely helpful, especially because it was basically one-on-one tutoring. Weaknesses were that it felt like the psets was basically impossible to do if you didn't go to office hours.",
    "Grading is very arcane, making it very difficult to tell how you're doing in the course. I understand that CS50 uses a unique grading scale, but this scale must ultimately fit into the framework of Yale College grading. I felt unable to assess my own scores and progress all semester, or to evaluate my progress in comparison with my peers, because the obscure \"grades\" I received held no meaning for me.",
    "The strengths are the amount of support available to students, but the weaknesses are how time-consuming this class is for an introductory-level course",
    "This course was very well organized. There were set office hours each week, and an undergraduate TA is assigned to each student, to lead office hours in small groups. It could be improved with more specific lectures, that covered more of the issues we were expected to tackle in the problem sets.",
    "Strength: online lecture, can make my schedule more flexible TA review session and office hours are really helpful Weakness: second half of the course goes too fast that I don't feel like learning html and javascript well",
    "The course has a lot of strengths that I do not know where to start. The professors and TA's enthusiasm always excited me to work harder and be more creative, the various events- Friday lunches, Hackathon and CS50's fair- only showed how much hard work was put into this course. The material was challenging sometimes yet super interesting. I also loved the fact that the lectures were recorded- very convenient. Regarding the course's weaknesses, I thought that the tests (especially the first one) was a bit harder and longer than what I had expected. Maybe because we did not solve enough practice problems or revised the material well during sections. The final project required a lot of work, which was disturbing a bit since we had other things to submit as well. Also, if I had a clearer guidelines for the final project that would have been really helpful (like a range of how many lines of code is considered \"good\".. etc.) In general though, it was an exceptionally efficient and fun class.",
    "A huge weakness in this course is that you don't know your letter grades at any given point. It is incredibly hard as a student to take a class where you have no idea where you stand or if your effort is high enough.",
    "Strengths 1. Great support structure 2. Interesting course content 3. Format of video lectures actually works very very well 4. Tests and quizzes that do not test knowledge regurgitation (because they are take home) but rather critical thinking and application Weaknesses NIL",
    "I absolutely hated this class. Out of the 5 semesters I've been at Yale, this has easily been the worst class I've ever taken at Yale. Here's what I disliked about the course: 1) I strongly disliked the video format of the lecture. I prefer having in-class lectures with an in-person professor. I understand that this wasn't feasible for this particular class, but maybe the CS department should look into more alternatives that would allow for a more traditional class structure. I do know people who liked this format though, so this is just a matter of personal preference. 2) I wish that the class had focused on just one language rather than trying to tackle several different languages. Instead of being able to come out of the class saying that I was able to master a particular language, I can now only say that I \"kind of\" know a couple of languages. 3) My strongest dislike stemmed from a disagreement with the course on an ideological level. Call me old-fashioned, but I hated how blatantly marketable this class was. It was obvious that Malan structured this course to be \"sell-able\" to a general public, and while I'm all for free learning and open knowledge, I get the sense that open-source knowledge isn't Malan's only motive. I disliked how branded everything was, i.e. \"This is CS50\" and \"This is Problem Set 4\" and \"This was Problem Set 4\". This is a class, not a start-up. That being said, the TF's were this class's saving grace. They were immensely helpful and understanding, and I credit everything to them. In short, they made the class bearable.",
    "The course was strong in that the online lectures offered a unique amount of flexibility, but forced students to go to office hours if they had any hope of doing well on the problem set. The course was strong on concept based learning, but having left the course I feel like I still don't know much of the syntax of many languages touched on or it was touched on so briefly that it didn't stick. The course was good, though, in introducing students to a broad range of topics.",
    "Strengths: office hours are super super helpful, TFs always willing to help, lecture notes are great. Problem sets are quite hard but very effective in helping us understand the lecture Weakness: Flipped classroom is not my preferred style of teaching, it is easier to skip lecture that way... Also, too much facebook \"rush cs50\" undermines the importance of the class",
    "Honestly, it is a little embarrassing that this course is taught at harvard and needs to be online. However, if it is going to be online, I think the section needs to be taught by more experience grad students or something. My TA taught to the best of her ability, but it is kind of unfair to stick a sophomore to teach students her own age.",
    "The workload is extremely intensive, but very rewarding. I would often spend my entire weekend on a problem-set, only to begin the process again with a lecture on Monday. But doing the psets, I learned an immense amount about computer programming and its potential.",
    "This course left the student alone, and if there were weaknesses in the start, they weren't really addressed but left to make the rest of the year harder. The students need more time with TAs to go over the concepts.",
    "It is very demanding, but extremely relevant. Office hours help significantly and it is very hands on. There's not a lot of incentive to watch the lectures.",
    "The biggest weakness of the course is that I'm not sure if I'm ready for other Yale CS classes, the reason being that the cs50 course, though fun and engaging, is taught at a different speed and style compared to the other courses at Yale. I don't think I have a strong foundation on terminology and the theory of computer science as well. The strength is that this course helped me adjust to the tune of computer science, and has helped plant an interest in the subject for me.",
    "An amazing course, I enjoyed the online lectures, no weaknesses I can think of.",
    "this is perhaps the best intro to Computer Science that there is but there is too much material expected to be covered",
    "I learned a lot in this class but I wish there was more time to focus on each topic and that we spent more time learning each topic."
   ]
  },
  {
   "question_id": "YC409",
   "question_text": "Would you recommend this course to another student? Please explain.",
   "comments": [
    "If you think you might love CS - take it If you just want to dabble in CS alongside other difficult courses that you're taking, maybe opt for 112. you need to be prepared to spend a lot of time on cs50, but it can we very well worth it",
    "I would recommend CS50 to a student who is going to need programming experience for their profession. I would not recommend CS50 to someone looking to fulfill a requirement or get an easy credit. The class is extremely difficult at points and the online lecture style can impede the natural learning process.",
    "I would recommend if you are an underclassmen, but if you are an upperclassmen and want to take an intro CS course, be prepared that you have to put in A LOT of work that is not proportionate to the rest of your classes. Might not be worth it if you also have other commitments and goals during your junior or senior year.",
    "Only if the TA;s were improved and workload was more manageable.",
    "Great class, but a lot of work. Don't be intimidated if you have no programming experience. If you put in the time this class isn't too hard.",
    "Take this class if you want to get a solid foundation in a wide spectrum of cs topics and are willing to put in the work to get it. The skills you learn are very applicable, so you can see your own progress which I found very gratifying.",
    "Yes, for anyone that is interested in computer science - this course is a must!",
    "Take it! You will learn so much about CS. The instructors do a great job of tailoring the difficulty to your level, so you don't have to worry about competing with classmates if you are not confidant about your skills. I believe that someone without a working knowledge of at least how computers work and the principles of algorithmic thinking is handicapped in the modern world.",
    "Depends- if you wish to be a CS major, for sure. This is a worthwhile class. If not, it depends on your experience and how much you actually want to know about CS. If you really do want to be proficient, take this class (with a grain of caution about how much work you'll have 10-12 hours a week from PSETS, then 3 ish hours of Section and Lecture). If you just want to get a feel for CS because it's cool and good to know, try CodeAcademy instead.",
    "Yes, you should definitely take this course. If you don't know why you need to learn how to code, the first few weeks are a great introduction to that. If you'll think you'll need to code in your prospective major, but your major isn't explicitly computer science, take this class. It'll teach you a lot of what you need to know to stand on your own legs without a whole lot of guidance.",
    "Definitely a lot of work but totally worth it!",
    "Take CS50! CS is a useful subject, and CS50 focuses on relevant skills and concepts, and is super fun overall. There's a lot of support, and grading is different for people with different levels of comfort with CS, so prior CS experience doesn't matter.",
    "I would recommend, in that it was a valuable experience, however be forewarned that it is arduous and not always enjoyable.",
    "Yes, it provides basic skills in programming an computer science in general that can turn out to be useful in any field.",
    "While difficult, it is very rewarding. The staff at office hours are very helpful.",
    "Yes! I took this course as a senior with no exposure to CS and I am absolutely glad I took it. Was it a challenge? Yes. But I think that the experience was worth it.",
    "I would recommend this course to anyone who wanted a broad exposure to practical computer science, whether they were a prospective major or not.",
    "I absolutely would recommend this course to another student as it is the perfect introduction into computer science.",
    "I would strongly recommend this course to anyone interested in learning about computer science fundamentals. The subject matter is truly essential in the modern world and opens your mind to think about problems in a different way. CPSC 100 is a great introduction to CS.",
    "Yeah, take it! As long as you go to office hours you'll get through the psets. The hardest psets are the last two so make sure you budget time for them. It's a bit weird having an undergrad as your TA, so make sure you get someone chill who will not be awkward about it and is willing to help when you need it. The Thursday walk throughs were a bit strange. There was one day when only two of us came were sitting in SSS listening to Patrick lecture. He is an awkward enough lecturer that he just stayed on script and didn't stop or try to engage with us the whole time. Nice, but sometimes feels a bit off. Though it was very extra, I didn't regret going to the hackathon.",
    "I would definitely recommend this to students who are motivated to be exposed to a wide range of topics in computer science. The course is rather unconventional in that it teaches primarily in C, which is a very low-level language. C is frustrating at times, and definitely limited in features, but ultimately it forces you to truly understand what is actually happening in your computer when you use high-level languages like Python and JavaScript later in the course. The key to succeeding in CS50 is taking advantage of all the resources they offer. The lectures are all posted online, so you can watch them as many times as you want (and speed them up to get through the video more quickly!) They also post lectures notes and shorter videos to help you with the problem sets. Office hours are abundant (usually 9 hours per week), and the undergraduate TAs are SO helpful, understanding, and knowledgable. CS50 is challenging, and you will have to be motivated to succeed, but ultimately it is a very rewarding experience.",
    "I would recommend this course to anyone serious about learning computer science. I disagree with certain advertisements saying you don't need prior experience in coding to do well. If I hadn't taken computer science in high school, I probably would have spent all my time on this class.",
    "I already have! The perfect intro CS course...",
    "I would absolutely recommend this course to anyone looking for an introductory cs class. The class is organized really well, with the lectures being online and then having small TA sections. There are many fun aspects to the course like the weekly lunches, the hackathon and the fair. The problem sets are challenging and time consuming, but with a little organization and the help of the amazing TAs and CAs the workload is definitely manageable. Also an important part of the class is the CS50 fair, this will probably bee the first time you build a complex project from scratch which will let you see just how far you've come in the course of just a semester, as well as a great opportunity to socialize with classmates and see their ideas and projects.",
    "Take it. It is very time consuming. It is challenging. Take it nonetheless.",
    "Yes, good intro.",
    "I really enjoyed the structure of the course and found it was designed very well to promote learning.",
    "Yes, I definitely would reccomend this course! It is a great way to be introduced to the world of computer science and tackle applicable problems with fairly low stakes if you fail. One of the best courses at Yale!",
    "Absolutely, would recommend to everyone",
    "Beware of heavy workload, but this is a fantastic intro CS course. I actually learned how to code in C and Python, which is wonderful. The support system is amazing. But only take if you're willing to work hard.",
    "For CS students: yes. For non-CS students: no. Take CPSC 112, unless you want to spend 10-20 hours a week programming",
    "Yes! Anyone should have a basic grasp of CS. It truly opens lots of doors and alters the way you see the world. CS50 is demanding, but you have lots of support and fun events (CS50 lunches were extremely valuable - good food + getting to know ppl + networking).",
    "I would recommend this course to students if they have a clear reason for taking it. If a student has only a vague or passing interest in learning a bit more about computers, it will likely be way more in depth and more challenging than what he\/she is looking for. That said, if someone has a specific reason for taking it, the course is really great. They have fantastic resources, great staff, and a well-organized system. VERY IMPORTANT: if you are a student without any prior programming experience, it is essential to go to office hours early in the week, starting the very first week a pset is due. Office hours are a wonderful part of the course, and can make all the difference with how well you understand the homework.",
    "Yes, if willing to devote plenty of time",
    "Yes. The sheer amount of skills you learn in one semester makes the course well worth taking. There's also a really good support system for learning, despite the fact that you're only in section once a week. Office hours, led by a large team of student TAs, made this class very manageable since I could ask for help with the more difficult concepts.",
    "I would recommend it.",
    "This is an amazing class that provides a rigorous introduction to computer science. Although intensive, its workload is matched by how rewarding it is. CS50 is definitely not for humanities majors searching for an easy intro CS class because it might be interesting, but if you are seriously looking for a real CS class and are willing to put in the time and effort, you will learn a ton.",
    "Yes I would, I found it very enlightening. I would however warn them to be ready for quite the workload!",
    "I would! This class is tough and time consuming, and sometimes you want to pull out your hair. However, this course is practical and really expands one's ability for problem solving.",
    "Yes, you will end up loving CS50 and gain confidence in your programming skills. There are also so many additional perks like the CS50 lunches, free stuff, etc.",
    "Maybe - it depends if the student is interested in pursuing CS as a major. As a non-CS STEM major, the course was too in-depth and workload heavy. However, I learned a lot (maybe too much) and would recommend to people considering CS as a major.",
    "Amazing intro to computer science for those with little to no programming experience. Teaches a new and valuable way of thinking that's helpful for anyone in any academic field. Problems sets are difficult (expect to spend 8+ hours a week), but there's tons of support from course staff. CS50 is an amazing experience. Highly recommend!",
    "I would recommend this course to students who are extremely interested in computer science",
    "Yes, strong class. Recommend.",
    "Yes. Although this course took more work than many of the courses at Yale, once you get through it you learn a lot.",
    "Would recommend it if you have some previous exposure to comp sci cuz this course is really going fast; the coursework is demanding but also exploitative so you will learn a lot of solid skills but you need to input a huge amount of time",
    "Yes definitely, it is a fantastic course and a great introduction to computer science. A super heavy workload- but pays off at the end of the semester when you realize how many things you have learned in a mere 3 months. If you are looking for a course that will challenge, excite and teach you a lot- I highly recommend this course.",
    "Absolutely. Course Material Important and interesting course material that is relevant to the world tomorrow. You get to learn coding, and might even change your direction in Yale. Instructors David Malan is an amazing teacher, who is very clear in instruction. Even when not clear, video lectures with subtitles and playback capability make it very easy to pick things up. Community Big sense of community with course wide events: Hacakathon, Puzzle Day, Fair",
    "DO NOT TAKE THIS CLASS. I've been here for 5 semesters, and this was hands-down the worst class I've ever taken at Yale. I've learned some programming on my own before, and I learned more then than I did with this class. The lectures can be nice if you like learning from a video, but if you're like me and you prefer having a real teacher in a real classroom, definitely don't take this class. It isn't even a \"flipped classroom\" style of learning because a flipped classroom would imply that an in-class portion exists. There is no in-class portion. Practically everything (aside from section and office hours) can be done from home, for better or for worse. The amazing TF's were the only things that made this class bearable. I literally hated every second that I spent with this class, and I am ecstatic that I no longer have to do anything CS50 related. The weekly problem sets took me upwards of 10 hours to do. This is the kind of class where they expect you to be all \"CS50 is life!\" but they forget that this mentality is kind of a lot to ask when you have 4 other classes, a student job, and other responsibilities. Taking this class Credit\/D\/Fail was probably one of the best decisions I've ever made. But then again, that's not saying much because taking this class was probably one of the worst decisions I've ever made. Do yourself a favor and stay away from this class.",
    "Take this course if you are genuinely interested in computer science. If you just want to fulfill a requirement or just want to learn a little bit of code, this is probably not the course for you as the workload is very great.",
    "Take it if you are seriously interested in learning good programming, it is worth it. Allocate a great deal of time to it. (Consider credit\/D\/Fail",
    "I would except I would definitely let them know HOW MUCH WORK IT IS.",
    "Definitely take, CS is important and its nice to get through this course",
    "I would recommend this course to another student. I think every student, no matter what field they are in, should take this course. CS50 is an experience and the skills you gain will be important throughout your life.",
    "I would recommend it to a student. It is a difficult course but it is worth it.",
    "I would recommend it to anyone who is willing to put in the hours",
    "Take this course if you are willing to put in the time in doing challenging problem sets every week and are willing to dedicate lots of time to one class. The time and hard work will pay off because you will learn a lot from one introductory course.",
    "100%. It's fantastic."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "100",
  "section": 1
 }
}