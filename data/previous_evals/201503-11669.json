{
 "crn_code": "11669",
 "season": "201503",
 "legacy_coursetable_course_id": 34094,
 "enrollment": {
  "enrolled": 273,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC305",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    0,
    4,
    65,
    150
   ]
  },
  {
   "question_id": "YC306",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    17,
    23,
    48,
    67,
    63
   ]
  },
  {
   "question_id": "YC307",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    48,
    160
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC304",
   "question_text": "How would you summarize ECON 111 01 for a fellow student? Would you recommend ECON 111 01 to another student? Why or why not?",
   "comments": [
    "I appreciate what they were trying to do with the course, and in the beginning it felt a lot more doable. However, when people realized how useful office hours were, everyone was coming and it went from having ~30 students for ~10 TFs to having 200 students for 10 TFs, which meant that you could rarely get actual useful instruction and 1-on-1 help. That being said, it was absolutely the willingness of the TFs to help that made the course bearable. During the lectures themselves, it felt as though they wanted you to learn computer science in the same way and infant learns a language. That is to say, we heard a lot of \"computer speak\" and were expected to kinda just absorb it all. However, when an infant is doing this and messes up some grammar, they're still generally understood. If you mess up some computer syntax, you have a miserable existence because nothing works and you have no idea how to fix it. Also, no one understands how grades work in this class. Every problem set has a few elements (scope, correctness, design, style) that each get a grade 15. However, a 3 isn't a 60%, it's a \"good.\" And it doesn't actually matter what you get on the psets or tests or anything, because you're only graded against your own progress. But then you're also graded against others with your comfort level... I think you get the point",
    "Overall yes, but be ready for the the workload. Even though it's hard, you end up learning so so much in the end.",
    "A great course in which you learn a ton. Beware though that the workload is pretty heavy",
    "DO NOT TAKE THIS CLASS. After hearing about how revolutionary and awesome this class was from CS50 staff, I was extremely disappointed with the class overall. Although I wasn't using this class for my major or distributional requirements, I put more time and effort into the weekly problem sets than I did into any of my major courses. The class also moved waaaaay too quickly for those just starting out in CS. The first 6 minutes of lecture (live-streamed) were wasted by a DJ's performances. Seriously, take 112 over this class.",
    "This class is a lie. They will tell you \"Oh, it's so easy and fun to learn CS!\" and lure you into signing up with cake and two problem sets that will seem \"easy and fun\". This class will ramp up fast, and you won't be prepared. Each week will be \"the hardest problem set of the course, but it'll be the last one, we promise!\". Expect to spend 20+ hours a week on a problem set if you've never coded before, spotty help from TFs at office hours because of the number of people in the course, and a lecturer who talks so fast that you'll have to watch it again anyway on your own time. Don't even think about taking it as a \"fun fifth class\" - it's not. Honestly, don't bother unless you NEED it or you're already super involved in CS.",
    "Super hard - be ready to work 20 hrs a week on this. Probably not really worth it, as a grad student, to just go to lecture. You won't be able to talk about this class in an interview or think about putting down skills on your resume unless you actually commit to the psets.",
    "Take CS50! This is the only class I've ever openly encouraged my peers to take, and for good reason. The class is challenging, engaging, well-designed, fast-paced, and fun. You will definitely spend a lot of time on the problem sets, but they are well worth the effort. The class is totally manageable so long as you don't procrastinate and take advantage of the many resources at your disposal. Check out cs50.yale.edu to get a flavor of the lecture material in advance, if curious.",
    "Yes, everyone needs to learn how to code in this world, so just do it the hard way. It's a great class, you will learn a ton, you will hate it a lot of Thursday nights, but it pays off quite well.",
    "Absolutely. 1. You want to learn how to program, and want to get a comprehensive course. 2. You receive as much attention as a student as you will ever receive in a class. 3. You can not go to class and watch all the videos at your own pace and learn a lot. 4. It is fun. 5. There are so many incentives to do well. 6. It is very useful for general process-oriented thinking, regardless of whether you want to code. 7. So many resources--from staff people to lunches to options for students for the final project. 8. It is hard, but it is doable. But also here is the bad: 1. It is way way way more work than you imagine. The hardest problem sets would take me close to 15 hours. 2. The Quiz is IMPOSSIBLE. I arguably studied a lot and was close to the mean or just above in both tests. BUT... Make sure you ask about your grade to professors because what could seem like a C in real grade (60%) is actually an A. You never know.. 3. And that is a general criticism for the class: grades are not too transparent. They say that it only matters how you did compared to yourself, and it is unclear what that means until you sit down and go through your grades with a professor.",
    "Take CS50 if you want to do some computer science and think you'd be reasonably good at it! If you don't think computer science is your thing, you might want to avoid because it could end up being lots of work.",
    "Absolutely terrible. Walk away from your computer now! Just an anxiety inducing stress bomb that ruins your semester and makes you unable to focus on any other classes let alone your personal\/social life.",
    "CPSC 100 - CS50 is many things. A lot of people will tell you that it is too hard and that you shouldn't take it if you don't like CS\/QR. I had an interest in CS but had never taken any classes before, and for someone like me, CS50 was a perfect class. It was engaging and very fast paced - although people say this left an imperfect foundation, I think it shows you the practical uses of CS before you have to learn all the theory and such later on. There are so many resources and SO MUCH help available if you need it, so don't be discouraged if you think it will be hard - it is challenging, but it is very fun. All the fun events during the year (Puzzle Day, Hackathon, Fair) make it even more so.",
    "Don't take it. You learn a million things and have no time to process any of it",
    "If Malan's still teaching it, think twice. But if Yale's taken it over, take it. There's a lot of awesome material there, all it needs is our particular bend of common sense.",
    "It wasn't designed for people who are not unreasonably passionate about computer science. I frequently felt like it was an exercise in trying to catch up with my peers who were loving every minute of the experience. This is an introduction class that ought to cater more to introductory level students. I liked how CS50 talked a lot in the beginning about how it doesn't matter how much computer science knowledge you have, but then it rapidly aborted that path. Quickly the class became a marathon, an experience that had absolutely everything to do with how much background knowledge you had coming into the course. Those who could quickly grab the concepts sped through psets and excelled on the midterm and final (fictionalized as \"quizzes\" on the syllabus) while I struggled to understand basic ideas presented in lecture and expounded upon in section, much less how to implement them in code. The structure of this class was completely divorced from how it was advertised and run in its inception in September. That was not what I signed up for. All this being said, there was definitely value to having taken this course. It was not a complete waste of time, energy, and brain capacity. I learned computational thinking and assertively state that I completed many problem sets and (sort of) understand many different computer science languages. I guess just hearing what other people have been doing with their time, both academically and personally, and comparing it to me agonizing over arcane errors for hours into the early morning really makes me wonder if this class was a wasted credit. Don't take this, it's not worth finding out the answer to that.",
    "CS50 is one of those classes where you get out exactly as much as you put in. The learning curve is super steep. CS50 is extremely well run and is a fantastic introduction to c\/computer science. That being said, I wouldn't recommend as a credit\/d course unless you have some prior coding experience\/are a STEM major. The course does a good job of looking fun, and that fun isn't just propaganda, but they don't exactly advertise how much sheer work is involved.",
    "I would recommend it as long as you are going to be willing to put in the time and work. It's a very demanding course, but it's totally doable and very rewarding. Expect to spend about 8-12 hours a week on the psets, but there are plenty of resources available. Go to office hours early in the week",
    "A very practical introduction to programming, with excellent support structures (section, walkthroughs, office hours, CS50 Discuss) available. Incredibly challenging -- will take easily 10 hours out of class a week to stay on top without previous experience -- but rewarding and gives you a very practical skill, and gives you the skills to self-teach other languages.",
    "TAKE THIS COURSE. It was highly advertised on Yale campus, and for good reason. It's a great intro CS course, and builds a great community to learn in. I came into the course with no CS knowledge whatsoever and have come out of the course want to take more CS classes. It's not an easy course, so don't take it on thinking of it as a great easy 5th class. You will put a lot of work into the psets and it's going to be frustrating. However, there's so much support for you to do your best - office hours Monday - Thursday, 90 minute sections, tutoring. Honestly, this course wants you to learn as much as you can and enjoy it as best as you can. If you take full advantage of the resources you'll be fine.",
    "This course was one of my favorites at Yale. I am a senior MCDB major and decided to take the class for fun without any coding experience whatsoever. The experience proved to be both immensely challenging and a lot of fun. I feel that I gained a much more articulate understanding of many general aspects of programming as well as the confidence to learn new coding languages and concepts on my own. The course has a large emphasis on self-directed learning. You can basically complete the entire course from your room if you want, watching the lectures and instructional \"shorts\" online. That being said, you will want to go to office hours several times each week because the psets are virtually impossible. Find a good group to study and work with. Even with help, the psets may take you more than 10 hours every week to make sense of. Because of this fact, CS50 may not be a good class to credit\/d. You will need to invest a huge amount of time in the course just to get by. If you need a good 5th class to add to your schedule, do NOT think that adding CS50 as a cr\/d option will be easy. However, if you put in the time, it may be a fun and useful experience. tl;dr lots of work but a great, fun class; don't be afraid to take it with no coding background whatsoever if you have a light semester workload otherwise",
    "Intro coding. First half of the semester: basic programming logic, computer quirks. Second half: some common languages, plus a final project. I would recommend CS50 to a student looking to learn coding and basic web dev and related topics, but I would then follow up with a warning that computer science is a very binary topic: code either works or it doesn't, and it's difficult to tell how much time one puts in on the problem sets, and it's difficult to get code working, so be prepared to put in hours on the problem sets which make up the entirety of the measurements of where you are in terms of understanding the course topics.",
    "This course is a LOT of work and you definitely need to make sure you have the time to complete it. There is a learning curve at the beginning of the course, but once well into the semester things become a lot easier, just by the nature of the material. That being said, I learned so much from CS50 and do not regret taking it. The community and the learning environment were great.",
    "I had never done any sort of computer science before and I learned a lot in this class. Don't let it fool you, though, this class is a lot of work. I spent at least 10 hours per week on the psets, and office hours were often understaffed. In a class where so much independent work is expected, more one-on-one help would have been good. I'd say CS50 definitely annoyed me with its gimmicky, cult-y style, but in the end I ended up gaining a really valuable background in code. So if the cult appeals to you, or you're willing to ignore it and put in the work and just get a crash course in coding, totally take this!",
    "Ah, CS50. At this point, you've probably heard mostly horror stories. And they're partly true -- this is a hard class (harder than I think the CS50 heads let on at first) and one that will challenge you each week. But it is designed in such a way that you are given JUST enough help with each problem set that you're able to tackle it if you put in the work. Add in office hours and the help of the TA's, and you're well on your way. And at the end of the semester, assuming you did all the psets to completion, you'll be absolutely blown away by how much you've learned. If you're willing to put in up to 15 hours a week (for the hardest problem sets) and you actually want to learn programming, then this is the course for you. Seriously, I don't think I've ever taken a better-designed course that teaches so much so fast. As an aside, I think it's important to point out that some people go into this class with no programming experience at all, and some go in with a fair amount. I was somewhere in between, as I had self-taught Python the summer prior. This definitely gave me an advantage starting out in terms of the time it took to finish psets, but that advantage all but evaporated by pset 4 or so. CS50 also groups you by experience from the outset, so that's taken into account. At the end of the day, though it might be helpful to run yourself through some Codecademy over the summer if you're planning on taking CS50, definitely don't refrain if you're brand new to programming. The help is there for you, I promise.",
    "CS50 is a great course, and you should definitely take it if you want to learn how to program! Be warned though - problem sets require a lot of time (around 4-15 hours a week). Even though most lectures weren't here at Yale, it was nice to be able to learn on my own time and pause and rewatch lectures if I needed to. There were also a wealth of resources available online (lecture notes, slides, code, recordings of sections, study material, video \"shorts\", class discussion page, etc.) so you'll have all the support and material needed to do well in the class. The exams are pretty difficult and long, but you get a cheat sheet and everything's curved so it's okay in the end. I definitely learned a lot this semester and I now have a website to show for it!",
    "This class is hours of work. With the exception of the first two problem sets, all the problem sets will take more than 10 hours to complete. The midterms were enormously different from the course material, and the cultishness of the class was more pervasive than the actual material. I wish I hadn't taken it.",
    "Recommended if you actually want to work and learn how to program. Requires a big time committment- NOT for people who just want a QR class or an easy intro to comp sci.",
    "Fantastic class. Compared to CPSC 112, I left CS50 feeling like I actually had a grasp of what computer science entails and knew how to utilize online resources to become a better programmer in the future.",
    "Challenging but rewarding.",
    "Definitely take - it's very important to have coding\/comp sci skills, and this is the best class to teach you. CS50 has a large staff and they hold office hours 4 times a week. There are sections as well, but you can watch any of the sections online, in addition to the lectures. The weekly Friday buffet-style lunches at Sitar were great - you could network with a different company's representatives every week (and get some cool gear). It's a lot of work, even for a Cr\/D (depends on how motivated you are) but it's worth it, especially if you take it with your friends. Classes end after the last pset (there were 9 total), but you have final project to complete for the CS50 fair that takes place during reading period. There are 9 psets (50% of your grade), 2 quizzes (20% each), and a final project (10%). Even with Cr\/D, there were weeks that I spent more time on the psets than work for the rest of my other classes combined. It's a pretty high-paced class, but you learn a lot.",
    "CS50 is a tough class--do not go into it thinking that it's a gut. Be prepared to work, and work hard (I spent roughly 15 hours per week on the tougher p-sets). But that being said, overall I think CS50 was a pretty good intro course to computer science. I had not had any prior programming experience and CPSC 100 was a good way to get acquainted with several languages (C, PHP, JavaScript, CSS, HTML) and to gain a basic foundation in all of these. There were definitely points at which I felt like we were learning too much, too quickly--I would have preferred to spend a little more time on each unit in order to better familiarize myself. But overall, the resources available for the course were really fantastic.",
    "I took CS50",
    "Fun but oh my god a lot of work. Would recommend if you want to do computer science or aren't afraid of hard work",
    "Very challenging. Don't take it unless you have experience with different coding languages, and unless you REALLY want to go into computer science.",
    "CS50 is bizarre. It's more of a brand than a course at all, and the teaching model is super weird. I for one couldn't learn at all from the lecture format; I stopped watching the lectures a few weeks into the course & didn't suffer from it, except maybe on the midterms, which incorporate some material that wasn't seen in the problem sets. What helped me the most was watching the instructional videos and going to office hours, where the TAs help you out. Do that, definitely. The pace of this course is really fast & they teach you stuff other kids don't learn until their third computer science class. There's usually enough help if you seek it out, but for the final project they kind of leave you on your own to build a website or an app, which is a lot. Also, the course has a really weird culture at Harvard (I've heard, and I see echoes of it here), where they make it seem like it's absolutely essential to learn these skills to survive in modern society at all. That's not cool. This being said, they get endless money from some unknown source, so there's a lot of free food and t-shirts and stuff. It's even fun at times. Definitely go to the Hackathon if you can. As a humanities major with little experience thinking in this sort of way, this class was overwhelming for me; I poured basically all my time into it, only doing homework for other courses on the weekends, and I couldn't have done it without the one-on-one help offered at office hours and section. But as hard as it was, it was also a very empowering experience; I struggled, but at the end of the day I did learn to code, and I developed a whole new cognitive skill set to boot. I do recommend it to anyone who wants to learn to code, but take it during a lighter semester -- it's worth it, but only if you can put in the work.",
    "Harder than I expected, but it was definitely worth taking! I ended up learning so much from this course, especially considering it's intro level. The lectures are not very helpful for psets, so I just watched them on my own at 1.5 speed. Section was pretty helpful, and office hours are where I ended up doing the bulk of my psets, and where I spent basically every night from Monday through Wednesday. I feel like there's no point in taking this course Cr\/D\/F, since if you put in the effort you're probably going to do decently well. That being said, \"putting in the effort\" requires at least six hours a week (to watch lectures and do psets).",
    "CS50 is an awesome course where I learned an amazing amount of information. When I first looked at the syllabus, I thought it was impossible that they could cover all of the materials. But, they do a great job of teaching students how the computer works and then working its way up from that. The flexibility that CS50 offers is great, but be sure to stay on top of things. The resources CS50 offers are incredible and its a great way to also meet so many TAs and make friends. In the beginning, it will seem like CS50 is a gut. However, do NOT be fooled. This was one of my hardest classes in terms of workload, and the problems sets are very time extensive. That being said, I think the class was extremely rewarding and I would highly recommend it.",
    "would highly recommend, if you are interested in learning introductory computer science and are willing to work hard.",
    "If you have the time and drive to learn comp sci, take it. If you are concerned about your courseload, best try another intro course or don't take cs entirely.",
    "I would say that it is definitely a course for those who love computer science, but would rather not start off with a language that delves more into theory, such as that which is offered in CPSC 201. However, while I did enjoy the class, I would leave them with a definite word of warning that it is not a gut class, nor is it very traditional, and it will absolutely take up a chunk of your mental capacity. My only near all-nighters were pulled because of this class, and while I did feel like there was some culminating result due to this course's final project (in place of a final exam, thankfully), it definitely did cause a lot of stress throughout the semester. That lent itself to it's own culture, where those who remained in the course had a mutual understanding of the difficult undertaking that was CPSC 100, or rather, CS50.",
    "This class is unique and, I think, polarizing. I liked the material being covered; in an alternate universe where I gave more time and attention to it, I liked the final project. I didn't like that Scaz basically didn't teach; I didn't like that it took a lot of personal motivation to actually go to class because of the fact that they were all live streamed and stored online; I didn't like that all of my resources were so far away from me (section on science hill and (in my case) at 8pm, office hours in Commons and at 8 or 9pm, the actual professor at Harvard); I didn't like that the midterms were exponentially more difficult than past midterms that they posted online. I really didn't like the spectacle that the class made of itself and the spectacle that everyone not in the class made of it. If you take this class wanting to learn how to code, great. Take it. I can't say whether it's better or worse than 112, but you will learn plenty, including (according to my TA) a lot of things you don't normally learn in your first year of programming. If you want to go to a class with its own deejay, great. Take it. They have one of those, too.",
    "I learned a lot from this course, but it was much more work than I expected, even though I had extensive prior programming experience. Lectures were extremely engaging. However, this course was more demanding than all of my other classes, including a 1.5 credit language class. Furthermore, I completed most assignments in less than half the time it took my friends. With the exception of the workload, this was the best course I took this semester. However, I would not recommend it to a newcomer to programming because of the time commitment.",
    "I found CS50 to be incredibly rewarding and a solid crash course into computer science and programming. Be warned: the course in its present state (fall 2015) is very misleading at the beginning; this is by no means a gut and will consume much more time than might be expected from an intro course. Expect 15-20 hours a week on problem sets. If you can cut through the cake, stress balls, and overwhelming production, and really try to work through the problem sets, you'll end the semester with a confidence to be able to extend your computer science skills and self-teach, which to me is very empowering.",
    "Fantastic Credit\/D course. It's unlike any course I've ever taken or will likely take again. Pros: You can watch the lectures on your computer during lunch, and section is optional. David Malan is a legend. Also there's so much you learn, which really puts you in a good place to teach yourself later on. Cons: HARD. Don't let the first two lectures fool you. The psets can take upwards of 10 hours towards the end, and the first quiz was significantly harder than anyone expected (including the TAs). I would highly recommend taking it, but be aware that it is nothing like it seems at the very beginning.",
    "More work than you would expect going in, but also a lot more rewarding. I would recommend the class to anyone interested in learning computer science.",
    "CPSC 100 is an introductory computer science class that gives a broad overview of a lot of languages. It's useful for anybody who wants to dip their toes in computer science, but I think I would recommend 112 for someone who is genuinely interested in pursuing computer science as a major.",
    "A time-consuming but extremely rewarding course. Will make you love computer science, despite the long and arduous psets. This course doesn't just teach programming, it teaches computer science. I would absolutely recommend it because if you want to do well you have all the resources you need: from discussion forums to nightly office hours with outstanding TAs, this course gives you so much support. Also the psets are actually interesting (but tough).",
    "This course has an incredibly high workload. No week passed where I worked on CPSC 100 for less than 15 hours. The midterms are very challenging, as are the problem sets. However, it's extremely rewarding and I learned a lot more code than I thought I would. If you are willing to put in a lot of work and time into this class, I would recommend it",
    "wow this course was a lot of work. if you have coding experience you are at a SERIOUS advantage here. very time consuming i greatly underestimated how long problem sets would take. tons of resources available for help like office hours were great every night. good overview of coding but we spent a lot of time on c which is pretty much useless, i wish we had done more javascript because that's useful in coding websites but oh well",
    "I would definitely recommend this class to anyone interested in having a broad overview of computer science. You learn a ton of material in a short amount of time and you come out of the class having valuable skill sets. Although the later problem sets can be extremely time consuming (~10 hours\/week), there is a ton of help available at office hours and there are additional walk-through videos that come with the problem sets.",
    "Don't think this is an intro computer science class. You learn far more than in 112 and at a faster pace. This is not a fifth class to fill a schedule. Make sure you have the time to devote to the problem sets each week or else there is no way to get by.",
    "CS50 is a great gateway to Computer Science. As a senior taking this class, i thought the workload was comparable to other couses(psets were not hard(except for 4 and 5) and as long as you started psets early and went to office hours, you could always finish them). I came in having taken another intro class in CS and I still felt like I learned a lot. If you think you can commit from 10hrs-15hrs of your time for this class, then take it!",
    "CPSC 100 01 is good if you want to explore computer science and what it entails, but I would be wary of taking it for a grade unless you are sure you have the time required to self-teach (which is required in order to do the psets). Thus, I would recommend it only in certain situations.",
    "I really liked CS50. I am a history major who just needed a QR and wanted to know a little something about computers, so I took the class. It's sort of like an immersion course in a foreign language, where in the moment you can feel sort of in over your head but in the long term you realize how much you've learned. Although there are some improvements that I hope they make (mostly more lectures\/events at Yale), I would recommend the class. It's challenging, but wayyyy preferable to some gut QR where you fall asleep every class. They make a big effort to make the lectures fun. Also, I basically did every pset the night before it was due (with a few exceptions) and while I wouldn't recommend it for your physical health or emotional well-being, it is possible to do that. Your life will be a lot easier if you have friends in the course or friends who know about computer science, also. I know this class got sort of a reputation at Yale for being impossibly hard. It is hard, but it's also very rewarding, and I WOULD recommend it!",
    "I thought that CS50 was a fantastic course. This was one of the few classes where I can actually point to all of the tangible things I learned over the course of the semester. Do not expect, though, that you can coast through this class and magically learn how to codecomputer science takes time, any way you slice it. A lot of the people who were dissatisfied with the course, or who ended up dropping it, were not ready or willing to commit the time that the course required.",
    "This course was extremely difficult, and much harder than any other introductory course I have taken in other subjects. I would only recommend this course if one is willing to put in the required amount of hours to complete the problem sets. I did learn a lot, but at a high cost.",
    "Definitely a lot of work. But the course itself is really well structured and the material, even when it gets a bit off track, is interesting. If you have the time to commit to it, you'll get a lot out of this course.",
    "Don't do it.",
    "CS50 is a good class, and the best intro to CS at Yale. It is much broader than CS 112, so you'll get a better sense of whether you really like computer science, and it works fine having the class taught at Harvard. It is a fair amount of work though (not an easy class just because it's called \"50\"!), and you can't really escape doing the work by Cr\/D'ing it. Take it if you'll have the time to devote 10ish (5-20) hours\/week to problem sets.",
    "I wouldn't recommend this class to someone who has no computer science background, even though the course is advertised as perfect for anyone who has never taken a computer science class. Throughout the course it felt as thought I was learning more on my own and in section than I ever did in lecture, and though that may work for some people, as someone who had never coded, I felt overwhelmed.",
    "A cautionary tale: CS50 is very good at advertising, so be very careful to think about if 1) you are truly interested in CS, or if you just think it would be a \"useful\" skill to have and 2) if you have 15+ hours each week to dedicate to this course. Pros: -very well run course. A plethora of resources from the staff to videos shorts to office hours almost every day to lots of food. All the information you need to succeed is out there, you just need to put in the effort to use it. -covers a lot of material. Covers more ground than most intro comp sci courses, so you will definitely learn a lot if you put in the effort. But like any language, if you want to learn how to really program, you would need to take more courses in CS or self-teach yourself. -everything is web-based (mostly): which allows for a great deal of flexibility as to when you want to watch lectures. -TAs are undergrads. This is good if you have friends that are TAs, otherwise, you're somewhat at a disadvantage because having a TA on hand will save you in this course. -Pretty good curve. Lots of people take it credit\/d and some people don't even hand in all the psets, so if you do, you're in pretty good shape. -Has that tech\/nerdy-chic\/Sillicon Valley vibe. Good if you're into that sort of thing, because Yale has no stem community, really. Cons: -covers a lot of material: too much too fast so it is easy to fall behind and move on to the next topic without you fully understanding the previous material -lots of work: expect to spend a lot of time on the psets. A LOT OF TIME. As in, more than all of your other courses combined. -the course says you don't need programming experience, but expect to struggle twice as hard if you don't. -very self-selective. A lot of non-sciency\/mathy ppl dropped because there is a steep learning curve. As in, I don't see how some people who hate QRs could keep up and I straight out didn't recommend this course to my friends that I know hate science\/math. Most of the people left were either over-eager freshmen or people with quantitative backgrounds or just people that viewed the course as a sunk cost. -shopping period is not a good representation of the rest of the course. It's challenging in the beginning and then things turn impossible. Beware.",
    "CS50 a fabulous introduction to programming and computer science. It is the hardest course Ive ever taken. Whether a major or not, I recommend that all students take this at some pointchoose a semester for which the rest of your load is relatively easy. I had never seen code before starting this course, and now I do coding projects for fun(!) and am looking to take more CS courses during my time here. If you take the course, you will be quickly impressed by both the amount of work youre getting and the amount of resources the course is providing you with to accomplish that work. The key is to use these resources effectively. Ill say now what worked for me. Watch the lectures slowly, having downloaded the source code into your IDE (your online coding workspace). Anytime Malan references that source code, showing you how it works, take the time to pause the video and get the code working in your own IDE. Then, when you go to do the pset, youll have a bunch of working examples which you can incorporate parts of! This small investment of time saved me hours when doing the psets. The same process is useful for the shorts (the videos placed at the start of the psets). CS50 discuss is useful. Office hours can be useful, but go early in the week, otherwise it can be overwhelming with the number of stressed kids trying to get their psets to work. Then there are the quizzes. Theyre hard, really hard. Cynically, however, you dont need to outrun the bear, just the other kids who are also running from the bear. There are many past quizzes online. Take as many as you have time for. Check the solutions, and understand them. If you do this, youll do fine. Good luck!",
    "This class is hard. Sure, its non-guttiness was not made abundantly clear during its publicity campaign, but they had been training and preparing a staff of 40 for an entire semester, so it basically had to be an enrollment success. Anyway, as the workload numbers will surely show, it is no nonchalant fifth class. What it is is as solid an introduction to computer science and programming concepts applicable to all other things in computer science you may engage in (website design, Matlab, R, phone apps) you could ever ask for. The student TAs proved what we have been suspecting all along and other schools have already shown, that there are literally zero reasons, quality-wise, not to hire undergraduate TAs. The course is highly self-directed, meaning you could go through the whole 9 psets, 2 quizzes, and final project never knowing what David Malan looks like, but by the same token, you have to be proactive about starting the work early and reaching out to your TA, to the heads, on the dedicated online forum, CS50 Discuss, to Stack Overflow, etc. when you need help. The way this class was billed to me was \"If you're going to take just one class in computer science, this should be it.\" I think that's accurate - but if you do it early enough, you could equally as likely find it was a jumping off point to explore more in the subject. In not that many years it will be almost unacceptable not to know something about computer science, so take the chance to enroll in this excellently organized and structured course now!",
    "We have a long way to go for CS50 to become Yale's. This year, it was definitely Harvard's course, hosted on our campus. But I think this is a great first step for our CS department, because no other intro CS course has had nearly as much hype. I would encourage people to take it because of the excellent support system, if their other courses aren't that work-heavy.",
    "aaahhhh cs50. you'll learn a lot. probably the best intro course you can find for cs. take it if you're willing to work hard. this is NOT a walk in the park. especially if you have no cs background it will be REALLY HARD. but there is also a LOT of support and different resources, much better in that regard than any other class at yale. If you're looking for a class that's not too bad to learn some about cs, DON'T TAKE THIS. if you really want a strong cs foundation and are ready to work, DO TAKE THIS. It is very rewarding but just be aware of what you're getting into. Talk to someone who took it. There will be pain, but pain isn't always bad. Pain makes you grow. Growth is a central part of college. Believe in yourself. You are loved.",
    "CS50 is really hard, so I would not take it if you are looking for a fun and easy way to learn how to code. If you want a challenging and rewarding class to teach you basic programming, its a good choice. The TAs are awesome, so dont be afraid to ask for help. The problem sets shouldnt be bad if you start on them early and they really do teach you a lot.",
    "CS50 is a solid intro course to programming and computers in general. The content is interesting but manageable. The quizzes are also not excessively difficult. At the same time, be wary of the amount of work the psets require. This is not a class to take as an easy fifth class, and easily takes up the time of 1.5-2 normal classes. If you have the time and are interested in the subject area, I would definitely recommend this class.",
    "This is a great course if you're willing to put in the necessary work. Depending on your prior knowledge of computer science, problem sets can take anywhere from 1 to 20 hours to complete. Lectures are enjoyable and fun to watch (they show lots of cool examples and real-world applications of the material being taught), which makes the 50 minutes go by very quickly. However, the lectures only teach the new concepts at their most basic level. In order to really learn how the actual coding is done, you have to learn it somewhat on your own. There are a number of videos to watch at the beginning of each problem set that go into more depth, as well as many other resources on the CS50 website (most importantly CS50 Discuss). In order to succeed in this class you must be very self-motivated and genuinely interested in learning computer science, but the class is very much worth taking. If you keep up with the intense course load, you come out of the class having learned a ton of not only CS but also creative thinking, which provides a solid foundation for the future.",
    "CS50 is a fantastic class. It is an intro class, and it is definitely fun, but it is also quite intensive and time-consuming. Although psets can take up to 30 hours a week, they are still manageable, and there is plenty of resources and help. And so, if you are really interested in the topic, and ready to take a bit of your time out for the class, this could be a really fun and inspiring class for you. A big tip: take it with friends. One of my best experiences with CS50 was going through all the classes and work with friends, and it was a great bonding opportunity.",
    "Think hard before you take this class, there are serious pros and cons. Pros: You will learn a lot of super important and applicable things. Not only will you learn how to code but you will learn how computers work, which is super important. It's a fun and communal experience. You will make friends with you TAs, and with people at office hours. Everyone is really supportive, and that is by far the best part of the course. Cons: It is really difficult, and will take up much more time than you expect. I also thought it was pretty stressful, because often there is a bug in your code that you just can't find, even if you understand what you're doing. It's a really good class, but an incredible amount of work. Don't take it on a whim.",
    "You will probably want to drop. Please don't if you can handle it. It is a struggle to get through, but on the other side you will be happy you took it.",
    "I'm torn about CS50. There are some great aspects to it, but also some frankly disturbing ones. I think my experience is the result of my specific background though. So if you are also considering taking five courses and are relatively new to computer science, read on. The good side: -the course is fast paced and covers a lot of interesting material. -the TAs are \/*all*\/ friendly, kind and knowledgeable (though not always helpful). -there is an incredible energy pulsing throughout the semester. -it finishes kind of early. -finishing the homework, when you do, is always rewarding and satisfying. The bad side: -the workload is \/*insane*\/, especially if you are trying to do well in other courses and CS50 is not your top priority. Think a solid 4 hours per night from Monday to Thursday for each pset, each week a pset is due (that's almost every week). -the grading system is opaque: it is difficult to know exactly how you are doing at any point during the semester. The link between each score you receive and your final grade is never defined. It is exhausting to worry about, and you will worry about it because the scores are often far from perfect. -the course is run like an evil corporation. Think TAs on strict contracts, branding all over the place, plenty of circle jerking all the time, automated emails sent by bots. It was tiring and frankly scary at times.",
    "Intro to C, not intro to CS. Definitely not simple for those who have no prior knowledge of computer science, many people dropped the course because of difficulty and time required.",
    "By now CS 50 has gotten a bit of a bad rep on campus. Some of the psets are ridiculously work intensive but things do get easier once you get past C. I would only recommend the class to someone who is seriously interested in computer science because the workload is on the heavy side.",
    "CS50 was an incredibly challenging and time consuming class. The problem sets took 10-15 hours to complete every week and I was at office hours almost every night. I would recommend this course to students who are interested in being exposed broadly to computer science and are willing to put in the time. Given that we covered so many topics so quickly and in such a short time, I don't really feel as though I have walked away with concrete skills that I can really use. Instead, I feel I have gained an understanding of programming and computer science, which I think is very valuable, and exactly what I hoped to gain by taking one computer science class. That said, I'm sure if I went on to take more computer science courses, i would find CS50 did prepare me with a strong skill set.",
    "I would only recommend this course to those who plan to major in computer-science-related fields and to those who truly have a strong interest in the field. This course is certainly not easy, and taking this course for a grade is not a good way to simply explore the computer science and programming field if that is what the student intends to do, as it is very, very time-consuming and demanding. This course was initially presented as a fun, laid-back course but quickly became increasingly difficult as the weeks went by. The lectures were not always very helpful in teaching the material, and often they were weeks ahead of what was necessary information for the problem sets. There always seemed to be a disconnect between lecture and problem sets, and this probably contributed to why many students did not attend lecture often as the weeks passed. All of the concepts and teachings pertinent to the problem sets were presented in the problem sets themselves, and notes offered about the lectures and problem set specifications showed to be more helpful than the lectures themselves. The course also tried to squeeze in way more computer programming concepts than was necessary for an introductory course, and this caused the course to be very difficult for many, which led to many dropping the course as well. Overall, this course demanded way too much from students way too quickly, and did not have a very effective teaching method.",
    "My problem with the class is that it was not what was advertised. The cake IS a lie. Just because the classes are streamed and the first pset is so simple and they play music before every lecture does NOT mean the class is easy. Expect psets that take the whole week and some difficult concepts. Because you don't actually have to show up to class, it is very easy to forget to watch the lectures and have NO idea what you are doing. Honestly, you learn A LOT, but it was kind of miserable because we had NO idea what type of class it was going to be. I think the class is fine, but you have to go in with the mentality that it will not be easy and that you will have to put work in. DO NOT be fooled by Malan's charismatic personality.",
    "Take it! Wonderful class - you will gain substantial skills in the fundamentals of programming.",
    "STAY AWAY FROM CS50. Once again, I will say... STAY THE HELL AWAY FROM CS50!!! 1) The pace and workload of the course is way too intense, and if you are someone who has never taken programming before it's flat out unrealistic. Don't fall for the \"70% of students who never took a CS course before\" BS because I'm warning you this class is seriously NOT worth the amount of stress and tears you will shed. So reason number one: The pace and workload is unrealstic. 2) READ THIS OP-ED. It explains SO MUCH and I wish I had known all this BEFORE taking this darn class: http:\/\/bit.ly\/1OZB95C 3) You've been warned. Stay the hell away from CS50. There are other ways to learn CS. CS50 is more like CS500 and they also conveniently don't mention the fact that it's actually a \"Super Intensive Introductory\" course.",
    "The course is challenging but rewarding. I learned much more in this class than I expected. The problem sets took probably 5-10 hours a week depending on comfort level. The two quizzes are difficult, but it seems that a poor quiz grade won't necessarily tank your final grade for the class. Which brings me to my only real complaint--the grading is very obscure. All grades are evaluated at the end of the course and there is no curve or grade cut-off. If you are concerned about your GPA, I would recommend getting in touch with the course heads during shopping period to discuss the grading--I still don't understand it.",
    "As someone who entered this class with no prior computer science or programming experience, this class gave me an incredible background and foundation for exploring other areas in this field. However, it seems as if many students were not aware of the large amount of time that needed to be devoted each week (including me) to the problem sets. Be aware that while this class can be very rewarding, the material is taught at an extremely fast pace and often half the struggle of the pset is just understanding what to do. That said, I learned an incredible amount and I don't regret this class despite the 10+ hours spent each week laboring and stressing over the psets.",
    "Beware!! The first two weeks will be utterly unrepresentative of the amount of effort required by the weekly problem sets. CS50 is terrifyingly intensive. On average I spent half of a day for three days for every week's problem set. Please be very sure about what you are getting yourself into! This is not an easy course, and it is very tough.",
    "Overall, I'm glad I took the course for the skills I taught myself and applied through problem sets. I'd recommend that all student's take a CS class before graduating. However, the course is more of a \"cult of David Malan\" than a high-quality college course. His self-involvement and obsession with the course's image detracts from instructional quality.",
    "CS50 is a class that tries to make Computer Science most accessible to those who haven't been that exposed to it. Well, it doesn't really do a good of that. The cake is a lie. They pull you into what is probably the hardest class I've ever taken. It is an excellent exploration of the various tracks of Computer Science and each of the lectures are interesting. It's a practical addition to Yale's highly theoretical CS department. It's equally split between Harvard and Yale and overall a good thing but just beware you'll definitely need to be motivated to do well.",
    "Yes. If you are interested in getting a sense of what computer science is like, this is a great class. The lectures are engaging, the material is interesting, and there is a really wonderful support network for questions\/psets (TA's, sections, office hours four nights a week...). Overall, a really great addition to Yale's computer science curriculum!",
    "This course is a very thorough introduction to computer programming and web development. Students learn many computer concepts that are hard to forget and will stick with you. Additionally, you'll be able to take many skills from this course that will allow you to start designing your own programs and websites. I would definitely recommend this to any student who is interested in computer science but has not yet had very much exposure. The course work can become difficult, but if you're willing to put in the work and really enjoy learning the material and getting your hands on code, it's definitely worth it. You'll learn a lot and the course itself is an awesome experience given all the resources dumped into it. Cultish? Sure. But it's fun",
    "This course is quite challenging, but I would definitely recommend it since it serves as a great introduction to Computer Science, especially for prospective CS majors.",
    "Take it, but be ready to spend 10+ hours on psets each week. I had never really bought into the \"teaches you a way of thinking\" thing that liberal arts courses love to market, but this was really the first class where I felt that I was thinking in a uniquely different way",
    "Great intro class, fun. Take it for the experience but be prepared for the long psets",
    "CS50 was incredibly successful at introducing someone who has never attempted programming to a breadth of the exciting exercises of computer science. It did not feel like a painful compulsory introduction course for a major but rather a survey course that all undergraduates should take, regardless of their interests. Although I did not have success with every PSET, and at times found them frustrating (I hope they are improved in later versions of the course), I saw my ability to program on my own improve dramatically. By the end of the course, we had proficiency in three languages. The final projects were incredibly significant in demonstrating the progress everyone made; and how rewarding to have a tangible product from the course: a webpage designed on your own!",
    "DO NOT TAKE THIS CLASS ESCAPE WHILE YOU CAN",
    "The problem sets were interesting and covered a variety of different topics. Overall, I'd recommend this class to a student, although I would warn them about the amount of work required to do well and get the most out of the class.",
    "This class is definitely not tailored for beginners. Even in the \"Less Comfortable\" section, I was drowning in pointers and memory leaks. I would have tried to swim if I knew which was the surface was. They make it seem like a fun class (with loud music and cake here and there), but as giveaways the instructors provide stress balls. Any class that provides stress balls is a class that should be approached carefully. If you really, really feel comfortable with the subject and are ready to invest your time, CS50 is awaiting you.",
    "Nope, i don't recomend it.",
    "This is CS. It is hard to learn if you don't already know some of it. This will devour endless amounts of time. Take it Credit-D. The \"quizzes\" are REALLY HARD. But do try it out. It's a fun class, but save yourself the grief and take it Credit-D.",
    "There are only two things you need to know about this class: you will do a LOT of work, and you will learn a LOT about programming. I had no experience with programming or CS at the beginning of the course and I now know enough to consider a 200-level CS class or to jump into a project of my own. Most of the learning you'll do will be through the problem sets, so you have to be ready to learn by trial and error, by Googling the issue, and by going to friends or office hours to ask questions. I spent 10+ hours a week on every problem set except the first, most of those hours in picking apart weird bugs in my programs. To my surprise, I loved it - and you will too, if you have time in your semester to get into the work.",
    "A lot more work than you might expect, but you will learn a lot about computers and programming.",
    "Amazing learning experience! It is a very demanding course, but the content is very interesting and the course's infrastructure is great! The lectures are great, the sections are useful and the office hours are very important as the problem sets get more complicated. Definitely worth taking if you want to know a little (or a lot) about computer science!",
    "A hard introduction to computer science.",
    "A lot of work, and should be taken into consideration that one shouldn't take it with another high-workload course.",
    "The class is useful as a starting point for CS. You begin to develop a lot of different skills but don't really solidify any of them because there are so many topics. Because of that I think this class is a good intro if you are going to go further into CS and actually develop some of the skills you start. My only problem with the class is that it represented itself as low key and a lot of fun, when it should have been straightforward about the fact that sometimes you were going to hate it, and that you need to spend a LOT of time on the psets and use ALL your resources every week. Know what you're getting into, and make sure it's worth it for you.",
    "To take from the quote on cs50.yale.edu, something like \"Demanding, but definitely doable.\" They will try to entice you with cake, music, and a DJ, but just know what you're getting into before you start. The lectures are fun and sections are helpful, but it's a rigorous course because the problem sets take the most time. Luckily, there's office hours almost every day where you can get a lot of help and finish the problem sets much faster. You will make a lot of friends sharing in the struggles, though. The camaraderie is amazing.",
    "Difficult but fun.",
    "A bit disorganized and very broad, but still informative and somewhat fun. (You also get a free t-shirt and cake.)",
    "lots of work on psets and going to office hours seemed like a must every week. lectures stopped after thanksgiving. felt very startup-y in terms of lots of things and happy and coding and lots of resources but fast moving",
    "I would recommend CPSC 100 to a student who is willing to put in the time and effort to code.",
    "I learned a lot but there was an insane amount of work. Not too hard just a lot of time.",
    "A lot harder than they advertise, but an incredible introduction and overview of programming for those interested in becoming computer literate.",
    "This is an excellent course and taught me (with absolutely no prior computer science experience) some coding basics. I'm glad I took this course, because I am now more familiar and (dare I say) comfortable with languages that seemed pretty foreign at first, like PHP. That said, I spent waaay too much time on this course, given that I was taking it credit\/D, just to stay afloat. The problem sets are cool but incredibly incredibly time-consuming--some took upwards of 20 hours. I wish the difficulty and length of the problem sets would have been stressed in the opening weeks of class.",
    "CPSCS 100 gives you a working knowledge of computer science through hands on practice that gives you the foundation to learn many other languages and aspects of computer science.",
    "I would not recommend this class to a fellow student. Looking back to the unnecessary stress and all-nighters this class caused, it is not a class I would take again. I truly felt deceived by the way the class was advertised and each week I regretted selecting the course. The assignments each week are beyond the scope of the class and involve quite complicated code that was never actually taught in class. If you really are interested in learning programming, there are better ways to learn it.",
    "I would never recommend CS50 to another student. It was a terribly organized and run course; we worked incredibly hard but learned very little.",
    "No, the course goes too quickly and you don't learn each topic thoroughly",
    "I would not recommend this program to a freshman or a student who has not done some form of coding\/programming. Unless to plan to spend a massive amount of time attempting to understand the material, I'd probably take another intro course, or at least not take it as you have just entered the university and are becoming accustomed to college life.",
    "You will work a lot in the beginning and have great fulfillment come he time for problem set submission. Then after a few weeks the class moves faster Han you can learn and you find yourself struggling to keep up.",
    "If you are looking for a course that is a lot of fun and will spark your interest in the tech world this is for you. However be prepared to put a lot of time and effort into the course.",
    "lot of work",
    "It will dominate your academic life for the semester, but if you can build the time I would 100% recommend it. Lectures and sections are all online, but go to section so you can ask questions about the psets, especially later when there are only 3 or 4 people there. GO TO ALL OFFICE HOURS. (That's where most of the time comes in.) Seriously, they are ridiculously helpful. Ridiculously.",
    "Only if you are ready to work hard and learn new things. May take away from other classes if you are a beginner like me. When you take it, pick the other classes wisely",
    "I loved this class. It is a lot of work, and you will end up putting many hours every week to finish the assignments, but I think it is absolutely worth it. You learn a lot, and very practical skills as well. It really motivated me to learn more about programming and possibly take more classes in the future. Don't come in expecting it will be that easy, but if you're willing to put in the work, you will learn a lot.",
    "111 READ THIS SUMMARY CS50 is great! WORKLOAD -Weekly psets, two midterms and the final project. -The psets start super simple, then get waaay harder as the semester goes by, then gets easier again after pset 5 or so. -Midterms are fine but very long - study and prepare a good cheat sheet and you'll be fine. -Final project can be literally whatever you want, so put as much work on it as you want\/can. WORTH IT? I took it with some friends and loved it - the events are awesome, and even going to Harvard becomes almost bearable with the fair, hackathon and puzzle day! Take it if you want some fun and some good memories - the course pays off for the hype.",
    "take it but start psets early and be prepared for time commitment",
    "A very challenging class that will push you particularly if you are a freshman or sophomore. However, I think it is a very good class. Furthermore, it is a class that every Yalie should consider taking.",
    "Take if you want to learn about coding, computers, and related topics. Important stuff in this day and age. The grading system is a bit unclear, but hopefully they'll work on that. More transparency would help.",
    "Its a good course but takes a lot of time commitment",
    "A very exciting and informative class that provides an excellent introduction to computer science.",
    "This is no introductory course. Be sure that you are able to spend a lot of time on this class. It can be rewarding, but it is extremely dense.",
    "CS50 is a very time intensive course in which you will accomplish a lot. I went into the class with zero comp sci experience, and found that more people had a background in the subject than I'd expected. It's not quite the beginner class it's advertised as, but it's as close as you'll get. It's very well funded and high energy, quite an experience. Office hours are in Commons and often very crowded, the CS50 fair is a highlight, and best of all the class is super collaborative and a bonding experience. However, recognize that it will take a huge amount of your time (psets took me 20 hours per week), so it shouldn't be taken in combination with many other hard courses unless you're comfortable with coding. Also, as a beginner I felt that the lectures didn't adequately explain the basics of CS, and the psets took so long that I didn't have time to understand the material. I'm glad that I now know what CS is all about, and I accomplished a lot in the psets and the final project, but I do not feel anywhere near to being a proficient coder.",
    "This is a great class where I learned a lot. However, that said, doing a cost benefit analysis, I would find that the cost equals the benefits, maybe even minimally greater than the benefits. Unless you already have a background in programming or are willing to screw around in every spare hour that you have, don't take this class unless it is credit D. It was a lot of work and time, and if you have a super busy schedule, don't even bother. Even if you take it credit D, just beware that I spent around 20 hours per week on homework alone and I was credit Ding the class. It was really nice that the classes ended a couple weeks before all the other classes, which gave you plenty of time to do your final project. The final project was really cool and I feel that I walked away from the class having actually accomplished something.",
    "I would not recommend CPSC100 to another student. I felt that while I did learn some computer science theory throughout the course, most of what I learned was in the final project-- something that was entirely self-motivated and taught. This course is a significant amount of work as well, and I did not feel that the amount of work correlated to the amount learned.",
    "I do NOT recommend this course to anyone who has never programmed before. Unless you are naturally gifted in programming logic (which most people are not), this course is going to be extremely rough. I've had near-all nighters (staying up til 5 or 6 am) when doing these psets, and those who also were new to programming had similar experiences. The Harvard prof who teaches, David Malan, is relatively engaging and a fine teacher, but what he teaches is much simpler than what the psets are like - there is a LOT of self-teaching every pset. Though there are a lot of resources, it simply isn't enough to service the hundreds of students who need help every week - office hours have long wait times and section won't get all the questions answered. Plus, TAs vary a lot in quality (I was fortunate to have an excellent TA, who, often times, was the only saving grace for this course). For those who do have programming experience, I've heard more positive feedback on this course. They've also said that this course is really not an introductory course.",
    "Take it if you have at least 30 hours you are willing to devote to CS 50 each week. The problem sets are not easy, and you will not survive without seeking outside help, which is copiously available. You will learn a lot if you never into the course -- otherwise you will be frustrated by the workload. I recommend the course, but don't take the decision lightly. Know what will be required of you.",
    "I would say it is a good intro that is a lot of work, and that you get out of it what you put in. Start the psets early, go to section, watch the lectures, etc. It is probably the only CS course I am going to take at Yale but I really liked it and am happy I can now understand basic CS stuff.",
    "I recommend the course wholeheartedly.",
    "The class was challenging and work intensive. I spent at least 15 hours on each problem set. While I learned a lot in the class, I felt that the class involved too much self learning and not enough information was taught in class. David Malan is a charismatic professor, but he glosses over topics and doesn't go into depth on difficult concepts. The problem sets are difficult and take too long, but they can be fun to do and are often rewarding. Only take the class if you are truly interested in computer science.",
    "Absolute misery. If you still decide to take this course, please know that I took 5 classes this semester and this course was more work than the other 4 combined. It's an survival test, and will challenge your persistence, determination, and tolerance to BS. Be prepared for all nighters solving problem sets, as the course goes at a blistering pace at its peak. Personally, I couldn't stand being constantly lied to by the course's heads. Every week they told us how much easier the rest of the course would be and then every week we were blown away by how hard\/how much work the week actually was. Perhaps that was a strategy to keep students from dropping the course, but honesty should mean more than retention. On the first day, don't show us pictures of smiling students, play EDM, and give us cake and then not so subtly strip that stuff away once the shopping period ends. Don't get me wrong, they can still do that stuff, but they should balance it with students telling their 4 AM horror stories of trying in vain to finish a seemingly impossible problem set. I think students should know that before signing up to take CS50, which is basically a workout program. To summarize, DO NOT TAKE this if you don't need it for your major. This is NOT something to do for fun\/to pick up a little computer science. It will rule your semester, and there's nothing you'll be able to do about it. At least the final project wasn't too bad, it was a nice opportunity to apply our skills on a small scale. Just start it early, if you choose to get f***ed by this course.",
    "Do not take it. Whatever you do, do not take this class. It's a wacky Harvard-import video screen affair that does not belong at Yale. Problem sets take near 20 hours a week and are near impossible. There aren't enough teaching staff to help you. You will be miserable. It is a cult and a nightmare.",
    "Good course, very time consuming but well worth it. Good credit\/d course for sure as a fifth course.",
    "Time consuming but rewarding intro to CS. If you can stomach the gimmicks, you can learn a lot. Plus there's a lot of free stuff.",
    "No I would not recommend this class.",
    "A sampler of a lot of programming languages and concepts. A lot of web programming etc, and later psets definitely require office hours. Start psets early in the week for sure. Lots of fun though, definitely worth.",
    "I would not recommend it. The pace is way to fast for someone who does not want to major in computer science.",
    "Don't expect a basic intro class to coding. This is a very rigorous, fast-paced intro to programming that covers multiple languages and complex topics very quickly. They say you don't need prior coding experience to take this, but it really helps. If you have never coded before expect to work much harder.",
    "Very workload intensive but very rewarding in the end. Be prepared to have very good time management skills. You will either love computer science or hate it after this course. It's a good screening course.",
    "Great course! Worth taking if you enjoy or want to try out CS!",
    "This is a very rigorous course and an amazing introduction to programming and CS. Instead of focusing extensively on one programming language like usual intro CS courses, this course rather introduced us to the concepts of programming and exposed us to many languages. We delved deep into C in a course of 6 weeks and then switched to we programming. The problem sets get harder and will start to take a lot of time. Go to office hours for sure. You will get your psets done quicker and will learn more from them. The midterms are difficult, and the second midterm is essentially a final exam. Finally, all the activities and days organized by CS50 make the class more enjoyable. It was great attending the hackathon and the fair, and I very much appreciated how they tried to make learning CS a collaborative and social process.",
    "This is sort of a introductory survey of computer science topics and concepts. I feel like I worked very hard and it was a very thorough introduction to programming, though I do not feel like I learned all that much content. I thought the course was scattered in its approach, and I do not feel like I have a very thorough grounding in any realm of the subject. However, would still recommend",
    "Great course to teach the basics. Helpful even if you are not a comp sci major",
    "Okay, so this is not a gut. Like let's not even pretend here. Any CS class will require a baseline amount of work so even though it has a ton of money that it pours into this class (yeah idk where they're getting this either) you'll have to do work! It's not terrible and pretty darn good for an intro CS class.",
    "You'll learn a ton about lots of computer science topics but it ain't easy. You definitely get out what you put in, so only take this if you're willing to put in some effort.",
    "Summary: You learn a lot. It's a major time commitment. Work with friends. Would recommend if you have time, stamina, and drive.",
    "This is an intense class. If you choose to take it, you will experience a lot of mental pain (and physical as well from the lack of sleep). Nevertheless, you will find that the amount of resources available to you is phenomenal. There is a huge army of TAs all ready to answer your questions, a large collection of short videos explaining concepts, and videos of every lecture. Prof. Malan is a great lecturer. The PSets will take you time, but is ultimately rewarding. The structure of the course is great and follows what I think is a logical progression of concepts, although it tries to cover a lot in a small amount of time. Ultimately, if you are able to endure this course, you will learn a super valuable skill. I would highly recommend this course to anyone who is interested in learning programming. However, I must caution you that despite the illusion of fun and games during shopping period, the rest of the course will be filled with blood, sweat, and tears.",
    "The course was really interesting but is not a great class for non Computer Science majors. I found it difficult to learn from live stream and much preferred when there were live lectures at Yale. There were not enough TAs, and it would have been better if the course continued until the end of the semester so we could go slower rather than lectures ending early. We learned C very well but the later languages not as much. Scaz, the course heads, and the TAs were all incredibly helpful and the material was fun to learn, but it was too intensive for people seeking an introduction to computer science without wanting to pursue the field. It requires a lot of work even if you are taking it CR\/D, and unless you work on all of the problem sets you will not fully understand the languages.",
    "A lot of work, but a lot of fun if you have time in your schedule.",
    "First pset is easy, but it gets harder from there and doesn't stop. Know what you're getting into. Watch the lectures on 1.5 speed. May the Force be with you.",
    "I would only recommend this class to a student either majoring in computer science, or is so highly motivated to learn it. The class is falsely advertised in the first few weeks, it starts off manageable and then gets exponentially more difficult. A ton of my friends got in the frustrating position of signing up, and then having to drop after the 3rd or 4th week and now will have to take more credits in the spring. The class is broken up into two sections in my opinion: the first 5 weeks being C, the second 5 weeks being other programing languages (HTML, CSS, JavaScript, Python, etc.). The first 5 weeks felt difficult but cohesive. I felt like I was really understanding C by the end. The second 5 weeks though felt jumbled, we jumped from one language to another. And in class we would get the basic building blocks, but the homework would be really advanced material, and I couldn't make the jump from the intro material to the advanced coursework. So much of it was looking up information and learning it on your own, but a ton of that was just luck of you or a friend stumbling upon the right thing. How helpful the TAs were was also based so much on luck, if you had an unhelpful TA at your table, you would be much more stuck and frustrated than if you had a TA who was more willing to walk you through the basic concepts or point you more in the right direction."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "100",
  "section": 1
 }
}