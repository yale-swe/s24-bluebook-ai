{
 "crn_code": "12174",
 "season": "201403",
 "legacy_coursetable_course_id": 28997,
 "enrollment": {
  "enrolled": 46,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    1,
    4,
    20,
    17,
    0
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    1,
    10,
    14,
    17
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    39,
    2
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "A relatively easy CS elective. The first three PSETs can be time consuming, but they are certainly doable and easily graded. Lectures were occasionally interesting, but I don't think I got very much out of them. Brian cancelled the last two PSETs and there is no final, so the second half of the course was a very light workload.",
    "We had 3 problem sets, a midterm, and a final project (no final exam). Work is very frontloaded (first problem set was significantly harder than the second and third). There was a massive period of time between the midterm and the final project where I didn't even go to class, or have to do any problem sets... Lectures are fairly easy to follow, and notes are online.",
    "definitely would recommend.",
    "Bryan Ford is really good. The class was very interesting and not very hard. Coding intensive.",
    "Great overview of the problems inherent in decentralized systems (basically, bad users) and how to deal with them. Lectures were informative and p-sets were relevant and fair. Required a lot of work early in the semester but settled down nicely after the first couple p-sets. Specs took a while to understand, but once you understand what is being requested you have a great handle on the material.",
    "Great course, interesting problem sets. It exposes you to something that you probably have never done before. The final project is what you make of it. Do something hard and you will thank yourself afterwards.",
    "Well, the course was great with Bryan Ford. How will it be with someone else? I don't know..",
    "Learn about how to create a decentralized system by building a chat client. Learn brief history of the internet, message transmission protocols, a bit of network security, and other strengths and weaknesses of these systems.",
    "I would definitely recommend this course. The material is interesting, the lectures are well-taught by an enthusiastic and engaging professor, and the assignments offer a great hands-on experience in building decentralized systems from the ground up.",
    "A good and easy class to take. There are 3 labs, a final project + a midterm (which was very easy). However! You should really spend time on debugging your labs. I screwed myself because I thought that because my application worked with a limited sample of students it would work with the TA's code. Wrong! Test a lot! It's worth 60% of your grade and many others will likely get perfect scores. The late day policy is very generous with these, which is a great bonus. On the other hand, your final project can probably be terrible and still get a good grade. I don't know how well it will be graded, but the demo session was a breeze. You produce a 2 minute demo video and then get asked a couple questions about it. There's no way they have time to look at everyone's code rigorously. As I mentioned there are 3 lab assignments. After the last lab is completed, you don't have to go to lecture anymore - the only other test of what he said in class is on the midterm which is scheduled right after the last lab is due . This makes it an ideal CS elective for those of you trying to live the #SWUGLYFE. So I would heartily recommend this as an easy CS class. Just start the labs earlier than you think you should and you'll be fine. Even with the late days (which are awesome).",
    "Nice, slightly scattered, introduction to various concepts in networking, cryptography, and security. Low on work, with three labs this semester. Great chance to beef up C++\/Qt skills.",
    "Fantastic class. Decentralized Systems introduces you to a ton of different topics, many of which are extremely relevant in CS today. Professor Ford is a great lecturer and he makes the material interesting and fun. The labs are really rewarding, although there's a pretty steep learning curve for the first one. The labs build on each other, so either be really conscious of code organization and design from the beginning or be prepared to go back and rework your code for one of the subsequent labs. The workload drops off sharply after the midterm, which is nice if you have a backloaded semester. Overall, one of my favorite CS classes at Yale.",
    "A hands-on approach to problems and applications of decentralized systems. Lectures are long and a little difficult to follow, but most of the work of the class is the problem sets and final project. Both are a lot of programming but are very rewarding. No final exam is clutch, but that means that you might not pay as much attention to the second half of lectures. A good but pretty heavy class!",
    "I would highly recommend this course if Professor Ford is teaching it, but I think he's leaving. If the course is taught the same way in the future, with the same grading curve and workload, yes, definitely take it. You learn a tremendous amount and the work is totally manageable (in an objective Yale sense, not just relative to CPSC 323).",
    "All the various concepts from NAT traversal to BitCoin were extremely interesting. There's only three psets, a midterm, and a final project (no final exam) so it's a fairly light workload as well. Be warned that the first pset takes a very long time since you practically have to build a chat client from scratch. Once the three psets and midterm are over, the rest of the semester is a breeze.",
    "The best CS elective I've taken. You'll learn about the mechanisms behind peer to peer applications and internet routing, while building an application yourself. CS needs more courses like this one.",
    "A course probably worth taking, mainly due to the material's innate worth. Though they occupied only half the semester, the three labs were serious, interesting, and in their own way as substantial as anything in 323. Lectures covered a breadth of material of obvious value both practical and otherwise. However, this well-motivated course also had an unusually large number of flaws. First, the syllabus only vaguely resembled what the eventual semester looked like; the final project was added last minute and half the labs were cancelled. Second, after the midterm, the lack of interest from anyone (Bryan, Ennan, us students) was palpable during lecture. Students would distract themselves and Bryan would go on tangents, as no one was responsible for for ensuring students learned what Bryan taught. We also used C++ and qt, which I disliked, though your opinion may vary..",
    "Ah. Great CS elective if you're looking for one. Ford is pretty engaging and it goes over some interesting topics. Only the first 3 (of 6) problem sets existed for us, and the second half of the course was just focused instead on a final project. While this was fun, it meant that most people stopped showing up after 1\/2 way through the course and that the work for the course was very front loaded.",
    "Wouldn't really generally recommend it, but if you need a CS elective, it's not a terrible one to take. Lectures are often hard to follow and assignments are disorganized and frustratingly have no system for automated testing. It gets extremely tedious to do all testing using a GUI.",
    "An interesting yet \"real computer science\" course!!! Too bad Yale CS is in such dire condition you'll never be able to take it again! My soul weeps for you. I loved this class -- that the topic is more practical and related to real life\/concrete, yet still computer SCIENCE instead of just programming (which is what the department is regressing to), was really really helpful for me, because I am terrible at understanding abstractly explained things (my in-major GPA is hovering around 2 because of other CS classes). The subject matter is interesting and relevant to real life, which you could say applies to every topic in computer science, but hey, our department...luckily, Prof Ford manages to litter his lectures with lots of realistic examples and random bits of trivia to make them actually understandable. Full disclosure, part of the reason I enjoyed this course so much might be because I am interested in the topic (I have a huge role model crush on a network engineer...) - but even without that I think anyone who is even vaguely interested in how the internet and decentralized systems (read: everything!) works would be interested in this class. Also, if Ennan is TAing this, TAKE IT. (Oh wait, you can't, snap.) He is the BEST TA I have ever had in all my classes: extremely responsive to email, and you can drop in on him randomly and he will willingly spend 3 hours explaining something to you, or help you with thinking of ways to improve your project, etc. His manner is a little eccentric and his accent can be hard to understand sometimes, but he is such a great TA I can't even. Oh yeah, workload: 3 labs (plus 2 cancelled ones), one final project. Course is VERY top heavy -- first lab was even worse than 323 bash for me, second was ok, third was kind of heavy (323-esque). Project can be something stupid and easy that we discuss in class, and you can do it in a group to make it even easier. I chose to do something different and suffered greatly (I estimate 150hours) for it, but I got a game out of it, which is kind of cool I think. It's the shittiest code I've ever written, but eh. What's great about the project is that you build on the existing code from the labs, so actually doing something neat is doable as you have an infrastructure in place already (e.g. I would have NO IDEA how to make a game had the labs not guided me through the basics of sending network messages, but once that was in place, the game was in concept if not in execution trivial.) Anyway - great class, if rumors are not accurate and you do have a chance to take it again, TAKE IT!",
    "Building decentralized systems was probably the best out of nine CS courses I've taken. A Decentralized system relies on so many other field in CS - cryptography, networking, system design - that this course became a smorgasbord of many different field. Professor Ford did a great job of handling this, giving us enough of a background in each subject that we could understand the significance of the decentralized system, while going deep enough to make me feel like I thoroughly understood the underpinnings of that field. The class was based around implementing \"Peerster\" - a decentralized chat service. Decentralized means no central authority - and in our Peerster analog that meant to server to receive and dish out messages. Each client instance was its own server in a way. We would be given a specification of behavior, and have to implement Peerster to that specification. Even if we wrote the client to interact well with our own clients, the test cases were against other students' implementations, and so you could make very few assumptions on the nature of the incoming messages. This was a very cool and refreshing challenge, and I really enjoyed each of the three labs. The three labs were: getting a simple group-messaging client to work, being able to route private messages from client to client, and being able to search for and share files over the network. Each one had surprising challenges (grappling with decentralized systems, breaking through NATs, and the challenges of efficient decentralized search respectively), and I really enjoyed the different type of thinking this required. We were able to stretch our intuition about decentralized systems even more with the final project, which was left open ended and took up the last six weeks of the course. Unfortunately, Professor Ford won't be around to teach this class in the future, but I imagine the same principles will hold in future teachings - you can't understand anonymity and security without cryptography, you can't understand the challenges of connecting computers without knowing networking.",
    "Interesting topics. The p-sets for the first half are pretty good. Lectures are somewhat disorganized, and if you don't pay attention for just a minute, there's no catching up with the absurd mess of squiggly lines on the board. Fortunately, the lectures aren't really needed for the p-sets, and are barely necessary for the midterm. Final project was extremely open ended, but fun.",
    "Great problem sets, and just the right number! The lectures are a bit unclear at times, but if you're interested, they're interesting. One of the better upper level electives, especially to get a hang of C++ and OOP.",
    "Assignments are hard but interesting and very good programming practice, especially if you have little experience with C++, object oriented programming, GUI programming (you'll learn Qt which is so useful and really easy to use), and network-related programming. These are all important areas but completely not covered in the core CS courses. Lecture, however, is super disorganized and boring. Probably worth it for the assignments. This semester and last year there were only 3, not 6 like it says on the syllabus. Instead you get more time for the final project. The 3 assignments take a pretty long time though.",
    "Take if you want fun problem sets, and are interested in the topic. Do not expect much from lecture.",
    "This is a pretty good elective as far as Yale CS goes, there are three pretty tough psets in the first half of the semester, then a midterm and then the rest of the psets get cancelled and the final project is stretched over the second half of the class but you really only need to turn in the final project when its due.",
    "A good CS course with opportunities to program.",
    "Good class, would recommend, definitely one of the better CS electives!",
    "Decentralized is one of those must take courses at Yale. Professor Ford is amazing and a great lecturer whom you have to take at least one course with. The course is a survey of decentralized systems and networking more broadly. As for work, we had three assignments on creating a decentralized messaging system called peerster. You'll enjoy the first time sending a message across the network to another computer. For the final, we got to choose our own project and spend the second half of the course building out three portion. In short, an excellent course.",
    "Very interesting course with a reasonable workload. The lectures go over some really cool systems, some of which you build for problem sets and some that you can build as your final project. Final project logistics was somewhat sub-par but not detrimentally so to progress.",
    "Bford is leaving, so I don't know what the deal will be with this class. If Ennan is teaching it, you should take it. He's a great TA and pretty chill. Bford is super disorganized but ennan picks up the slack for him. Expect the class to have a lot of workload before midterm and not so much afterward"
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "426",
  "section": 1
 }
}