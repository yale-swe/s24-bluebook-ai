{
 "crn_code": "12425",
 "season": "201003",
 "legacy_coursetable_course_id": 6460,
 "enrollment": {
  "enrolled": 46,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    2,
    7,
    22,
    5
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    4,
    17,
    15
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    26,
    10
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Very fun and interesting course. Lots of topics are covered so you get a good taste of computer science topics. You really should have done some programming before taking this course as the problem sets are not easy and it will help you understand the theory better during class.All the kids in the course are very good - so be warned that all the grades are high, so you must work hard the whole semester and cannot slack off on one problem set (there are about 9 and they can take from 8-12 hours).I loved this course and Dana Angluin is such a nice teacher!",
    "If you are taking this class for your major, you must take it, and in the end will not regret it at all.If you are taking it otherwise, be prepared for a larger work load than normal in a class that may be of marginal utility to you. It is definitely not a bad course, just a bit intense if you're not planning on majoring in it.",
    "Take it. Take it take it take it. You don't have to know how to program beforehand, at all. It's taught in Scheme, which no one comes in knowing (Scheme is lovely, by the way.). This is the best class I have taken at Yale. I loved every minute of it, even the problem sets. Knowing Prof Angluin will make your life better; she is amazing. Want to double major in CS now.",
    "This class is fantastic. Computer science is a very important skill set to have in the modern world, and Dana does a fantastic job teaching this class. The lectures are all easy to understand and the problems sets and exams are also relatively easy (but maybe a little more time consuming than we would like). If you are interested in computer science, definitely take this class.",
    "Take it! Even if you are only kind of interested in computer science. Hard psets, but fun. Dana is awesome. You'll like this class.",
    "Really fun, Scheme rules",
    "I would absolutely recommend it. It's wonderfully taught and interesting, and the problem sets don't take terribly long and they're quite fun to do. You end the course with a broad understanding of computer science as a whole.",
    "This was definitely my favorite course this semester. Since I had a rather strong background in programming coming in, I was initially considering skipping 201, but I'm glad I didn't. Most of the things taught in 201 are general computer science concepts rather than specific programming skills, so I still learned a lot. While a few of the topics aren't exactly the most fun (turing machines are particularly boring), I personally found most of them to be very interesting. Finally, Dana Angluin is an awesome professor. Definitely take this class if you can.",
    "Good class. If you're into puzzles, logic, and getting frustrated by weekly problem sets, then it's for you. But really, I liked this class a lot. I would definitely recommend most students take 112 if you're new to programming, it definitely helped me to have some previous experience. But yeah, Dana is awesome, I recommend taking it with her, and like I said, if you're into math and that stuff its good.",
    "If you are CS or CS\/Math, take it because you have to. If you are not, take it because it's easy and enjoyable.",
    "Take it if you want to do computer science. It can be boring at times, but it teaches you a different way to think about programming.",
    "CPSC 201 is an excellent introduction class. I feel that it does a great job of showing what the major is all about, and the level of the class is just right because it assumes some programming experience, but it only requires you to have been exposed to how computer programs are structured. Somebody whose only experience is an AP Comp Sci class can understand the material just as well as somebody who has been teaching themself Java for years. Anybody who is considering computer science as a potential major or anybody who just wants to learn more about what computer science actually is should take this class.",
    "Great introduction into Computer Science. Very clear. Covers Scheme Programming Language (teaches essential concepts of recursion and pointers), Hardware, Memory, Binary Circuitry, and Algorithm Complexity.I would recommend it strongly to anyone learning programming or interested in Computer Science.",
    "CPSC 201 is a great class. It quickly covers the basics of the Scheme language and then uses it to prevent a lot of fundamentalconcepts in computing. I appreciated the difficulty and the variety in the material. I also liked how the lectures were interactive. At times it was frightening to observe how adept some students were, and their prior experience may have \"ruined\" the curve for less experienced students, but they made instructive contributions. I have no suggestions for improvements.The instructor is knowledgeable, clear, always ready to help, She challenges her students and encourages student participation in lecture. She is enthusiastic, funny, and serious about teaching. Once in a while, it was difficult to hear her; if she spoke a little more loudly, I would have no improvements to suggest.Additionally, great, really helpful TA's. If you have no prior programming experience though, I do not recommend this class. Also, be ready to put in the hours for problem sets. If you're not a quick learner\/programmer, be prepared to spend 10-15 hours per weekly problem set.",
    "This course was so much fun! The problem sets were interesting, the topics were fascinating, and Dana Angluin made this the class I was actually excited to go to. I came in with zero programming experience (except for a little bit of TI-83...so i knew what a for loop was), and yet was still able to keep up fine (don't be scared by her first day warnings...). The problem sets took 6-8 hours, but were actually enjoyable (i used them as a procrastination tool for my other work...). The course covers turing machines, computability, circuits and computer architecture (the simulated computer is very cool), and run-time. You also learn scheme if that is ever going to come in handy, though it does make you really good at recursion. If you have any passing interesting in computer science, take this course.",
    "Great class! If you are interested in computers and enjoy programming, you will enjoy this course. It is a lot of work, but very rewarding. I am not a computer science major, and felt a little slower than most people in the class, but overall thought it was worth the work. Make no mistake though, you will have to put in a lot of work.",
    "I would recommend Computer Science 201 to another student. It was probably my most difficult course this semester, but I learned the most from it. It is hard work, but very rewarding.",
    "This is a fun class, at least if you are interested in how computers and programming really work. Be aware that problem sets routinely take 7 to 8 hours a week, but you get used to it and they are interesting. If you can understand quantitative reasoning and think like a computer, there is no need to take CS 112, whether or not you code already. If that does not describe you, I don't know why you'd want to take this in the first place. CS 201 is not designed to be a practical overview of computing, but is an introduction to real computer science, and it does a good job at that.",
    "Great class, if a bit slow. It introduces you to fundamental concepts of computer science in class, and then more rigorously through problem sets. Strengths were fun, interesting topics; weaknesses were that class was sometimes slow. However, I think Professor Angluin is a great professor, and I usually enjoyed class even if it was slow. It gave you time to understand exactly what was going on if you wanted to learn. You definitely don\u0092t need to be a comp sci major to take this class, but you\u0092ll enjoy it much more if you like programming.",
    "CS 201 is an overview of the ideas of computer science. We first learn the Scheme language, then we implemented Turing machines, TC-201 computer [basically assembly language], and the like through scheme. We also went over sorting, context free languages, finite state acceptors, and the final lecture was on the P vs. NP problem. It was a terrific overview of the major ideas in computer science and I really enjoyed it.",
    "This class teaches you scheme, which really isn't that helpful if you are just interested in learning a programming language. Scheme itself is horrible to learn, and the first two psets are just to teach you the language. However scheme itself is a fun language once everything is all set and done.If you are interested in how computer's actually work, this is a fantastic introduction. You start with simulating circuitry and built up to compilers during the semester.If you have time to spare, I highly recommend this class. The psets take anywhere between 8-20+ hours depending on how well you've learned scheme. Some of the later psets can take as few as 3 hours if you really get a good grasp of the language.This is a great class, but it is a large time commitment.",
    "It's a good amount of work, especially the problem sets, but overall, it's definitely worth the effort, as you will leave the class knowing a lot of things that you would not learn anywhere else.",
    "A great class to take, regardless of whether you're pursuing a degree in computer science, CPSC201 makes you think in different ways and enhances your problem-solving abilities.",
    "I took this course without having any previous programming experience, and it wasn't impossible, but it was really really difficult. This course is very well taught, but it devoured all of my free time (and sleeping time) this semester. For many students it's a piece of cake, so don't expect a curve to help you out if you are struggling. Prof. Angluin is really helpful and nice and she learns everybody's name, so don't be afraid to ask for help!",
    "This was the best class I have taken so far at Yale. It's a lot of fun, and challenging in a great way. If you have any interest in programming, take this class.",
    "Overall, a very good class that introduces you to many of the fundamental concepts in computer science. Learning a high-level language (Scheme) was also fun. You don't really need any programming experience to take it - I came in with just a basic understanding of some Python, and felt that I could keep up pretty easily.",
    "This class is a lot of fun, and a great introduction to computer science. You learn all sorts of interesting concepts about computing. The problem sets are kind of a lot of work, especially if you're not used to them, but by the end I started seeing them as fun instead of work, so it was truly a pleasure for me. Probably not the class for you if you want to learn a useful language, it's more theoretical stuff than that. A great class, definitely got me excited about Computer Science.",
    "I enjoyed this class much more than I expected. If you have the programming experience, it's really enriching and not too difficult (and you don't need to have taken an intro programming course at yale). This course with professor Angluin convinced me that I should consider comp sci for a major.",
    "Great class for those with a programming background and interest in more theoretical computer science concepts. Problem sets can be somewhat time-consuming, but very manageable conceptually. Hardest part is probably the curve--the class generally does very well on problem sets and tests.",
    "A superb introduction to computer science theory, taught by a great professor. I highly recommend this course to anyone who enjoys logic and wants to learn to program better while exploring fascinating theoretical structures."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "201",
  "section": 1
 }
}