{
 "crn_code": "12175",
 "season": "201403",
 "legacy_coursetable_course_id": 28998,
 "enrollment": {
  "enrolled": 10,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    5,
    2,
    2,
    0
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    2,
    2,
    5,
    0
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    8,
    0
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "A good, free-form class on current topics in dealing with security through system and language design. If you've taken Formal Semantics with Prof. Shao, the Coq portion of the course will be familiar. The other portions of the course involves reading papers, and a final project. Prof. Shao opened up his lab's code for our final project, which was really interesting.",
    "The class is somewhat Schizophrenic. By this I mean there are two parts of the course that dont strongly relate to each other until the very end. One part of the class is learning the Coq programming language\/ proof assistant. The other part is thinking about how to build operating systems. The assignments for the first 2 months are exercises to learn Coq. I found these challenging but really fascinating. This language basically defines mathematical concepts from first principals and allows you to write proofs that are checked using a type-checking mechanism. The language only allows you to prove things that are actually true: its pretty incredible. The readings involve ideas about operating systems. I haven't taken OS, so I really didn't get what was going on in that part.",
    "Language based security was a great class for me, an undergraduate who wanted to get a feel for more modern research in computer science. The field of language based security is focused on designing systems that fulfill the traditional requirements of security (process isolation, secure IPC, etc) in a provably reliable fashion. In class, we learned the language Coq, which is a fantastic piece of software used to prove theorems and programs. Every week we also read and discussed important papers in the field. The class was challenging in a way that I hadn't had in the CS department before. Having only read a few CS papers before, it was difficult to hack through the weekly 15-30 page report for the first few weeks. I really enjoyed this, as it helped me think about the problems at hand, and by the end of the course I was comfortable reading about some subjects (others remain dark to me). The final project was great, because we got to work on Professor Shao's current project. Our TA, Newman, was very willing to help us out when we got stuck, and my group accomplished its goal at the end. Overall, consider this class if you're interested in formal verification, or want to get a feel for a class that feels more like grad school.",
    "Interesting class and interesting ideas and not a lot of work.",
    "CPSC 428 is a pretty chill CS elective (with one major caveat, see second paragraph). Throughout the course, we discuss papers about programming language design and general good programming practices. We have assignments in COQ, a proof assistant. For the final project, we have the option of contributing to Professor Shao's research project, which was pretty fun. If you have already had experience with COQ or mechanized proof assistants (e.g. you have taken Formal Semantics), this will be an excellent 5th course. If you haven't, the beginning portion of class will require a decent amount of work as COQ can be challenging to pick up the first time. Professor Shao is also a good teacher, and I suggest taking at least one course with him."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "428",
  "section": 1
 }
}