{
 "crn_code": "12168",
 "season": "201403",
 "legacy_coursetable_course_id": 28992,
 "enrollment": {
  "enrolled": 138,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    1,
    11,
    26,
    59,
    14
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    3,
    9,
    42,
    44,
    13
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    84,
    24
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "A wise man once said take 201 if you want to be a CS major, or are thinking about being a CS major.",
    "A class you should take no matter what major you are, since knowledge of computers is a necessity nowadays. You'll find out fairly quickly whether you're inclined to this type of thinking or not.",
    "There's certainly a programming component to this class, but the theoretical component of the class is quite important. Also, even for those who have programmed before, functional programming is quite different than what you're (probably) used to programming.",
    "Great class but prepare to spend ~12 hrs per problem set",
    "CPSC 201 is an intro to Computer Science class, and I would highly recommend this class to others as it is a good intro class.",
    "I would recommend it. It's definitely a step up from 112 (Intro to Programming), and involves more than just coding (you learn a little bit about a variety of different subjects: the computer processing unit, algorithms, structures, recursion, etc.) I'm not a computer science major but you don't have to be one to take this class. Allot about 10-12 hours a week for problem sets, and go to office hours if you need to. Class isn't that helpful and most of what you learn is done on your own time.",
    "Yes, I would definitely recommend this class. It is a great introduction to computer science and requires no previous knowledge. I think it's important to understand a little bit of what is going on in a computer, something we use every day, so I definitely think it's worth it even if you never really use the knowledge.",
    "201 is a course that covers really interesting material at a really slow pace capped with really hard tests. The problem sets I found to be really well designed and fun and are easily the best part of the course. The tests I found to be a little unfair since they were more about speed than concept understanding, but everyone seemed to feel that way so the curve should fix everything? (fingers crossed) I hear Anguin is a better professor than Rushmeier, and I found Rushmeier to be a little on the dry side, but it's not worth waiting the year to take 223 just to take 201 with her if she teaches in the spring like this year. All in all, take for a very interesting introduction to the theory of computer science; you will learn to love parentheses.",
    "Introduction to computer science from very basics. I would definitely recommend the course.",
    "A broad overview of topics in computer science, from basic logic up through von Neumann architecture and the study of computability. Also an introduction to functional programming. If you liked Intro to Programming, this is a great way to be forced to think differently about problem solving and in particular to get really, really comfortable with recursion. The problem sets are both challenging and fun once you get over that hurdle. (If you don't already like programming, you will probably be absolutely miserable in this class, even though in theory you can still learn a lot of interesting things without doing well on the problem sets.) No textbook required, which is great. Exams are really hard.",
    "After taking CPSC 112, I thought this class would be similar and would focus on programming concepts. However, this is intro to Computer Science. While all the assignments are coding in nature, the point is to understand the computer science concepts and improve your problem solving skills than demonstrating programming expertise. Some of the assignments could take a long time (over 10 hours) but there are only of 7 of them and if you start them early they are not too onerous. This class will teach you what issues computer scientists think about. It discusses how computer works and more theoretical ideas such as turing machines, regular languages, and boolean algebra. It made me understand computer science much more and has convinced me to take CPSC 223 next semester, as an applied math major focusing in Econ. Professor Rushmeier is an enthusiastic teacher and makes the lectures more interesting. She also works hard to make the course fair. I enjoyed the class and would recommend taking it if you want to learn what computer science is all about, enjoy problem solving, or if you need it for the computer science major.",
    "If you're interested in learning about how computers function from the ground up, this is a good place to start. The workload is significant, so this isn't the kind of course I would recommend taking on a whim or as a fifth class in a tough schedule, but for anyone who's interested in what's actually going on inside his\/her laptop, this is a great class.",
    "A very good course and it's a requirement so I don't think so you have a way around it. Although this course uses Racket as the programming language, I think the techniques you learn are useful. Don't skip class like I did, unless of course you're one of those who don't need to be in this class but are taking it because you have to.",
    "I'd recommend the class to another student who is interested in learning more about CS. I think it is a very good introductory class that allows you to see if you really like computer science and it starts from basic theory. Definitely shop it and see if you like it.",
    "Amazing class. Professor Rushmeier is great and helpful, the psets are engaging and fun, and it's a great way to start learning about computer science. I would definitely recommend this course to both majors and non-majors.",
    "Don't take this course if you already know functional programming and\/or have read a good amount about basic CS theory. See if you can skip it. Talk to the DUS and see if he\/she will let you do so. The course is taught in Racket, which is supposed to level the playing field for programmers and non-programmers, but it doesn't. Those of us who knew how to program already still finished psets much more quickly. The psets themselves are pretty fun, but rarely difficult at all. Going to lectures is unnecessary. The lecture notes are incredibly well written and far more useful--especially since lectures are often wasted on procedural items and\/or don't cover much. The exams in the class were absolutely idiotic. It was a sprint to finish them in 50 minutes--not a comprehensive assessment of our understanding of the content. If nothing else, the class is great for solidifying one's knowledge of recursion and functional programming.",
    "I would only recommend this class to a student with an interest in computer science, simply because you do have to put a lot of work into the homework. This class isn't meant to teach you how to program, so I wouldn't take it if that is all you want to know.",
    "CPSC 201 is a great course. It's theoretical in all the ways that high school AP CS courses aren't and deals with a lot of interesting things in the development of computers. I would definitely recommend this to freshmen, but generally only if they're in the CS major or have a background - the material is definitely a little removed from the mainstream (which I think makes it more interesting). Prof. Rushmeier is a very responsive teacher and a pretty good lecturer. The workload can be difficult, but not extremely so.",
    "CPSC 201 is a thorough introduction to the theory behind computer science. The class is mainly about how a computer works from a theoretical standpoint, not in terms of hardware, and the development of computer science over time. While the class may or may not be essential for further computer science classes, I really enjoyed it and would definitely recommend it. I had never learned any of this material before, and I think I have a much greater appreciation for computer science in general. Professor Rushmeier is amazing: she is passionate, engaging, and totally committed to helping her students understand the material. The problem sets were pretty manageable, since she gave them us so long to complete them and there was always help available at the Zoo. You also learn to program in Racket, which I think was rewarding in the end. It requires a different way of thinking, but you will thoroughly understand recursion by the end of the course, which I think is a reason alone to take this class. There are two in-class exams, both of which I thought were challenging, but the entire class is graded very fairly. If you are interested at all in computer science, consider taking this course.",
    "CPSC 201 01 is really good class, but hard to do well in. The homeworks are enjoyable and do not take that long. Definitely take it-- but maybe take it credit\/d\/fail. The 2 midterms are very difficult and determine your grade.",
    "Computer Science 201 covers the basic ideas behind computer science, giving a quick overview of many of the aspects of a computer that contribute to it's functionality and how these aspects work at the basic level. If you're going into computer science it is a good class to take, but I would recommend that one take other classes as a follow up to gain a better understanding.",
    "Very intersting course, whether pursuing a CS major or not! The homeworks are very challenging and rewarding! Prof. Rushmeier is helpful and cares about her students! Take this course, although it is hard, you will learn a great deal!",
    "Cpsc 201 gives a general overview of the history of computer science, the structure of the modern computer, and the various uses of computer languages. I would recommend this class because it is required in the computer science major. However if it was replaced with a practically useful class like cpsc 112, I would recommend that course instead.",
    "Expect a big change from CS 112 to the theoretical side of computer science. Just because it's an intro course, don't expect it to be easy (although the curve is pretty generous). You don't go very deep into most topics--it IS an intro course--but I think it can give you a sense of whether you enjoy the theoretical side of comp sci that Yale's department emphasizes.",
    "Absolutely. The class was probably my favorite of the semester because of the interesting material. I took it as a freshman very unsure about computer science, but now Im definitely looking more into the major. Professor Rushmeier is a great person and very helpful during office hours, but her teaching style came across as a little disorganized. Zoo help hours were extremely helpful, and I would advise going to those sessions whenever possible to get help. The psets average around 10 hours or so ranging from 5 to 18 hours, but it didnt feel like too much of a workload since they were enjoyable to complete anyways. The main negative thing at least for when I took it is that the two exams were 50 mins long, which essentially caused them to feel like speed tests that didnt allow for much thinking time.",
    "It's just an introduction to some topics in programming and functional programming (using recursion mostly). I would recommend it to anyone who's curious what computer science is about without having the huge workload that's probably going to come up in cpsc 223 and 323.",
    "Expect about 8-10 hours of work\/week = a little bit more than the average class load for me. One particularly brutal pset took me 25 hours to complete (that was a dumb pset). In this class, you will learn how to think about computer science at multiple levels of abstraction. You will basically replicate computer behavior on the psets using recursion. It's all actually very neat how it comes together and I think I understand computers a bit better now. Except for the brutally long one, I found that the psets were really fun. The midterms were too long to complete in 50 mins. I did not find lecture very captivating, so I mostly didn't go to lecture. The lecture notes were very good. I showed up to lecture when I thought I didn't understand what was going on in that week's pset. Good class, not so interesting lecture, great psets. Poopy midterms.",
    "Great intro course leading into more technical understanding of CS.",
    "CS 201 is an overview CS class that will help you understand some of the more intricate details of computer science. It is taught in a language that will never be useful to you again, but that really helps teach ideas such as recursion. If possible do not take this class with Rushmeier because, although nice, she is not a good lecturer and you will be frustrated. It is completely possible to take this class off of very limited computer science knowledge but expect to be frustrated as you learn the language. Overall, enjoyed the class.",
    "Awesome class. The homeworks were fun and well-spaced out.",
    "I would recommend CPSC 201 to a student who is interested in learning more about computer science and\/or programming. It covers a good amount of varied material without being particularly difficult. The workload is very manageable.",
    "A fairly difficult course, but a good introduction to the concept of recursion. I had a lot of fun working through the logic puzzles of the psets, even if they did take some time. Exams were brutal. They were way too long to finish in the 50 minutes given, so it was nearly impossible to feel like you demonstrated what you knew.",
    "I have to put this bluntly. Holly Rushmeier was a pretty awful teacher in every respect. She was nice and understanding about the homeworks, but she could not for the life of her teach the class. I came into the class with a strong foundation in most of the material, and it made me cringe every time she made blatant errors on the board and, frankly, just wasted class time. You can get through this course easily without attending class which really says it all. I am pretty sure this class was 100 times better when Dana Angulin was teaching it judging by the fantastic course notes provided in Classes v2. The lectures lacked depth AND breadth due to the lack of planning by Professor Rushmeier. I hate to say it, but maybe if someone outside of the computer graphics department taught this class, it would be for the best. I hate to see the Introduction to Computer Science bastardized by poor teaching. That being said, I think CS201 is overall a great class as far as the material goes. It is a bit frustrating to be learning this class through a functional perspective, but it seems to work out. Dana Angulin wrote the course notes for the class and they are fantastic (good enough where going to class becomes somewhat frivolous). The class was very easy for me since I came into the class with extensive knowledge in Computer Science; however, the testing was pretty poorly designed. 50 minutes to take sizable exams was a rush and I doubt people without experience in the subject were able to finish entirely. Take this class if Dana is teaching it, not when Rushmeier is.",
    "A great class. I really enjoyed working on the problem sets and learning functional programming. Overall a really good class, PSETs were some of the most fun homework I've had at Yale. - thought that the lectures were disorganized and could've been much better. I think Prof. Rushmeir relied too much on students to work through the problem, and I found I learnt more from the lecture notes than from actually going to lecture Go to TA hours, and spend time playing around with racket. I'd definitely recommend this class!",
    "An okay class; problem sets take 5-20+ hours depending on the pset. Lectures are pretty easily skippable because the lecture notes are pretty solid. Lectures themselves add very little to knowledge. Be warned that tests are very difficult, and practice tests were poor preparation - there were 12 problems, giving us barely 5 minutes to finish each question.",
    "An interesting course. I took this after CPSC 112, and probably didn't need to take both. I'd say if you're starting programming, just take this course. It teaches you everything you need to know about programming, in addition to more general information about computer systems. I liked it!",
    "This course was hard but not too hard. Good hard. And fun. I would definitely say take it. And I regret not taking it first semester freshman year because i was scared.",
    "If CS isn't your major, don't take it. It was more work than all my other classes put together and the work to learning ratio was much lower than in CS112 (with Yang Yang). If it's your major, well, you're stuck with it.",
    "CS 201 is a good introductory course for the department. We learned a useless language (Racket) and a seldom-used paradigm (functional programming), but overall learned a lot about the fundamental yet theoretical background to how computers work, what kinds of problems are computable, etc. Assignments are simple and well-spaced: a bit too straightforward, with the methods explained with exacting standards; no room for creativity.",
    "Take it if you're interested in the computer science major or just interested in knowing more about computer science in general and learning how to code more efficiently. The course is great and definitely not out of the reach of non- CS people.",
    "Some useful topics, but overall you will be learning an outdated language and spend a lot of time doing functional specifics that you will likely never use again. Tests rely a lot on speed so you may understand everything but not get the grade you want. Workload is heavy on certain weeks but most weeks it's fine.",
    "I'd recommend this class to anyone who is interested in how a computer works. Be sure to go to office hours and help hours at the zoo. They're both really useful",
    "Introduction to computer science. May not be worth taking if not considering a computer science major.",
    "If you want to get a good idea about computer science, then definitely take CPSC 201. However, make sure that you are smart about your schedule because it is a heavy workload class with weekly challenging Psets.",
    "CS 201 with Rushmeier is a class that gives an introduction to all things computer related. In reality, it's a class that I would not recommend taking with Rushmeier. Take it second semester with Professor Dana Angluin (while she is around).",
    "The real work is in the psets. The tests are on things that aren't on the psets.",
    "Good and yes I would recommend it.",
    "This class is a great overview of many basic topics in computer science that are often overlooked at the higher levels. It was really interesting to build up the framework of a computer from the basics of binary, through logic circuits and the von Neumann architecture, all the way to the basics of languages. Also, despite all the hating languages like Scheme and Racket get, I think that the LisP way of thinking about coding is really interesting and rewarding. Overall an awesome class, especially for those who like the theoretical.",
    "Take it if you're interested in computer science as a major, but definitely not for fun because it was a lot of work that wasn't always interesting.",
    "Very interesting mix of computer and math theory. Highly recommended!",
    "As a person who isn't a genius at computer science or really mathematical thinking in general, this course was a tad frustrating. The material was great, and I really enjoyed thinking recursively with Scheme (definitely helped my programming in general), but the fact that 70% of your grade is determined by 100 minutes of stressful testing just wasn't my cup of tea. I completed all of the problem sets just fine, but the midterms (although definitely fair in their representation of the material) were really hard for me. I enjoyed the class enough to want to continue doing computer science though. And Holly was great!",
    "This is an interesting course. The workload is certainly manageable if you tackle it in multiple sittings. I am not sure how much of the material I learned in this course will be applicable to my future computer science studies, but I certainly enjoyed the course nonetheless.",
    "This course was interesting and gave us a good idea of how a computer actually functioned on the inside. It was good in that it taught us how binary and machine code was actually used and understood by computers. It was also useful in teaching recursion and that way of thinking for programming rather than storing variables and changing them.",
    "CPSC 201 is a great class, and I'd definitely recommend it to other students, even if you aren't a computer science major. Rushmeier is great, funny and helpful. The class is a good size, and she learns everyone's names. The work does not take an excessive amount of time, and you definitely feel like you're learning from the psets.",
    "This is a solid course that will make the basic processes that allow your computer to work feel a little less like magic. By the end of the class you build up a \"tiny\" computer on paper and through the programming assignments - doing this explicitly is a really useful exercise. It's a really good feeling! The homework is very helpful for helping with understanding material. Exams were challenging, intentionally (with the stated reason to make a fair curve). Lecture is generally pretty worthwhile to go to with Rushmeier. Racket is fine.",
    "Psets are not too hard but midterm and final were not that easy. Take it if you are interested in theoretical stuff, don't expect learning how to write real code.",
    "CPSC 201 is a good intro class, but programming in Racket leaves something to be desired. This was the first computer science class I took at Yale, and in general, I greatly enjoyed it and felt like I learned a lot. The course covers a broad range of topics in computer science, and the problem sets are comprehensive. I wish that the course wasn't taught in Racket, but I guess it's okay. I also wish that sample code solutions were posted for the homeworks, because sometimes I felt that my code wasn't as elegant as it could be.",
    "I would definitely recommend this course to anyone who is interested in computer science from a more theoretical point of view. You are going to get an overview of the fundamental ideas behind computer science. You may be coding in an unusual language that isn't really applicable, but you'll come to love it in some ways. I really enjoyed the class, but I don't need to program in Racket ever again.",
    "Do not fall behind in this course.",
    "The best way to see what computer science is. A fantastic survey course.",
    "Boring. Not worth the time. Only worth it because it's a major prereq. If you know any CS already, virtually none of the material will be new to you, and the lecturer is really bad.",
    "Fun class with interesting (albeit sometime frustrating) psets. You learn not only hiw to program, but also about the theories of computer science, computer architecture, digital logic, and even transistors. Lectures were interesting, and often gave short blurbs about interesting tangent topics. In general, a great class that makes me want to learn more computer science.",
    "You'll learn a lot of really cool stuff, highly recommend it to any major or non-major. The PSETs are not bad, but a few take some time (the first one is a bit rough). My only comment is that the exams are basically super-short IQ tests, and do not assess what you've learned at all.",
    "Take it!",
    "This course is a great introduction to computer science, but it is very different from intro to programming. The Racket language is not that similar to Java. The problem sets definitely take up a lot of time, but you are given plenty of time to do them, so it would be wise not to leave them until the last minute.",
    "This class is a good introduction to computer science. If you're trying to figure out whether computer science is a field you want to pursue, I would strongly recommend it.",
    "Intro to computer science is a cool course. The material is interesting, and even though you probably will never use scheme (a dialect of LISP) again, it definitely makes you think about old problems in new ways and is not difficult to pick up. With Prof. Rushmeier, tests were a little odd: the 2 exams, which make up the majority of your grade, are packed with 10-12 questions to complete in a 55 min lecture period, making it difficult not to leave questions blank. Additionally, keep in mind that exam questions tend to focus on lecture topics, whether or not these topics have come up on a pset yet. Overall, it's a good class, and I would recommend it to anyone with some programming experience interesting in better learning the fundamentals.",
    "This class is not just about learning another programming language - it also delves into topics about CS theory, computation, etc. The problem sets are assigned every few weeks, and are generally well designed. The exams are more challenging, mainly due to their length in such a short time frame. As a non-CS major, I would recommend this class to other non-CS majors who took, enjoyed, and did well in CPSC 112. I wouldn't necessarily recommend it to non-CS majors who hadn't taken 112 unless they felt really really really confident, just because the class is about so much more than programming.",
    "I really enjoyed this class. I enjoyed doing the problem sets and figuring things out for myself. The lectures will not help you on the problem sets, but you will need them for the exams. In a way, 201 feels like two different classes. You are taught the theory, but you teach yourself their applications."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "201",
  "section": 1
 }
}