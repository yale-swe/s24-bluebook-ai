{
 "crn_code": "20440",
 "season": "201701",
 "legacy_coursetable_course_id": 41450,
 "enrollment": {
  "enrolled": 204,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC402",
   "question_text": "Your level of engagement with the course was:",
   "options": [
    "very low",
    "low",
    "medium",
    "high",
    "very high"
   ],
   "data": [
    3,
    16,
    43,
    58,
    31
   ]
  },
  {
   "question_id": "YC404",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "fair",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    6,
    13,
    46,
    53,
    34
   ]
  },
  {
   "question_id": "YC405",
   "question_text": "The course was well organized to facilitate student learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    4,
    12,
    38,
    51,
    46
   ]
  },
  {
   "question_id": "YC406",
   "question_text": "I received clear feedback that improved my learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    12,
    20,
    42,
    52,
    25
   ]
  },
  {
   "question_id": "YC407",
   "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    2,
    10,
    37,
    72,
    30
   ]
  },
  {
   "question_id": "YC408",
   "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    1,
    8,
    27,
    67,
    49
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC401",
   "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
   "comments": [
    "I learned how to code java.",
    "This class started off great but I lost it sometime after spring break when the pace became too fast, and I was just struggling to finish psets over actually going over concepts etc. Having said that, I have gone from being someone who was mortally afraid of CS to being someone who is actually open to taking CS 201. It is good to learn basic programming skills and prepare you for higher CS classes provided you make sure to practice over summer break.",
    "As someone who had never done any computer programming before, I learned a lot! This class was filled with info about Java.",
    "I've actually learned a good deal about how to programming and some of the logic that goes behind coding.",
    "I learned quite a bit of coding. I had some experience prior to taking the class in various coding languages, but this class was fully about learning java so I really picked up a lot. The beginning pace of the class was very good, however, second semester it got a lot faster. That said, if you hit up office hours, the TAs are VERY helpful and can be life savers. This is also a class that I would not recommend to take Credit D because you have to do a lot of work regardless-- also it's very manageable to do well in the class as your grade relies heavily on the psets! Even if you do terribly on the midterm, you can make it up through extra credit on optional psets.",
    "Intro Java class - so basics in Java Very different kind of thinking if never taken CS before",
    "I learned basic programming skills in Java language and the basics of theoretical computer science.",
    "I developed a a working knowledge of how to use Java, and what computer science means in the first place.",
    "Basic knowledge of Java programming",
    "The course taught how to use Java to code to create animations, solve problems, or even create a web app. A lot of the skills we learned can also be carried over to other languages.",
    "This class taught me Java and the mindset one needs for CS.",
    "This course was a great introduction to computer programming in the Java language. We learned about common control structures, input\/output, object-oriented programming, graphics, and more, all in one short semester.",
    "I developed my ability to program and ask for help.",
    "Through this course, I learned not only the programming language Java, but also how programming works, how to think like a programmer, and how to code with style. Though the course was not the best organized, it was useful to see how well-suited I am to 1) programming itself, and 2) programmer culture.",
    "I wanted to learn a programming language and in this class, I was able to make some interesting programs and push my limits in a different area (I am a MB&B major).",
    "I learned a ton about programming that I'd always wanted to learn in a classroom environment rather than by myself.",
    "The class was my very first introduction to computer science. It taught me how programming languages worked and gave me great practice with a number of Java concepts.",
    "I went from no knowledge of computer science to being able to write some cool and complex java programs. It is a great course and learned a lot.",
    "A solid handle of basic Java.",
    "I really gained a fundamental understanding of computer science that helped me think in terms of logical design and broad sensibilities. Also, I'm very impressed with my ability to code in java and the enormous breadth of our current knowledge!",
    "I learned about the wonderful world of Java Programming! I improved my logical thinking skills, procedural skills, and learned a new sort of language altogether.",
    "I learned basic Java programming skills and other central concepts in computer programming. I was able to get a lot of hands-on experience with various coding concepts, including control flow, graphics and animation, audio, and inheritance. Although Java is not the easiest language to learn, the professor and teaching staff are readily available to aid you in the coding in-person as well as through an online forum (Piazza).",
    "I learned how to code at a basic level in Java.",
    "Great introduction to Java.",
    "I LEARNED SO MUCH FOR THIS CLASS I CAN'T EVEN BEGIN TO WRITE IT DOWN LIKE WOW I CAN CODE NOW ITS SICK",
    "CS112 is a broad introduction to programming in Java. I learned Java syntax in addition to basic computer science concepts such as algorithms, loops, object-oriented programming, assertions, inheritance, etc.",
    "A very useful understanding of generally how programming works and the basics of Java.",
    "Having had very little CS experience prior to this course, I feel that I now have a good base understanding of how to structure and write a program in java.",
    "I learned a lot about coding in Java; not only the basics but how they apply to a lot of different concepts. I also learned how to be able to code with partners and the process of taking a concept to a pseudocode to typing the right code to get the different functions required done.",
    "Learned how to critically think and problem solve in Java.",
    "Basic competency in Java.",
    "Great intro programming course. By the end, you become pretty competent with programming in Java",
    "I learned how to successfully code and I retained skills that I'll have for the red of my life.",
    "Good overview of all of java and an intro to algorthmic thinking. I was mostly lost during all of the lectures but learned a lot from just physically doing the problem sets. Not a great class environment to be in but a good course to take if you want to learn something.",
    "This class teaches you the basics to Programming.",
    "I developed a great foundation of knowledge in programming by taking this course. I also improved my logic skills by doing the many problem sets, and these skills will be helpful no matter what major I end up pursuing. By taking this course, I think I got a good insight into what programming and computer science is like, which has made me interesting in continuing to take computer science courses.",
    "This course allowed me to learn to code and taught me the basics of computer science without having any computer science background at all.",
    "Learned how to program in Java.",
    "I learned how to code efficiently and how to organize my code as succinctly as possible in the Java language.",
    "This course was very different than many of the other courses I had taken at Yale because I came out of it with a very tangible and concrete skill set. As a non-CS person, I liked knowing that in a semester I had become versed in a language that was formerly completely foreign to me.",
    "I learned how to code and solve problems!",
    "This course will teach you the fundamentals of coding in Java language. Although the exact syntax does not carry over to other programming languages, the logic and structure do.",
    "By taking this course I gained basic knowledge of the fundamentals of computer science. As I had never taken a computer science class before, this course taught me not only basic syntax and structure, but also, it taught me how to think in the coding mindset.",
    "I learned how to program with Java.",
    "In this class I gained a better understanding of how to program in java.",
    "This class teaches you to code in Java and generally what computer science is. Without any background, computer science can seem very foreign and confusing, and this class seeks to clarify that. It also teaches you to problem solve and think very logically.",
    "How to program and think programmatically",
    "Basic programming logic and how to write a refined, robust program",
    "Knowledge: Java programming. Skills: problem solving, and debugging\/ troubleshooting. Group work. Insights: programming and building code is really fun!",
    "I learned basic coding skills and how to break down a problem.",
    "I developed a much better understanding of programming and its intricacies. I came to learn algorithms as a way to solve problems. Although difficult at times, the course gave me the skills necessary to solve problems with logic and planning, which is a skill anyone can use.",
    "Learned java",
    "I learned so much. I came in without any background in coding, -and I came or of the course feeling ready to tackle future coursework in the area. We covered Java fundamentals.",
    "I learned the basics of programming in Java and the basics of programming in general.",
    "I learned the basics of computer programming and the Java language, such as programming structure and loops in a broad sense and the specific Java syntax in a narrow sense.",
    "Programming skills in Java, and the foundational structures for programming in many languages, including variables, methods, looping, and a couple weeks' worth of object-oriented programming.",
    "I learned the fundamentals of Java.",
    "Fairly comprehensive understanding not only of Java but of central programming concepts. I learned how to optimally design code using different control structures, variables and data types.",
    "I learned the basics of Java programming. I also learned that computer programming is not the major for me. This was an introduction course and it took an absurd amount of my time! I would like to take a computer programming course in the future but I don't think I will have the time to devote to a CS class!",
    "This class does teach java (and many students were able to learn coding from this class), but I had a very difficult time keeping up and could not learn much of the material. I think some of the instruction in this class is too complex and the course goes too fast for students to really understand what is happening and what all the terms mean.",
    "I learned how to use Java and the foundations of computer science.",
    "I greatly improved my programming skills, my understanding of computers, and my problem solving abilities.",
    "Basic java programming",
    "I good basis on how to code in Java.",
    "I learned a lot about algorithmic thinking and how to use Java. It was a really great class that combined technical skills and problem solving.",
    "General understanding of computer programming and Java.",
    "I was introduced to computer science for the first time.",
    "Java programming",
    "The basics of programming in java!",
    "I learned to make basic programs in Java.",
    "CPSC 112 was a good introduction to the practice of problem solving through computers. I certainly cannot be classified as a programmer at this point, but I have developed the skills in Java to be able to construct basic and useful programs and build upon this knowledge in the future. Most importantly, I better understand how programs are constructed and the types of thinking that go into computer science as a field.",
    "This class was a comprehensive introduction to Java programming. Through this course, I learned many different programming concepts. From the beginning, with just learning how to print basic statements and handle calling methods, to the end, with more advanced GUI concepts and object-oriented programming, I definitely learned a lot of fundamental Java concepts. Thanks to CS112, I have a basic grasp of different data types, control structures, etc.",
    "I learned the basics of computer programming as well as how to start thinking about a given problem.",
    "I got a solid foundation in Java and in general coding.",
    "I learned how programs work and how to think like a computer.",
    "I had no knowledge of coding going into the course, but I now feel that I am reasonably proficient in Java. A very fun course to take.",
    "I learned how to code with Java and navigate problem sets without having any experience in computer science. I familiarized myself with the basic building blocks of programming.",
    "I learned how to use Java and the basics of computer programming. We used Java to create a variety of programs and had the opportunity to really understand what computer languages can do. I learned how to understand conceptual ideas about Java.",
    "I learned to use object based programming, plan out the program so the program is not redundant or confusing, and use my skills creatively.",
    "I feel like we gained a fairly solid grasp on Java and object-oriented programming. We also got some background on computer science in general with an emphasis on important concepts like program flow of control."
   ]
  },
  {
   "question_id": "YC403",
   "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
   "comments": [
    "This class is very teach yourself. The lectures are not super helpful, but the textbook reading teaches you the content. A strength is that there are always TA's to help you with aspects of the class.",
    "1. fun psets 2. ability to get a good grade (with optional psets and extra points on each pset) Weaknesses 1. the pace picked up too fast after spring break (it was lit till then) 2. slightly disorganized, the logistics were often decided on the job. couldve done with better planning 3. slightly understaffed. The TFs are amazing but the course could have done with more of them, especially since there are over 100 kids in the lecture, each of who will require a few minutes of TF input on each pset (shoutout to Sam 3)",
    "The professor was definitely a strength. He is very open to changing things if students have conflicts, and he is, of course, a wonderful lecturer. There were also lots of TFs, who were very helpful in helping us with PSETs. In the future, I'd like to see more TFs, though, since office hours were often swamped with students. Additionally, I wish there were more collaborative\/interactive activities, similar to CS50. I'd love to see a more accessible Puzzle Day (less knowledge required), and more of the Friday lunches.",
    "The lectures were difficult to pay attention to, I found my self constantly distracted to the point of wondering why I even chose to attend in the first place. However, through the PSETS and some intuition, you can learn the material for the course.",
    "I think this course is a great intro to programming. It really allows students to explore the field and learn what it truly means to study CS. Another strength of the class is that even though it can move quickly, you have plenty of opportunities to come out with a grade that reflects the amount of effort you put into the class and psets.",
    "The professor attempts to make this class student oriented by asking for our input about due dates etc. However, because he doesn't do this very systematically, it meant that the class ended up being pretty disorganized in terms of due dates. He should either make a syllabus at the beginning of the year or find a better way to poll students. Sometimes it was unclear when things were due. Especially for the final project, it was hard to understand the expectations. In terms of strengths, I would say the large TA team. There were psets that I couldn't have done without the help of the TAs, and it seemed like there were almost always office hours.",
    "Strengths are that it introduces you to a very useful subject. Weaknesses were Dr. Yang's teaching style and the confusing presentation of course material (classes in general were quite pointless).",
    "The Psets are phenomenal for learning, highly engaging, and the best homework I've had all year (although they can be quite time intensive). The course was very responsive to student needs; changing deadlines, providing food at office hours, etc. However, the lectures are not very helpful.",
    "Large subject area, very interesting. Only weaknesses are pacing, which was a bit slow to start but then very fast at the end.",
    "The availability of help from the TAs of this course was certainly the strongest part of it. A major weakness in my opinion is that this course tries to cram far too much information into what is an \"introductory\" course, and will require a LOT of time from students to keep up with it.",
    "It convinced me to try a CS major so I really can't complain about the course.",
    "This course is very strong. The problem sets are fun and take the right amount of time, and the lectures were well delivered. I suggest eliminating the biweekly Friday review day led by a TF\/ULA. Either reinstate the optional \"advanced topics\" class during that session or just continue with another lecture! I did not get much out of those classes and the TFs\/ULAs unsurprisingly are not very good lecturers. I also think Prof. Yang should be a little more firm with deadlines. I appreciated that he was flexible and responsive to students who called for extensions, but I felt like we could have learned more if we had stuck to the schedule more. Lastly, I think Prof. Yang should consider giving a final exam option to students who do not want to do a final project. The final project was a rewarding experience, but if students are really crunched during reading week and finals period to finish final projects and papers and study for exams, it can be tough to give that project the attention it deserves. I realize that the TA grading load is already high, but I would have loved a few more comments on my code, even when it ran correctly. I would love to hear style tips and suggestions from the teaching team.",
    "The strength of the course was the number of office hours. They really helped to eliminate stress and make the course more enjoyable.",
    "The problem sets had very clear instructions and rubrics--very well done, with little to no confusion as to what the TAs wanted. Any confusion was handled by Piazza. The workload, however, felt very unbalanced. The problem sets started off slow--one every week or two. However, during the last two weeks of the semester, students had to deal with 3 assignments simultaneously (2 problem sets + the class final project). I feel like this could be avoided very easily, with a little bit of planning.",
    "Strengths - Professor Yang was prepared for most lectures and was open to questions after class Weaknesses - it was sometimes hard to keep pace with the class. I was also nervous to answer questions in front of a large auditorium, so I would have preferred this class to have clickers. - instead of making a class period a review session, I would just film it\/make a ppt and put it online for general use. - announcements regarding assignments and TA hours should be made via classesV2 or the class website, not Piazza",
    "I thought this course was a fantastic introduction to the field. The only one thing that I would change is how Professor Yang polls students regarding whether or not to extend an assignment, make one pset optional vs. another, etc... Essentially the way he does so is by asking in class who wants a certain thing, and there are four or five people that immediately have an opinion either way, and he assumes that this represents the general consensus of the class. I don't think this is the best way to form an opinion on what the class wants, so I would suggest he either pose the question at the beginning of the class and let people vote at the end, or send out an email asking for opinions.",
    "It seems to be somewhat understaffed. There are TA office hours where you can get help on psets but oftentimes it seems there are too many students for them to take care of at a good rate. The class can be rather quick also, which makes it especially confusing when learning new concepts. Having lecture notes and example code is great as it is a useful resource to have. Also, the piazza page works well as a community forum where students ask questions about psets or logistics and get quick responses from the instructor or TAs.",
    "The lectures can be hard to follow sometimes but the course is really well designed. Professor Yang is also incredibly fair and gives so many opportunities for bonus points.",
    "This course was well organized but could have more organized grading. Grades for psets often came out weeks after they were completed, and it was unclear which TAs we should contact to figure these things out.",
    "Strengths: fantastic, caring teacher; immediate help on piazza; TA's available for so much of every week",
    "This was a super fun and interesting class. I loved how fun some of the psets were, and the teaching staff has been super attentive and accommodating.",
    "This class was tremendously fun and interesting. The lectures were a bit hard to follow in some cases, but not a big deal at all. Teaching staff were phenomenal.",
    "I find the class poorly taught and so disengaging. The lecture style does not work for an intro to programming class programming is like learning a new language. You wouldn't teach L1 Italian in a 200 student lecture, so why are we learning cs in this manner? I think smaller sections would be really useful. However it was nice to have TA office hours almost constantly throughout the week.",
    "Strengths: passionate professor that understands the difficulties many students face in their first into CS class; lots of PSets that are designed to help you learn major coding concepts--definitely a learn by doing course; pretty good textbook and other online resources readily available since Java is such a popular introductory CS language Weaknesses: some teaching staff are somewhat unreliable, since they recruit many undergraduates in addition to the graduate Teaching Fellows; it's a large class with lots of problem sets, so the number of teaching staff is necessary, but things can get lost in the fray at times.",
    "So much material, not enough time to cover it. Also, too many problem sets all crammed into the end of the semester. Finally, not enough TA's to cover the large groups of students seeking help.",
    "The problems sets in CS112 are great, and I learned most of what I got out of the class from doing them. However, the lectures were unengaging and not necessary for learning the material.",
    "I think the class was most effective at teaching through psets. I did not care much for the actual classes as I was able to learn everything from textbooks and doing psets with TAs and Professor Yang. The accessibility of TAs and Professor Yang was really the highlight of this class and I was able to get the most out of those experiences. I did not enjoy the burden that this class puts on students to go out and find their own information because I feel like those were things that could have been more effective taught in the lectures.",
    "It is hard to learn in a lecture format just like any class would be and I don't have any alternative ideas on how to teach so many people CS so I guess it just comes with the territory. Office hours are SO HELPFUL. At times before the psets were due it was sort of busy and hard to get attention so if more TAs could be there that would be better but I understand the undergrads are busy. I love the grading, how responsive Yang Yang is to student input, piazza, and the psets themselves were cool.",
    "The class was too fast paced. The material we had to learn was glossed over very quickly and the readings assigned were too long which made it very difficult to absorb the information. We also only covered low-level programming methods and then when it came to the assignments they were of a much higher level. I think that contributed to the fact that they were so painfully time-consuming.",
    "The course is extremely fast paced, especially those with no prior experience.",
    "Professor talked very fast in lecture. The lack of a final exam make it less motivating to pay attention during the last few weeks of class...I did really enjoy doing the final project though.",
    "This course has a very steep timeline a lot of things need to be taught, but I don't actually think there's enough time to cover all of them. There's also a pretty strong imbalance on the level of difficulty of the material from the first half of the class and the second half of the class.",
    "In general, I found it really difficult to learn from the lectures - some of the slides were helpful for introducing new concepts, but watching Prof. Yang do examples problems didn't help me very much. That being said, I found that the problems sets were helpful for cementing the material.",
    "This course is very good for creating new friends and being able to explore an exploding topic in as little or as much depth as wished. However, I wish the lectures would be a bit more useful. Sometimes I went to class just for the examples and would learn the concept outside of class.",
    "The course is good because there was a lot of leniency with the problem sets, lots of TA's for office hours, and the problem sets were made at a decent difficulty.",
    "Covered many of the basics of Java. However, the pace was very fast, many topics were only discussed at the surface level, and instruction could have been much clearer. Perhaps having this class offer sections would help?",
    "A strength is that they make help readily available, but a weakness is that they don't make every class important enough to attend.",
    "Lectures went way too fast and made little sense to people with no background. But then again, they weren't super necessary to get the problem sets done.",
    "I believe that this course is well taught but could be better if it were a smaller class. Java is a language so it should be taught like one.",
    "The PSETs are really interesting and fun, and you learn so much from them. The lectures covered a lot of information, and it would be really hard to keep up with them. If they were more straightforward, it would be better.",
    "The strengths of this course are that it introduces students to a broad range of programming topics and gives students great opportunities to use these skills and improve logical thinking. ALso the staff of undergraduate TAs are always available and are incredibly helpful! The weaknesses of the course are that there is a lot of material that gets covered in a short period of time, and it is also difficult to receive timely (if any at all) feedback about how you are doing in the classes and with regards to the problem sets.",
    "The TAs for this class were great, and so helpful with all their office hours. The professor was also extremely helpful in his office hours. The PSets were very interesting and although very difficult and sometimes time consuming, always rewarding.",
    "PSETs are a bit too long, I would enjoy them more if they were not as time-consuming; maybe smaller assignments would be better.",
    "I loved learning how to code and how hands-on the course was. I particularly enjoyed pair programming and the sheer abundance of office hours, which were always helpful. Other Strengths: -fun psets -easy to follow & engaging lecture slides (for the most part) -extremely engaging lecture slides Suggestions for improvement: -better lecture room: although it fit all the students, it was too big considering only a 1\/3-1\/2 the class shows up on a good day. The room is also too dim and the chairs too comfy. Thus, it was hard to concentrate in class. -There were many parts of the lecture where Yang Yang changed parts of the code to be better (less redundant, used a new technique, etc.) I wish the updated code was also always posted, along with comments on what he updated and why. As someone who always showed up to class, it was hard for me to follow all of his quick changes in person, so I wish I could go back to go through each code change at a slower pace and understand the logic behind his coding choices.",
    "I think that by nature computer science is best learned by doing -- therefore I'm not sure how conducive lectures were to learning. Of course the high demand for the course makes it impossible to not be a lecture class, but it would be better if there were sections instead of just office hours. I think lectures were good and knowledge was solidified when applied in the PSETs, but you have to take it upon yourself to make sure you are up to date with this class and are following along.",
    "The lectures move extremely fast. Office hours are constantly filled with people that have no clue what's going on. There are definitely lots of resources in place to help you succeed, but the lectures felt hard to follow. Professor Yang really wants his students to succeed and is very open to feedback and suggestions. However, I feel that he's a bit out of touch with how hard the material is for first-time coders.",
    "Though I believe the course is a very good introduction, sometimes the lectures were a bit dry and unhelpful. In addition the course had a very heavy workload towards the end.",
    "The course taught me basic syntax in Java, which was helpful. The course also had a lot of people to go to for questions; the team behind the course was incredible, and everyone tried to facilitate the course as best as possible. I was amazed by how the professor, the TFs, and the ULAs all put in so much effort to help the students. However, with the actual teaching of the course, every lecture really just ran through the material, and we covered things so briefly and quickly. It was difficult to understand the material because of the organization of the lectures: the format of the lectures with some brief explanation of the concepts followed by lots of example code was hard for me to follow. Personally, I think it would have been better if we could have studied the concepts more thoroughly and have the concepts take up more of the lecture before going to maybe one or two examples instead of the current format of having more examples than concepts. Also, the logistics of the course were really frustrating in terms of not really having a clear or understandable grading system. It was also difficult to follow when deadlines were because there would often be contradicting dates.",
    "I think the course advanced too slowly at the beginning and too quickly towards the end.",
    "The pratical experience gained by coding in java on many problem sets was very valuable. Working with another student on the final project for the class was a great way to reinforce the skills I had learned.",
    "A strength of this course is if you work hard enough and devote yourself to the problem sets, you will reap the rewards of your hard work, in learning and in grades. A drawback is the fact that at some point, there is little incentive to attend lecture, as sometimes it is more beneficial to read the text book. Another huge strength is the office hours. You can get help at literally any hour of the day, which was invaluable.",
    "It seemed pretty tedious at times to just have to look up certain methods and classes to use and I wish I'd done more with just the logic and reasoning side.",
    "Strengths: great TAs and office hours are often. Weaknesses: sometimes boring lectures, and often problem sets are hard to understand at the beginning.",
    "I thought the amount of help offered to students was great and very helpful for understanding the material. However, I think the pace of the class has to be adjusted to account for the fact different backgrounds. There weren't enough times where accurate feedback about how well the class was learning the material was collected.",
    "One strength is the amount of material covered. The course was a comprehensive introduction for someone like me who had never experienced programming before. One weakness might be the pacing of the homework. It seemed to pile on a bit near the end of the semester, while the beginning of the semester was lighter on the workload.",
    "There is SO much support for you. Unfortunately office hours were usually PACKED with people and you could spend an hour or more there without getting help. This course is super time intensive and worth it if you're ready to put the work in...otherwise, I wouldn't recommend it because you will be investing a lot of your schedule at office hours!",
    "The strengths of this class were the level of interaction involved and the very interesting content. A weakness of this class was the high speed at which professor Yang went.",
    "Strengths: Prof. Yang was a very accessible professor who would answer questions in class, hold lots of office hours, answer questions on Piazza, and offer extensive personalized help, even though it was a very big class with a large staff of undergraduate and graduate teaching assistants. He was also quite flexible in changing the course around a bit from time to time in response to the class progress and student feedback. Slides were posted online, the TAs had many office hours as well, and it was easy to get support in the course. I learned a large amount about programming. Grading was very low-pressure because it was mostly psets, so the midterm exam was not especially stressful or high-stakes. I really appreciated that we had the opportunity to demonstrate our understanding over time, rather than having our grade rest on an hourlong test or two. Weaknesses: the pace of the course was good in the beginning, but in later weeks, especially after Spring Break, it really started to move quickly. I had taught myself a little bit of programming before, so it was okay for a while, but for someone who had no programming experience at all, I imagine it would require plenty of self-study. Because there is so much support (plus the Internet) available, you can eventually figure out the psets and get a good grade in the class (no experience will *not* stop you from getting an A, although no work will stop you from getting an A), but I think the amount of self-study required is a little bit steep. For an intro programming class that takes people who have never seen a line of code before, I think the pace should be slower.",
    "The strengths of this class are office hours and the one on one attention.",
    "The lectures were actually very hard to understand and very very fast. Professor Yang compensated by providing all of the lecture notes before hand which really helped. I learned a lot from the psets, but I found that they were often unreasonably long and difficult.",
    "I thought the course was extremely well-organized. I thought the curriculum was optimally designed and I appreciated the frequent office hours hosted by TA's. My one suggestion would be for students to meet with TA's each week in discussion sections to clarify topics covered quickly in lecture. Piazza was a lifesaver.",
    "The problem sets were not organized and spread out very well. During the last few weeks of the semester (the most difficult and busy weeks of the whole school year), we had too many psets and optional psets due at the same time along with a final project. We cannot afford to donate that much of our time to this class when we have three or four other classes as well...especially since this is just an introduction course. That being said, I did learn an enormous amount from doing the psets. Probably because I would spend whole days (literally, a whole day) in office hours doing psets. I think it would be helpful if there were walkthroughs for each pset that were videotaped. Piazza was very helpful and the TAs were always quick to respond.",
    "This course could be strengthened by slowing down significantly, and offering lecture slides that explain the material in better detail.",
    "I think the psets are well-designed and there are a lot of resources for assistance. The lecture could be a little slower.",
    "The TA office hours are so incredibly helpful!!!! The quality of the lectures could be improved by perhaps going through the material more slowly. It would also be INCREDIBLY helpful if there was an official textbook for the class, that is available at the Yale bookstore.",
    "The class goes by very fast so there's a lot of things you have to learn by yourself or go to office hours to understand. Strength is that the class schedule is flexible and the professor always considers what the students want.",
    "I thought that the problem sets were enjoyable and allowed us to apply the concepts that we learned in class. I also liked how Professor Yang used examples of codes in his lectures to help us learn concepts. I would potentially have more TFs at office hours, if possible, because demand tends to be high, and it sometimes takes a while to get help from a TF at office hours.",
    "The course is quite fast paced, but Prof. Yang mand TA's were awesome and really enthusiastic, and explained everything very well !",
    "It was extremely challenging for people who had not previously been exposed to computer science.",
    "Strengths: tailored to students in class, lots of resources Weaknesses: slow pace",
    "I felt as though some parts of the course move very fast. However, I loved that there were always office hours available...extremely helpful.",
    "One strength of this course is that there are plenty of office hours, which I believe were necessary and crucial to the success of many students. I also enjoyed that the class had fun competitions and puzzle days and offered ample opportunities to fix mistakes or make up psets and to learn different Java skills. I think some weaknesses of the class are that, after a certain point, I feel like the lesson and the pset material seem more mismatched so that it is difficult to follow along during lecture. Also near the middle and end, the sheer number of psets and time spent on psets felt disproportionately high, and I felt like I was spending too much time on this class relative to my other classes. I think the class could use simpler lectures and less\/better scheduled psets.",
    "CPSC 112's main weakness definitely lay in its format; by virtue of being such a large class, lectures were not usually very helpful or specific to one person's needs. Yang moved very quickly and a lot of us were left in the dust because asking questions in such a large lecture is impractical and discouraged by the group culture. Sometimes going to lecture felt not useful at all, as I could not really follow what was happening and we sped through a lot of material. Office hours were a better experience, as CPSC 112 has some great TFs who are willing to take a lot of time to help you out. I did most of the PSETs there, and that's where I actually learned the most. I really enjoyed the PSETs; they were very fun and useful, especially for someone like me who is not dying to get into app design for Google from day 1. Great job. There is a written midterm, which I found impractical and illogical since CS is a computer-based field. We would never be required to memorize so many aspects of programming by hand in the real world; I'm not sure how forcing first time CSers to do so has any benefits. I would have rather added another useful PSET than go through that stressful exam. And the final project. I would recommend that the instructors give the option between a final project and a final exam to students, as many of us really ran out of time at the end of the year and floundered on the mandatory project, while others had many hours to spend on making a very complete, pristine project.",
    "One of the biggest strengths of the course were the psets. I felt that I learned the most from doing the problem sets and having to directly apply the concepts we learned in class to code the program. Each problem set was carefully designed to serve as a sort of concept check on all the different concepts we had covered in the past week and really solidified my knowledge after completing them. I also thought it was really amazing at how many TA office hours and how available Professor Yang was to help debug or talk through some of the tricky applications together. One weakness of the course would be that there wasn't enough hands-on portions in lecture; I'm not really sure how that can be solved, but I found that I learned how to code best by directly interacting with the code.",
    "I think the pair-programmed psets were incredibly fun and let us meet people in the course. The frequent and long office hours were also very helpful. One small issue was that sometimes there was a lot of confusion with assignments and due dates. However everyone was very responsive with piazza as well as email that these questions got sorted easily.",
    "I thought that the slides were very clear and I learned a lot. Office hours were great and their was so much support.",
    "This class is a lot of work, and has many opportunities to improve your grade if you are willing to put in the time. This can be frustrating, but the class can also be very rewarding.",
    "The course is a big lecture, which makes it difficult to stay engaged as a student. However, if you want to learn how to code, it is definitely worth taking.",
    "I think the problem sets were well designed to teach coding skills, however, there was a significant gap between the lectures and the problem sets. We went over too many details in lectures and it was hard to tie them back to the problem sets. The teaching team is a strength: we had so many office hours with the TFs, who were of tremendous help, and the professor was really taking into account our feedback (whether we wanted to have an extension for a Pset, which dates were the best for the exam, etc..). However I felt like I learned most of the material by doing the Psets on my own, or with the help of the TFs - not by attending lectures. Maybe there needs to be more pedagogy\/theory in the lectures format in order to get the material across more effectively. I am not very confident about taking higher level computer science courses after this class. This was a good intro course, but I do not feel like I have acquired a wide array of coding skills applicable in different contexts - I have simply learned how to do 10 problem sets.",
    "The course was fun because of the PSETs and how entertaining and creative they were. I also really liked how you could do pair programming on some assignments (2 students, 1 computer, 1 code). This really encouraged collaboration and teamwork on the assignments. However, lectures were very difficult to follow as Professor Yang would move through the slides very quickly. Sometimes, I did not even know what questions to ask because I did not know what I did not understand. Additionally, conflicting information between what TAs say and what the professor said made submitting some assignments difficult. Lectures need to be slower and give students more opportunity to try things out before attempting them on the PSET alone.",
    "Having a lecture style class made it hard to ask questions, but encouraging people to use piazza to ask questions would probably solve that problem. I also wish the problem sets were better spaced out since there were weeks where it became very apparent that the class needed more time on a pset. However, I liked the responsiveness of the TA's and the teacher since help was always available.",
    "I think the course provides a lot of support for students in the form of TAs. I also think the depth and breadth of material covered is reasonable. It teaches students a lot and the comparison between the first problem set and the final project is pretty amazing. I think the pacing was rough towards the end - we could have gone a little faster through the beginning or middle of the course. Also, I think the scoring system is fair but could be explained in the very beginning, so students have some idea of optional psets and what that would entail."
   ]
  },
  {
   "question_id": "YC409",
   "question_text": "Would you recommend this course to another student? Please explain.",
   "comments": [
    "Yes because I think learning to code is important, but it is a very difficult class that you need to put a lot of time into.",
    "Yes, but for the CS skills and not for the course it self. Take CS50 if you are inclined to take up a more intense intro CS course.",
    "This is definitely a class worth taking. The workload is very dependent on how well you understand the principles of CS, though. While I personally didn't have any issues, I know many people who struggled through the class. Also, if you put in the work, it is relatively easy to do well. Richard is a great lecturer and is very receptive to student feedback. I couldn't've asked for a better lecturer for this course.",
    "Yes, I would recommend the course, it's definitely very interesting to learn the material but not a very well taught course in general.",
    "Yes I would definitely recommend this course! I learned quite a bit of coding. I had some experience prior to taking the class in various coding languages, but this class was fully about learning java so I really picked up a lot. The beginning pace of the class was very good, however, second semester it got a lot faster. That said, if you hit up office hours, the TAs are VERY helpful and can be life savers. This is also a class that I would not recommend to take Credit D because you have to do a lot of work regardless-- also it's very manageable to do well in the class as your grade relies heavily on the psets! Even if you do terribly on the midterm, you can make it up through extra credit on optional psets.",
    "I would if you are willing to put in the work for the psets. The work is backloaded towards the end of the semester when the psets get harder.",
    "If you need an introduction to CS, take this class, but be prepared for very boring lectures and confusing course material.",
    "Absolutely! If you want a basic understanding of how to code in Java even without any prior experience, this is the course for you. Psets can require between 2-7 hours, but you will find it so rewarding once you've complete the work!",
    "Yes! Great intro to programming. Interesting projects.",
    "I would not recommend this course to another student looking just to fulfill a QR credit, and who has no background coding experience (as was my personal case). The students who have done best in this course so far have had some experience with coding and were generally considering using the class for their major.",
    "Yes, however it can be difficult to catch up if you fall behind so it's a fairly active class.",
    "Absolutely! I'm a mechanical engineering major who's always wanted to take a CS course, and was thrilled with this one. I considered taking CS 50 but chose this one partially for the lectures! I learn well in a lecture setting (and would not have kept up as well with videos at home) and appreciated Prof. Yang's availability on Piazza and in office hours to talk through any issues.",
    "Yes, I think it is important for people to know something about computer science.",
    "I think that every student should try out a CS class, just to see what it's all about. However, I cannot recommend this class absolutely--it is an interesting topic, but with a workload that definitely burdensome, and even unreasonable during reading period \/ finals week. Buyer beware.",
    "From what I have heard, CPSC 112 seems much more manageable than CS50, especially if you have a bunch of other courses to deal with. I enjoyed the class overall and the final project made the class much less stressful. I don't know if I learned the last half of the material as well, though, because I was focused on the project rather than a final (which would require review). Professor Yang and the TAs are nice, so if you fall behind during the lecture, you should not be afraid to ask clarification questions. Piazza is also your friend.",
    "I loved this course as the only CS course I have ever taken, and as a senior knowing that these are important skills to learn before graduation. It's really hard to start learning coding by yourself even given the immense number of DIY resources online, and I felt like this course was a fantastic introduction. Sometimes I felt the lectures weren't the most helpful because they went by quickly, but because they put all of the code online, it makes it extremely easy to look through before starting the psets to learn the concepts. I liked the course way more when I started the psets in advance, so please do that!",
    "I would recommend this to students who actually have an interest in how to program at a decent level. I had several friends who had a slight interest and so were planning to take it but they didn't stick with it. Psets can take a lot of time, so if you are willing to put in a decent amount of work to learn the core ideas of a programming language such as Java, it is a good class to take. It works well if you have people to work with or just get general help from, especially on team projects or assignments.",
    "I would totally recommend to anyone in any major.",
    "Good course to learn the basics of Java. Not a ton of work and you can skip lecture and just read the slides and then figure out the psets as you go. Most of the learning happens alone while coding, not inside the classroom.",
    "Yes, especially if you want to do coding and use programming in your future career - this class is the perfect introductory experience.",
    "I came into this class with no expectations about enjoying computer science, and it ended up being one of my favorite classes. The problem sets are enjoyable and the teaching staff is phenomenal.",
    "For reasons stated previously, I can definitely recommend this course for students that have had some coding experience to those that have had none at all. While it may be a challenge for those without coding experience and there is definitely an initial learning curve period, if you stay engaged and get over that initial learning period, you should be reap the benefits.",
    "If you are able to complete all the PSETs, you should be able to get an A. The issue is that it just takes a long time to finish most of the problem sets. They start out pretty easy, but as the course get's more challenging, their difficulty increases exponentially.",
    "I would recommend this course! It's a very effective introduction to coding, and will teach you practical skills for completing personal projects or going on to more advanced classes.",
    "I would recommend this course to students who are dedicated to putting in the appropriate time and effort outside of efforts and psets to maximize their learning experience. I definitely underestimated the time this class would take and that was a mistake on my part.",
    "Yes, very interesting and fun course.",
    "TAKE THIS CLASS. It's hard and it'll challenge you but it is so worth it in the end. Rewarding and guaranteed a good grade if you put in the work.",
    "Not unless they plan to have a spare 7-10 hours a week to bash their head against a keyboard then ultimately go to the TF's and ask them how to do it. But if you like QR stuff it could be a good idea.",
    "Highly recommended. Programming is a useful skill. Prof Richard Yang is a great professor with genuine interest in the success of his students. TA office hours are frequent, and most are quite helpful.",
    "It's a really difficult course, and it's supposed to be an introductory course, but I think you actually have to have some programming experience to do well in the class.",
    "If you're looking to gain a basic understanding of java, then this is a good course. The lectures can be pretty hard to follow because they move really quickly, but you can learn a lot from the problem sets. While stressful at first, doing the final project is also pretty cool when you realize that you've learned enough to create a functional program from scratch.",
    "Fun at first and without much programming experience it's doable and fun material to learn. It quickly, however, gets very difficult and time consuming.",
    "I would recommend this course to another student; coding is becoming more relevant to all sorts of career paths, and unlike CS50, you learn one code more in depth, making it easier to learn other programming styles. However, the one downfall to this class is that Java is used in almost no other Computer Science course, so keep that in mind when deciding which intro course to take.",
    "If you want to learn how to program, I think this is a good place to start.",
    "I would recommend the course to someone who wants to see if they are interested in CS, but take the course knowing that instruction may not always be super clear.",
    "Yes",
    "Yes. If you want to learn anything about computer science, which you probably should, this course will teach you a lot. Just be prepared for some long problem sets.",
    "Yes, it's really important to learn programming, and CS112 does a great job of teaching you how to code in java.",
    "I would definitely recommend this course to students who are new to programming and are interested in seeing what computer science is all about. It's a challenging but enjoyable class with a great support system for struggling students and lots of ways to make sure everyone ends up with a good grade in the class if they work hard.",
    "Yes- I would recommend this course over CS 50 to someone who just wants to learn the basics of programming and computer science.",
    "Yes, but only if you are willing to put in the time and if you are interested in programming.",
    "Yes, even if you never take another Computer Science course at Yale again, this course sets you up with the logic and basis needed to learn other languages on your own if you wish. If nothing else, getting through this course should give you the confidence that you can code and learn other languages. For those planning to take other Comp Sci courses, this is a great beginner course that is well-structured and extremely well-taught (at least by Yang Richard Yang). Because it focuses only on one language and its purpose is to teach you how to write efficient, elegant code, it can be much more manageable than CS50\/CS100 (whatever they're calling it now). Also, there are TFs to help you every day of the week for hours. They're lifesavers for bugs and other hiccups or just to explain material to you. (Yuxuan and Pong were my personal favorites this year.)",
    "There were definitely a lot of times throughout the semester where I absolutely hated this course, but I would still recommend it. Finishing psets successfully was an extremely satisfying experience, although they often took several hours at office hours to complete.",
    "I think that this course was a very good introduction into the world of programming. I chose to take this over cs50 because I felt it would be more straightforward to just learn one language at first, especially being a beginner. I would recommend this class if you are willing to put in the work and are a proactive learner.",
    "Yang Yang is an entertaining lecturer, though you won't learn much from the lectures. Putting in hours on the psets with TAs help is crucial to learning and succeeding. You won't come out of the course a stud programmer, but you will have a foundation of skill in algorithmic thinking.",
    "If you are happy to spend 10-20 hours a week writing code, then go for it! I did this as a QR credit and spent hours a week in office hours with the TAs. If you are willing to put the time and work in, you can do well in this course, even if you don't have much of a clue what's going on. You can also do very poorly on the one exam and still get an A in the class, so that's a nice safety net.",
    "ABSOLUTELY!!!",
    "It is a good introduction to computer science. Take it to find out if you would be interested in the field.",
    "I would recommend the course because I think programming is an important skill to have. However, it is just not taught in a way that really facilitates learning.",
    "I would recommend this course to any student with interests in computer science.",
    "Yes, because it really helped to elucidate the concept of computer science and had me thinking in a way that i often didn't think in my other classes. It also really makes you feel super good about yourself when your code actually runs. It is so satisfying.",
    "Good for an introduction to programming but not too substantial.",
    "I would highly recommend this course. You learn a lot and the PSETs are really fun to work on. Office hours are often and really helpful for the most part.",
    "Yes, its a good class to figure out if you're interested in CS and to get a basic skill set. However, be prepared to work and come into office hours if you don't grasp material immediately. Professor Yang is very fast paced in his teaching style, so its really important to keep up with the concepts.",
    "This is a great intro to Java for anyone hoping to learn a bit more about computer science. It was fantastic learning about all the different programs and algorithms. The feeling of finally solving a problem that took you several hours is definitely worth it.",
    "I would totally recommend this course",
    "Yes, but be aware of the time commitment!",
    "I would recommend this course because it is a great way to get involved in programming for those who have no CS background.",
    "The course is ideal for someone who has a small amount of programming experience but wants to formalize it in a classroom setting. Youll spend a brief amount of time on the basics before moving on to more complicated concepts, and youll learn plenty. If youre entirely new to programming, this course is definitely your best option: better than CS50 (which is very rushed and has lots of work), and certainly better than CS201 (too advanced). Just make sure to use the resources available to you in the class, be prepared to put in some time, and you will get a good grade while also learning a lot of computer science. If you understood and did well in AP Computer Science, take CS201 (or at least CS50) instead of CS112.",
    "Yes",
    "Hard but worth it",
    "I would recommend this course to another Yale student, because it taught programming in an approachable yet effective way.",
    "A great introduction to CS--but a bad time overall. The psets take a really long time and the class is dull and unhelpful. Get ready to work really hard, but it will be worth it. There are 9 psets that go out at irregular time intervals and generally poor planning all around. Final project.",
    "Absolutely. Fantastic and accessible introduction to programming. I learned an essential skill!",
    "If you are interested in CS this is the class to start with. However, if you have no previous experience with Java or computer programming in general I would think carefully about taking this class. It is very fast-paced and oftentimes I had to teach myself much of the material. Many of my friends who had never done computer programming before dropped the course within the first few weeks. This class will take up A LOT OF TIME. I would spend days in office hours trying to finish a pset. Psets are every week so be prepared to spend a lot of time sitting at your computer feeling extremely frustrated while waiting and waiting for a TA to get around to help you. That being said, I did learn an enormous amount about coding. You get to code some cool programs but I think I would've enjoyed the course better if I had more time. Grading is very fair. Every pset is 100 points and it's not hard to get full credit on the psets if you put in the long hours. There's a pset every week, a midterm, and a final project. Two optional psets can replace your midterm grade.",
    "Yes",
    "Yes great intro to programming",
    "Definitely take it if you want to see if you like computer science or programming. Even if you aren't it's a good class to take to develop a basic understanding of how computers and code works.",
    "Yes, it's definitely a lot of work, but the course was very fun if you are interested in learning to code for real.",
    "I would recommend if you want to learn how to code in Java. After this class, you can probably code almost anything. Lectures aren't that helpful and the slides showed in lecture are online. I learned a lot.",
    "Yes, this course is a great introduction to programming and is accessible to students of all programming levels. Professor Yang is wonderful, and the class allows you to develop algorithmic thinking and expand your problem solving skills through programming in Java.",
    "Yes, yes, yes even if you're not thinking of majoring in CS !",
    "Yes, if the student was up for a challenge",
    "Depends on prior experience. If you want to learn the basics you should take it.",
    "I still go back and forth as to whether or not it takes a certain type of brain to code well. Although I am much better than when I began in the beginning of the semester, programming still does not come very easily to me. However, I feel as though I learned a lot in this course and it helped me grow as a student.",
    "As someone who had never used Java (and only had a minimal understanding of programming to begin with), it was a lot of work and really quite difficult for me. It's one of those classes where the lectures are quite far ahead of the psets, so the information doesn't always make sense the first time around. I definitely had to spend a lot of time at office hours because the techniques didn't always seem intuitive to me. In the end, I really did learn a new skill set from this class, though. Also, there are lots of opportunities to turn in\/fix assignments late and to make up scores with additional psets and activities, so even though the class was difficult, I was never personally worried about failing or doing too poorly. I don't think that the class is for everyone, especially those with busy schedules, but I also wouldn't dissuade anyone who wants to take it from doing so.",
    "I think I would recommend this course to another student, especially if they are already acquainted with computers or computational thinking. It really is a fun intro to CS, although with a lot of work crunched into little pockets of time. I would recommend finding a study\/work buddy to work through new concepts with, as I did it pretty much on my own and ended up not understanding everything.",
    "Yes, I would recommend this course. I took this course not as a prospective computer science major, but rather someone who was interested in learning how to code basic Java programs as an useful skill to have. This course definitely served that purpose and I felt pretty accomplished after completing my code for a problem set. Tackling each problem set definitely required time and lots of thought, but it really challenged me to think through how to apply the Java concepts I learned in a unique way to solve different problems. A great course to learn fundamental Java concepts!",
    "Yes, it is a great introductory course if you want to learn programming basics. Very useful and fun QR credit.",
    "Yes! Very cool class and java is useful.",
    "Yes definitely. I think that I learned a lot and there was a lot of support..",
    "I would recommend this course because learning basic CS is important, but be sure that you are willing to put in time.",
    "Yes! A very fun course to take. Again, if you want to learn how to code, this is an awesome introductory course even for those with no experience.",
    "If you have not taken computer science before, you should take this class. It will be useful no matter your major.",
    "Yes I would. Anyone who has no programming experience should take this class if they are interested in computer science. Even if you are not interested in majoring in CS, you should still take this class to understand important concepts in coding and more. This is a very good conceptual class and will help students decide if they want to take more CS classes or not. It is not directly applicable as I feel like CS50 is, but you learn a lot of useful ideas that will probably be helpful in other CS classes. Good introduction class! PSETs are not too bad, there are 2 optional PSETs, and the lowest PSET score gets dropped. The midterm was also pretty easy.",
    "Yes, this is a good introduction course to java!",
    "I would definitely recommend this to students that don't have CS background - the course is friendly and provides lots of resources and TA help, with all lectures and reviews posted online. I think programming is also a really useful skill to have, and the problem sets we had to do were all varied and fun while giving an idea of the breadth of what you can do with CS."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "112",
  "section": 1
 }
}