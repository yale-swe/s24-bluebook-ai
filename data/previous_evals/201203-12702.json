{
 "crn_code": "12702",
 "season": "201203",
 "legacy_coursetable_course_id": 17979,
 "enrollment": {
  "enrolled": 134,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    4,
    30,
    68,
    21
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    2,
    4,
    24,
    57,
    37
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    82,
    38
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "CPSC 201 had its ups and downs. Most of the problem sets are pretty straightforward, but some of the test questions test concepts that are \"one step\" beyond what was discussed in class.Professor Angluin is definitely one of the ups of the class. She is passionate about computer science, and if you make an effort to participate in class, she will make an effort to know who you are. That's impressive considering the fairly large class size.I would recommend this class to any student who has minimal background in programming but wants a survey on computer programming.",
    "I'd recommend it. It's fun, being able to think in recursion is useful, and the psets, while long and often agonizing, are also really addictive.",
    "Good intro to computer science, pretty easy to understand (or at least it's easy to find help in understanding it). I would recommend it.",
    "It is a introductory class that teaches some basic, though necessary, skills in a different programming language. I would definitely recommend it to any prospective computer science majors but not to anyone else.",
    "I would definitely recommend CS 201 to others. It is a great class, but not an easy class to get away with.",
    "The problem sets are fun and interesting. Not that much work. The class itself can be fairly boring and, at times, the lecture topics are ahead of what we're working on in the problem sets. Prof. Angluin is very quiet, so try sitting up front.",
    "Phenomenal course! It is a comprehensive overview of basic computer and computational concepts. The course materials are super well structured. Every week the homework takes 6-8 hours\u00e2\u0080\u0094it is very consistent and of moderate difficulty. Prof. Angluin is great!",
    "If you know a fair amount about coding, skip this class and go straight to 223. Although it is good to know the detailed basics of computer science, you can easily learn the material in more detail and in a much more engaging format online. The professor is not engaging, scheme is a useless language, and the exams are a poor assessment of whether you actually understand the material. The only reason to take this class is if you really want more experience programming very basic, non-object oriented solutions to problems.",
    "It's sort of a grab-bag of topics in comp sci that aren't too inter-related. But all topics are interesting. If you have any programming experience at all (really, I don't think much is required) and are interested in knowing more then take this class.",
    "Psets are fun. Exams (60%) are nerve-wracking and have little to do with your psets. Seriously, you spend 6+ hours a week on psets, and then the exams come and murder you lots.",
    "I would recommend it for those interested in learning more about computer science.",
    "Totally recommended for anyone who likes problem solving. Sometimes a bit intimidating because of all the freshman comp sci majors who already seem to know everything, but Angluin doesn't expect you to have that background knowledge so you're at no real disadvantage. She's really reasonable and doesn't try to trick you or pontificate about her own views, so the focus is just on the material. It's great.",
    "Take CS 201 to be humbled on tests.",
    "The difference between Into to Programming and intro to Computer Science is that one is an intro to programming and the other is an intro to computer science. If you want to learn about how computer are programmed, take the prior. If you want to learn about how computers are designed and how they are worked, take the latter. In Intro to Computer science every homework assignment is a programming assignment but you make programs that display your knowledge of the workings of computers, not of just programming. Its a good class, great teacher. Psets are fun and rewarding but can take between 10-14 hours if you aren't a computer wiz.",
    "I thought Professor Angluin did a good job teaching the course. She kept the material interesting and her explanations made it quite easy to understand. She types up lecture notes for every class and puts them up on her website. She also makes an effort to learn the names of all of her students, which I found very nice of her.",
    "CS 201 is 8 problem sets + 2 tests. Scheme is surprisingly interesting, and you go through a number of classical computer science topics. You could probably just read the lecture notes instead of going to lecture. Midterm is unreasonable in term of length; final is more reasonable.",
    "It is a very enjoyable class that introduces significant concepts in the Computer Science field. I would definitely recommend this class to another student who wants to look at problems from a different perspective, because this class definitely teaches a new way of thinking.",
    "Definitely take this course with Dana Angluin if you have the chance. She is a great instructor. Problem sets were well-designed and appropriately challenging but not overwhelming. Start them early and they won't feel stressful; in fact, you may even enjoy them - I\u00e2\u0080\u0099d say the sense of accomplishment and euphoria you get after completing a tough pset is one of the most rewarding aspects of the course. I shopped this course on a whim and came out knowing I wanted tomajor in computer science.",
    "Comp sci 201 is a fantastic course - the course starts with an introduction to the programming language Scheme. This basic language is frustrating to use at first, but as the class progresses, it becomes quite easy, and recursion (the main functionality in scheme) is fantastic when you know what to do with it. The course then goes on to teach building a computer from the ground up, including topics with boolean logic, circuits, simple programs for a model computer, regular expressions, and searching andsorting algorithms. I would highly recommend this course. DEFINITELY TAKE IT WITH PROFESSOR ANGLUIN, SHE IS FANTASTIC! Many had problems hearing her at times as she speaks with a soft voice, but I sat in the front row and had absolutely no problem.",
    "A great class for learning more about how a computer works, and learning about functional programming, which makes a lot more sense when you've been doing it for about three problem sets. Problem sets take a bit of time, but the average one shouldn't take more than 6 or 7 hours. The tests aren't that hard, but watch out for the time limit. Overall, definitely take this class if you liked 112, or are confident enough in your programming and want to learn more about computers in general.",
    "Literally an introduction to computer science. Although limited to scheme, an exploration of many computer science concepts.Definitely recommended to other students. Also, I don't think previous computer science experience is necessary.",
    "CS201 was a reasonable intro into computer science and is, of course, required for the CS major. The lectures and the problem sets are interesting, but I found the two tests (especially the midterm) to be extremely rushed. Professor Angluin's sense of humor made the class go quickly.",
    "Pretty tough class, but you learn pretty interesting and useful things about computer theory.",
    "This courses covers a vast scope of material related to computer science - sometimes at expense of depth. Scheme's kind of strange, but it's good exposure to functional programming and it puts all the students on the same level. Doing the problem sets requires a significant amount of time, but it can be rewarding if you enjoy problem solving. Dana Angluin is an excellent instructor. If you're considering taking this course - do it.",
    "Take it!",
    "I took this class after not coding for like 8 years (I did C and C++ in middle school) and it was fine. The problem sets are SO FUN. Professor Angluin is hilarious and a great teacher. Sit in the first three rows though, she speaks quietly.Start the problem sets early. It's easier to solve problems that stew in your brain for a while. Also, you'll want to start them early because they're so fun.",
    "Take this class if you want to get a taste of what Computer Science is like. If you already know some Computer Science, you will be fine, not too much work, manageable. You will also be a bit bored, because the course has a really slow pace, but other than that a good class. The instructor is very good and helpful.",
    "take this class if you think you are at all interested in computer science. good balance between learning how computers and algorithms work and actual programming.",
    "So once a weekyou get a horrible problem set that makes you want to cry a littlebut it's okbecause your TAs will help you which is greatuntil you dont finish on time because each question takes you 5 hours more than you think it would. (each question past question 5)and then you cant really get help, but you can still email! and then you get help and aren't as sad, but are still sad because computer science is your life.Which is pretty happy if you want it to be that way.and not if otherwise.You make cool functions, and get a decent level of satisfaction.At the end of the class, I'm not yet tired of making cool functions, and think I will continue with it.Even with thatdescription above.oh and lecture notes online are SO GREAT. So CLEAR. References to relevant outside information. Just very well organized and brilliant and logical. Everything you'd expect from a course designed by CS people.",
    "Computer Science 201 is a class that has a breadth of common computer science topics, and explores these topics with a less used functional programming language Scheme. I would recommend the class to another student, even if the student is not a computer science major. The class is interesting and well crafted for the student with existing programming experience.",
    "Introduction to Computer Science is one of the best courses I will ever take. Its value lies in what you put into the course. I spent more time on this one class than all my other classes combined. And despite doing terribly, I will be more proud of whatever grade I get in this class than an A in any other class. I earned it.",
    "I would definitely recommend this class. It is quite a bit of work but it is so fun that you don't even notice or care how much time has passed. Class itself is a little boring but the psets are so great that it is totally worth it.",
    "It's very interesting and you will learn a lot, especially if you come in with only a year of programming (AP CS in my case). You'll also learn about computers and how they work, which I had never seen before. There's quite a bit of work though, and it can be tedious at times, but often it's rewarding when you finally finish.",
    "While programming is a useful skill that everyone should have some expose to, and this course would be a good introduction to it, I would not recommend this course for anyone with significant programming experience already. It really is the basics, and will quickly become tedious. Problem sets are long, and have to be almost perfect.",
    "The problem sets are really really cool and you'll learn a lot, whether or not you know how to program. Some may disagree, but Scheme is an incredibly awesome language. Take it! If you have even a little programming background you don't need to take CPSC112, go rightto 201! Much cooler work. Recommended \u00e2\u0080\u0093 everyone should take some time to learn about computers, regardless of major.",
    "Do not take this class unless you're a cs major. It was so hard and added so much unnecessary stress to my life.",
    "Computer Science 201 was, on balance, an interesting and worthwhile class, but not for everyone (you shouldn't take it if you're not considering CS (it's a theory-heavy class that uses Scheme (an impractical educational programming language))).",
    "Definitely take CPSC 201 if you have time! Really fun and well taught.",
    "I would recommend CS201 to another student, since it builds strong program-building techniques. I would summarize the course as a broad presentation of the basics of computer science, tied in together through problem sets.",
    "I would definitely recommend CS 201 to another student. It's an interesting class that both gives you more programming experience (basically invaluable these days), and teaches from a theoretical perspective of computing. The lectures are generallyinteresting, and the problem sets were actually often fun to do. Take it with Professor Angluin if you can, as she really knows what she's talking about.",
    "Computer Science 201 is that class you skip because lectures are slow and the concepts are easy enough to pick up from staring at online lecture notes for 10 minutes. The programming assignments will be very easy for anyone who's ever programmed for fun.",
    "This course isn't terrible, but I don't think it's worth the time. The programming homework is tedious and time-consuming, yet I felt it doesn't really help you learn the material in the class. The topics themselves were interesting, but not covered very deeply.",
    "Good introduction to a variety of basic principles of CS. P-sets are fairly difficult but interesting. Reasonably well taught, but tests can be problematic due to insufficient time.",
    "Overall I enjoyed the course, I thought the problem sets were interesting and very fun to work out and complete. At times lectures could be dry and I felt that once I lost track of what was going on it was hard to figure it out again mid lecture. The psets do a really great job of applying topics from lecture, so I always felt like even if I didn't understand something from class I would be forced to get a solid grasp on it through the homeworks. Plus there's no final and the two midterms are reasonable and 50 minutes each.",
    "If you have any interest in how computers work or enjoy programming or logic, I think you'll really enjoy this course. The problem sets are addicting. I would do some of these problem sets even if they weren't assignments. For no other class have I been able to spend hours on end working on an assignment and unable to rip myself away. You learn from the ground up the basics of the theory behind computing, from computability and boolean logic, to the hardware of computers, to how computers handle strings. Very interesting material. And Dana is wonderful!",
    "CS is a lot of work. Take it Credit\/D\/Fail",
    "If you have any interest whatsoever in computers (and all of our generation necessarily does), please, do yourself a favor and take this class. It is a gem of Yale college. Nearly every class session is beautiful. I would take it with Dana Angluin, for she is one of the best professors I have ever had the privilege of knowing. Last semester I took CPSC 112 to start the journey of availing myself of the power of computing, and I must say, after this class, I am even more eager to continue my computer science education even though it will not be my major. There is very little required reading for the course. You learn everything by experience with the programming assignments, which were often a joy to complete. So far my computer science classes have been just pure problem solving, which I love. I look forward to taking CPSC 223 next semester.",
    "CPSC 201 is considered to be \u00e2\u0080\u009cone of the best taught classes at yale\u00e2\u0080\u009d especially if it is taught by Dana Angluin. I highly recommend the class to anyone who has some previous programming experience and is interested in CS. Be prepared for a lot of work though. I was taking CPSC 201 concurrently with ENAS 151 and PHYS 200 and this class was more work than either of the other two. The syllabus says 6-8 hours of work a week but each pset (8 of them) took an average 12 hours each. There as a large amount of help though, the TF\u00e2\u0080\u0099s at the Zoo are awesome and the hours are plentiful and convenient. Scheme may appear to suck in the first couple weeks but you get used to it and the psets begin to flow better. There are two in-class exams; they are ok. There is a lot to answer in a very short period of time. Overall, a great class!",
    "Good class if you're interested in the area and are considering the major. There are virtually no practical programming skills that you will take from this class, but the topics covered are very interesting and great teasers for larger topics in the discipline.",
    "CS 201 is an excellent class. It is not a programming course -- it covers a variety of theoretical and practical topics. Definitely recommended for potential majors or anyone else who wants a broad perspective on what Computer Science (not just programming) is about. Dana Angluin is a fantastic instructor -- she turns a big lecture into a smaller, engaging environment.",
    "Don't be put off by the use of Scheme. It's actually a perfect language for this class's purposes. If you don't know much about computer science (not the same as programming), definitely take this course, you will learn a lot. The problem sets take a bit more than 6 to 8 hours a week, though, so don't believe the syllabus. About 20 hours per week is closer.",
    "CS 201 is a very good theoretical foundation on what computation is and how computers work. If you want a class where you learn how to program and do cool stuff to pictures, music etc. take CS 112 instead. If you are thinking of majoring in Computer Science and want to see what it is like, CS 201 is very good for that.So that\u00e2\u0080\u0099s whether to take it, now if you do take it, advice on how to take it.1) Ask questions in class if things are unclear2) Respond to Prof Angluin\u00e2\u0080\u0099s questions. The way Prof Angluin teaches, for the most part, is by asking questions the class how one would write a code or solve a problem. You\u00e2\u0080\u0099ll get more out of the class if you are involved in the discussion.3) Chill at the zoo. You learn cool things there just by being surrounded by other coders like that reverse is a built in scheme function. Plus, you can ask the TA or classmates questions if you get stuck.4) Work on your assignment early and often. You get more done in small spurts than an all nighter.",
    "Take it.",
    "I really liked this course. Topics covered were very interesting and psets were manageable and somewhat challenging. Really teaches you to think rigorously and analytically. Dana is wonderful - you can't help but love her, even when she spends 20 minutes calling on students to have them guess integers that will disprove the Collatz Conjecture. She also genuinely tries to learn people's names, which is impressive in a class as big as this. Be warned that you won't learn anything applicable - if you want those skills, take CS 112.",
    "Do not take without prior programming experience (preferably a somewhat strong background). Teaches you to think recursively and elegantly. Not for someone only looking to get a taste of the field - take CPSC 112.",
    "Excellent crash course in Scheme. By the end you know recursion very, very well. And that in itself is a benefit I suppose.Other than Scheme the rest of the course is a survey of various topics in CS in an extremely shallow fashion. Warning to students who have already taken EE201: you'll find a great deal of the course a review. Anyone who has taken EE201 and has coding background should just skip to 223.In terms of workload the course really isnt that bad. The homeworks are pretty easy. The tests are easy but you aren't given enough time to actually complete them so it really comes down to time management and coding very quickly without making mistakes.",
    "This is a class on (most of) the many layers of computers: you'll learn a language (Scheme), how languages are parsed, [NOT how a parsed language is compiled into Assembly language], how an Assembly-like language is formed of 1s and 0s, and how those 1s and 0s correspond to the different \"logic gates\" formed by the physical circuitry of a chip (of course, this latter part is done conceptually and with diagrams). There's other stuff as well - Turing machines, recursion, speed of program execution, etc. I had for a long time been wondering, \"How do computers actually work?\" 201 gave me a pretty decent answer.I and a few others took this class without any computing background (112 \/ Intro Programming is listed as a prerequisite); it was pretty rough, but we all survived, and since I only had one semester available to take a CPSC course, I'm really glad I took 201. (I'll learn Java on my own later.) I'm also really glad I took it Credit\/D\/Fail; I never thought I'd be working so hard for a C.Also -- take it with Dana! Do it! She's amazing.",
    "Take it, but be warned it's not for everyone. The material is really interesting and solidifies what you probably learned in an intro programming class, and Dana Angluin is awesome. However, problem sets were long (10-12 hours per week, for me) and often frustrating. It's definitely a fun elective if you're math-oriented; if you think you're interesting in majoring in CS, it will help you decide whether or not that's for you.",
    "Recursion. You will do lots of recursion. In Scheme - so it's not a useful language but everyone's on equal playing ground. Cool concepts. For a full understanding of this class, please read this review from the beginning.",
    "YES! It was so interesting. Definitely one of my favorite courses. I had no computer science background, but Dana does an awesome job of making it an accessible course for everyone.",
    "Great class if you want to know what computer science is. If you have no background, you may be slightly frustrated because there are people who should obviously NOT be in an intro class, but once you get over that you'll learn a lot. Even if you don't end up majoring in it, it's still a QR credit - a useful one for life that is not a gut, if that's what you're looking for.",
    "I think this is a class that everyone should take! Thinking in terms of compsci can really make you think about the world differently, and Angluin is an amazing professor that makes things very clear. The problem sets are challenging but extremely doable - especially since so many office hours are offered. TA Dan is also just the best. Take it take it!",
    "I took it curious about computers and technological progress from a political\/economic perspective, which, I would say, was probably a mistake; there are seminars that deal with that subject directly. Also, don't Credit\/D it, it's really going to be much better if you're invested in it. If you're interested in CompSci for the programming alone, it's not that you won't learn anything from this, but you'll learn a lot of other extraneous stuff besides.Prof. Angluin is wonderful.",
    "I recommend this class if you already have basic programming experience. The problem sets are pretty fun.",
    "If you are a non-major, I would be wary about taking this course. It is interesting, but the balance between the workload and what you get out of the course is out of whack. Problem sets routinely take 12-15 hours per week. If you took CPSC 112 and enjoyed it, don't take this course because you expect it to be similar. It is not. Overall, this is an interesting course but requires a significant time commitment and can be very frustrating at times.",
    "TAKE IT! Angluin is awesome, and really tries to get to know her students even in such a large lecture. As for material, Scheme has a really steep learning curve but once you get over the first pset you get the hang of it. I felt like I learned a lot in this course and would highly recommend it (also, no final exam)!",
    "It's awesome. That said it's not the way to learn to code if it's your first time or your goal is to learn how to do web development and stuff. It's much more computer science theory stuff and it's intelectually stimulation but after you learn recursion (basically the first and only practical thing you learn) it's all manipulation of recursion and about computer time and efficiency and logic and circuits and how compilers and computer work in the abstract.",
    "Take it if you want to major in CS...or take it if you want to learn a little programming on the side. But it's not really a course that would get you interested in computer science.",
    "Yes, it teaches you fundamental CS ideas through functional programming. Even if you have some programming experience, you will learn a good bit, since Scheme (the language) introduces a new way of thinking. The hwk takes about 10 hours a week, and is not terrible, though you may get stuck on the last problem on some of them.",
    "Yes, I would say take it if you like computer science and are willing to put the time in.",
    "Definitely recommended. Everyone should understands the basics of computer science, regardless of major.",
    "Required for the Computer Science major, and a worthy intellectual exercise for anyone even casually interested in the discipline. The problem-sets are engaging puzzles.",
    "A fantastic overview of computer science. I would absolutely reccomend it to anyone who wants an introduction to the field or to really learn how to program in a functional language.",
    "It was a good class to get a basic understanding of computer science principles.",
    "Yes, I would definitely recommend it! The psets, are hard, but enjoyable. I learned so much in this class.",
    "Highly recommended. Don't take it to learn how to program, although you will understand recursion very well, but, yes, Scheme is fairly useless. But you will leave this course understanding much more about computers than before. Professor Alguin is a good instructor. The problem sets take 8-10 hours, and after finishing each one I felt that I learned a lot.",
    "I would definitely recommend CPCS 201 to another student. It is a very interesting class and the problem sets are fun to work on. Definitely take this class if you are interested in computer science.",
    "This course surprised me because I went into it thinking it would be mostly programming. It is not. Although the Psets are coding, they are designed to force you to merely think about the concepts covered in class. This class is in introduction to the SCIENCE that is CS. You will cover a range of topics that are designed to teach you how computers and their programs work from top to bottom.In this regard, this is an excellent class. I knew how to program in multiple languages before, but after leaving this class, I feel as though I can say I know how a computer works from a conceptual standpoint (don't worry this class is not an electrical engineering class). I really enjoyed the class, its topics, and the Psets we were assigned. The class's biggest strength is the way the content is structured (in the sense that you build up from the basics). The class's weaknesses are the exam and the lack of organization in lectures. The exam questions are not particularly difficult, but they are a test of speed. I find this to be a little counter-intuitive for a CS class, since speed is not usually given priority over things like clever or deep thinking. In essence I don't think the exams are really evaluating me. The lectures were great individually, but there was not a lot of connection made from lecture to lecture and topic to topic. I found myself at times thinking, \"how does this all fit in?\"In the end this is an EXCELLENT, low-stress, very informative course. Highly recommend it for anyone interested in computers at all.",
    "Highly recommended.",
    "Good intro class, learned a lot.",
    "I would definitely recommend taking this class with Professor Angluin. Great class, whether it's required or not!",
    "I would recommend CS 201 for anyone interested in further study in computer science, but for people who are just looking to understand code on a very basic level I would stay away from it. The grading on the problem sets can be nit-picky and it's can be difficult for someone who is just looking for an \"introduction to computer science.\" That being said, for people who are interested in going into more detail, CS 201 is a great course to take.",
    "If you're interested-- even vaguely-- in computer science, I'd really recommend this class, especially with Dana Angluin. By the end of the semester, you'll have a nice command of the Scheme language, and will have established an appreciation of the universality of the topics and problem solving strategies you'll learn in class. If you are a problem solver, you'll love the course-- and the workload is pretty manageable too!",
    "This is a really good class. I won't speak to the prospective CS majors who have to take this class, but I'm a philosophy major with a little background in logic. I found this to be a great opportunity to see how another discipline uses all the things we develop in logic to very different effect (to make things, like computers!). The problem sets took me slightly longer than average to complete; they got easier the more experience I had with Scheme. The tests were fair but took more time than we were given, but the curve was rather generous. Prof. Angluin is one of the smartest and funniest lecturers I've ever had, and I found her to be absolutely amazing in terms of explaining difficult concepts and being responsive and interesting in class. One bit of advice: get theScheme book from the library! It's actually very helpful for the p-sets!",
    "I would recommend it as a good first Comp Sci class for people who are interested in the theory behind the subject. For people who've already taken Computer Science, it might be a bit slow, though.",
    "If you're thinking about computer science, definitely take it. Dana Angluin is funny and a good teacher. The problem sets aren't too hard, and can be pretty enjoyable.",
    "Great variety of topics, Angluin is a good lecturer and the psets were very fun. Beware, the midterm and final are much harder than the practice exams she gives you, and the later psets can be pretty tricky. Don't skip lectures even if you think you can do the psets without them, it will bit you back in the end.",
    "I AM: Freshman, computer science (and maybe art or psychology) major. I knew basic C++ (command line only, up to classes and reading\/writing to text files using<fstream>) before this but hadn't touched it in about 10 months. I'm kind of geeky, but I'm most definitely NOT one of those people who've been programming since they were 2 months old. I 'get' math\/logic things really slowly, so it evens out.THE GOOD: I was expecting it to probably repeat a bit of what I learnt before, but turns out 112 (Intro Prog) covers all that so in 201 you really learn a lot of neat stuff high school computing wouldn't have taught you. I learned something new every lecture, and it definitely lived up to the promise of being an introduction to computer SCIENCE. This was the class of my semester where I actually had that \"wow, I'm learning so much\" feeling (in the others it was more of \"wow, I'm learn...wait, what did I just learn?\")THE BAD: Some parts of class kinda assume you understand math stuff about logs and exponential time and whatever, which I didn't really get. It often switches to being over your head without you even realizing, and back to understandable before you finish squinting at the blackboard. This is bad because then you don't really know what you don't know. There will be many people who've learned all this stuff before in the class. Lecture goes pretty fast and if you're a little slower to 'get' things you'll have to rely on the online summaries, which weren't regularly updated this term.THE WORK: 8 problem sets over the semester. Basically, I sucked at them, so I don't know what I'm doing as a CS major. I found them really time-consuming, and some questions were totally impossible without the help of others (i.e. aforementioned people who started coding at 2 months old). I also didn't make good use of the TAs, and spent a lot of time flailing for literally 6 hours on my own over one question when a trip to the Zoo would have clarified things in 10 minutes. You get points docked for lateness, so DO NOT DO THIS. The class is apparently not curved. Also Prof Angluin posts really good lecture summaries online, which help immensely when you either don't understand or skip (oops) lecture.TAKE THIS IF: You're looking for a challenging but interesting course to round out your semester; you're thinking of being a CS major; you know programming, but are interested in understanding some of the lower level concepts\/basics of how computers work their magic. Actually I think everyone should take this, because it's really quite interesting, but perhaps as Cr\/D\/F.THE PROF: Prof Dana Angluin - I was kind of intimidated by her, but there's really no need to be.PARTING WORDS: Start your problem sets early!!!!!!!! (!!!!) (!)",
    "It's a really interesting class to learn about the theory and ideas behind computers, but it involves a ton of work to understand. You have to transfer the theory that you learn in class to replications of the theory in Scheme, which is a pain to do. I would recommend it if you're willing not to procrastinate on the problem sets. They take a ton of time.",
    "The course was a good introduction to the theory of computers science and it teaches you to program with recursion.My problem with the course was that it was taught in scheme, the language lacks for and while loops and forces you to do everything in recursion.I feel that I have picked up bad habits that I will need to unlearn in the coming semester.",
    "It's a basic introduction to the concepts of CS, so you will likely not be surprised. The weekly problem sets are often a pain and time-consuming, but you will feel an intense satisfaction when you finish them. Expect to spend 8+ hours a weekon work for this class. I highly recommend you start each pset early and go to the Zoo hours. The exams are slightly unfair, as most people have to rush to even finish them.",
    "Highly recommend it.I went in with very little programming experience (fooling around on TI calculators in high school, but no compsci classes before and certainly no work with Java or C or whatever) and ended up loving the class. The problem sets are interesting and led us to learn just how a basic computer can work.Also, this is a great class to share your ideas during lecture if you have them. Professor Angluin is extremely receptive of students' thoughts and follows any guesses through on the board to see how they play out.",
    "In short, computer science 201 teaches you the basics about computer science that a good computer scientist should know. If you were ever interested in learning how computers can store memory, compute equations, parse sentences, or run extensive programs, this is the course for you. I would definitely recommend this to another student interested in computer science as a major or who is curious about computers in general.",
    "I loved teh course, but I don't feel like the hand-written tests properly displayed my knowledge of the material. I would take it if you're willing to put in the time. It's fun.",
    "If you're interested in CS and are prepared for the class (have programming experience), I would recommend it with Dana. She teaches very well, and the material is very interesting - we cover Scheme, machine architecture, Turing Machines, gates\/circuitry, and touch on a few proofs for fun (but not for exams!). Start the psets early so you can think things over for a few days and get help if you need it. This course is also useful for getting acquainted with the Zoo or even just turning in stuff to the Zoo remotely.",
    "Definitely take this course. The homeworks can be fun if you don't put them off to the last minute.",
    "Great intro in all aspects of comp programming thinking.",
    "CS 201 is essential for understanding many of the theoretical bases underlaying computer science. It is fun and exciting, and may be the only homework that you look forward to doing. Each problem is a puzzle to figure out and it twists your brain in interesting ways. Angluin is a fantastic teacher."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "201",
  "section": 1
 }
}