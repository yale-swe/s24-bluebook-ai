{
 "crn_code": "21761",
 "season": "201501",
 "legacy_coursetable_course_id": 31574,
 "enrollment": {
  "enrolled": 170,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC305",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    5,
    4,
    35,
    70,
    32
   ]
  },
  {
   "question_id": "YC306",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    3,
    11,
    49,
    58,
    24
   ]
  },
  {
   "question_id": "YC307",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    100,
    43
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC304",
   "question_text": "How would you summarize ECON 111 01 for a fellow student? Would you recommend ECON 111 01 to another student? Why or why not?",
   "comments": [
    "Not unless it is their major",
    "Take CPSC 223 if you are interested in coding. It's important to know whether your data structure will be efficient, and this class will teach you that. If it's with Aspnes, you can take other hard classes with this. If it's with Eisenstat and you want to take 365 concurrently with this class, be prepared to let your GPA go for a free fall.",
    "With Professor Aspnes, this course is exactly what the title states. A course on data structures and programming techniques, and a fun and effective one at that. The problem sets varied in difficulty, but on average I would say they took up to 8 to 12 hours a week, though this is different for each person. From what I hear, the class is much easier with Professor Aspnes than it is with Professor Eisenstat, but all the same I feel like I've learned a lot.",
    "You learn C. Fairly challenging, but doable if you have a good group of friends in the class.",
    "This class was wonderful. Professor Aspnes is an amazing guy. He's funny, he's interesting, and teaches rather well. The exams in this class were very manageable and the PSETs were of reasonable length. Budget time for this class and you should do fine. The material is super useful for anyone who is interested in studying the fundamentals of the field of computer science. The work is non-trivial, since some PSETS can take up to 10-15 hours, though most will take less (on the order of 5-8). There is one PSET every week. Overall, definitely take this class!",
    "This course was definitely challenging, and you have to put in the work to do well. If you are a computer science major you have to take it, but I also think that it is worth it and will help you grow as a programmer. If you are simply interested in programming, I would only take this course if you have a reasonable background in programming established.",
    "Take 223! Now! The whole world of real life programming is waiting to be explored, but you'll be totally useless without a strong grasp of C. If you liked CS 201, chances are you'll love 223. Aspnes definitely is easier than Eisenstadt, but the grades get turned down so do NOT think you're getting an A if you have a 94. Exams are straight forward, exactly like the practice exams. Ours were a bit easier, actually. I would just recommend starting the hw WAY in advance so you don't get slammed the night before the pset is due.",
    "Great class. I thought I knew how to program prior to this class, but it's really from this that I've realized how much I had to learn. Aspnes is a great professor, and while I've heard that Eisenstat is a better professor, Aspnes was truly great. Very smart guy, great class and the homeworks were actually interesting.",
    "Aspnes did a great job with this class. That being said, I think Eisenstat will have it next year. Oh well...",
    "223 is the first non-trivial CS class Yale offers. Everyone says it is easier with Aspens, but having taken it with him, I can't know. It teaches some very fundamental concepts, and solidifies your knowledge through psets that count 60%. Aspens is fun but sometimes hard to follow. However, he is amazingly approachable and responds to emails\/piazza questions is light-speed. His quizzes are pretty doable. Some psets are easy, see Encode and Turing Machine, other take a lot of time and thought, see Compositor. They were challenging and informative enough to teach you many of the key concepts of the class, and he made sure each weeks material was relevant to each week's pset (actually, that may have been very helpful, as in real life you rarely know how you should implement something before putting a lot of though into it.) I think this is part of the reason his quizzes always have a question asking \"what is the best data structure for this problem\" (spoiler alert: it is usually hash tables, except on exams, where it is usually not.)",
    "Awesome class, I would definitely recommend it to another student. This was the class that I learned the most in this semester. Aspnes was pretty good and a very entertaining lecturer, definitely not dry. Two of the psets were very difficult, and I ended up spending more than 20-30 hours on them, but the rest were more reasonable. The exams were very reasonable as well; if you know pointers and how to use and implement the various structures, you will do well. My only concern is that the class will probably be curved down, because it seems like most people are doing well in the class.",
    "This is not an easy course. It takes a lot of time to do the psets, unless you are one of the whiz kids who could basically TA the class and finished the psets in an hour or two. Professor Aspnes is sort of a haphazard lecturer and class isn't particularly helpful, but his online notes are incredibly comprehensive, office hours are very helpful, and so is Piazza. I'm not a computer science major, and wouldn't necessarily recommend it if you don't need to take it because it stressed me out a ton, but I did find learning the data structures to be useful and interesting.",
    "Aspnes' 223 is basically 9 pretty easy psets and 2 pretty easy exams. Lectures are well said but ultimately you get most of the learning out of doing the psets, some of which are embarrassingly easy and others are a little more strenuous. Any legends you've heard about 223's difficulty most likely refer to Stan's version of the course. You'll maybe learn more with Stan but there's something to be said for easing you into C more gently with the knowledge that 323 is right around the corner ready to knock you down a peg. The psets are also pretty fun, and Aspnes is a pretty funny dude and a whiz at answering piazza questions. All hail the ponytail",
    "Absolutely. It was a very enjoyable class that taught me a about essential computer science topics and helped me think more like a computer scientist. It was enjoyable and I liked the lectures. The psets were sometimes difficult but were fun challenges and doable.",
    "Great intro to C and data structures. Somewhat tedious at times but the course is definitely necessary. I learned a lot.",
    "CS 223 will teach you C and all sorts of data structures. Aspnes teaches a good class. In many cases he provides much of the code needed for psets, which is nice if you have trouble with the implementation of some data structures. Overall, a pleasant but understaffed course.",
    "Basis of knowledge for any tech interview",
    "CPSC 223 with Professor Aspnes is a gradual introduction to programming in C, followed by a quick tour of basic data structures. Along the way, you will learn programming techniques through problem sets that are difficult for some, but not challenging for experienced programmers. It is true that this course is much easier with Professor Aspnes than with Professor Eisenstat, but you will get what you give. That is, if you read all of Aspnes's notes and spend an hour or two before every class really absorbing the topics, you will get just as much out of this class with Aspnes. I highly recommend the course.",
    "Not too challenging if you already have some C background. Great survey of data structures. Obviously you have to take it if you're a CS major. If you're not, 223 gives you a good taste of what real programming looks like.",
    "If you're a CS major, you have to take it. If you're not, realize that it is a lot of work (and not easy) but totally worth it in the end, especially if you are interested in computer science.",
    "On the one hand, this course is kind of annoying, and C is a borderline obsolete language (Python MasterRace). On the other hand, learning C will turn you into a SUPER HACKER SEX GOD. So you should probably take this class. Workload varied a lot from week to week. The first assignment took less than an hour, as did the turing machine assignment. On the other hand, the ascii art compositor took me between 25 and 30 hours in one week, which I found unreasonable. In general, this class got a lot easier once I learned to write programs with lots of smaller functions for implementing data structures and debugging them individually instead of putting everything in main(). This is largely inactionable advice (sorry), but if you have the opportunity to choose, you should definitely take this course with Aspnes over Eisenstat. Aspnes provides incredibly detailed notes and puts the code for all his examples on the course website, which makes it orders of magnitude easier to learn about different data structures. There's really no need to take notes in class because everything is on the course website. Aspnes is also incredibly responsive to student questions and requests. This term, the course used Piazza, which lets students ask questions anonymously, which can be answered by the instructors or by other students. Basically any time of the day or night, you could ask a question and count on Professor Aspnes or this one dude Lee Danilek (whom I don't know personally, but both respect and deeply resent for his skillz) answering it within an hour or so. I took this course as a physics major, and at this point, I basically think it should be a requirement for most STEM majors. Coding is such a neglected skill in most undergrad curricula, considering that almost all research people end up doing in grad school relies heavily on coding. This class will get you up to speed. Although it's unlikely you'll be using C very much in real life, the programming skills you'll get can be easily applied to any language. Side note: if, as Aspnes frequently joked during class, you're taking this course with the intention of becoming some sort of evil consultant, faceless finance drone, or tech bro, shame on you. When the revolution comes, you'll be first against the wall.",
    "Would recommend to those thinking to major in CS but not really to others",
    "A really tough class. I would only take it if the rest of your classes are light this semester.",
    "Yes, it is a great class especially but not exclusively for CS majors. It teaches a lot about why certain things from Intro Programming courses or books actually work and a lot of necessary information for understanding future programming tasks.",
    "I recommend it to those who are interested in coding and learning more about data structures in C.",
    "CS 223 covers three major bases that are very important to a computer science education. First, it teaches you about the wide array of data structures that are out there and a couple ways of thinking about implementing them, Second, it introduces you to a very basic and historical language like C, which is a good skill to have. And third, and perhaps most importantly, it give you a better sense of how computers work on all levels and how to interact with them. Whether this is thinking about things in terms of space or time complexity, or understanding how piles of bits are manipulated on a lower level, I feel much more intuned with the world of CS after this class.",
    "Took the course Credit\/D and put in a lot of hours\/all-nighters on the Psets but learned a lot and got the CR.",
    "If you want to learn C, if you want to learn how to code incredibly well, if you want to work at a tech company writing code, if one day you want to be brave enough to take CPSC 323, take this class. But if you are looking for an overview of data structures and their uses, this class was pretty superficial on that regard; I'd suggest skipping ahead and taking CPSC 365, though if you are a CS major that isn't an option. (Which is why you should be Applied Math; there are too few of us :( )",
    "Definitely take 223, maybe even if you're not a CS major. I've heard it's harder in the years that Eisenstat teaches it, so I can't comment on that, but this year it was not too much work, reasonable tests, and lecture was pretty interesting (but I felt it was not always necessary). Aspnes is very helpful and accessible. Office hours in the zoo can get crowded since they're very understaffed, but that's probably a problem with many CS classes.",
    "223 with Aspnes was great. I of course have not had Stan yet, but I thought Aspnes did a great job, and the problem sets were still very challenging and I think probably more fun than Stan's. Take it! It's a great course. There was only one pset that I spent 20-25 hours on. The rest were 5-15 usually. Exams were pretty easy. There were 9 problem sets.",
    "With Aspenes, this course was manageable. I hear it is a lot worse with Stan. Good luck-- you'll be programming a lot.",
    "The course itself is good, with a lot of interesting material thrown in to get you to understand complicated data structures. The one drawback is that James Aspnes is kind of a strange lecturer. Very intelligent and a great programmer, but sometimes can be a little confusing in his tangents.",
    "It is required for CS majors so yeah. Also, I am told that the information in this class is very useful for any interviews you have in the future. I would start PSets early, and pay attention in class or at least read the notes online.",
    "Yes, given a fair amount of coding experience already (this is not appropriate for a first time computer science course, even though it is technically possible for a student to do that).",
    "A good class. You will spend a lot of time shuffling around with pointers. There are some really cool data structures out there; it is neat to learn about them. You will be reasonably comfortable programming in C after taking this course, but more importantly, you will know good ways of handling large data sets reasonably efficiently, depending on what you want to do.",
    "Take it if you feel confident in your abilities. It's less work in terms of time taken to complete the psets compared to CS201, but it's also more demanding in terms of the complexity of the programs and logic required to write them.",
    "Psets and Aspnes' notes make this class 100% worthwhile, even if the lectures are not. Tough, but doable, and hopefully a great foundation for 323.",
    "CS 223 is a difficult class no matter who is teaching it. I find I find it very enjoyable at some times and completely frustrating at others. As a non-CS major taking it, I still found it worth my (considerable) time. I would definitely recommend it to anyone that really wants to learn the foundations of coding.",
    "Yes, I would recommend it to a fellow student, but only if they truly want to gain a deeper understanding of computer science. Although the lectures were fun and the psets explored interesting concepts, the psets did take too much time for this to be a class that one would take purely for fun.",
    "Take if you're considering majoring in computer science",
    "Not particularly exciting content, but also a totally doable class with Aspnes. Wayyyy more memory allocation and pointer arithmetic than any data structure. So you understand on a really fundamental level how C works, but may never have to build an actual hash table. Which is fine, but not what I expected from the class. Lecture is often confusing, but his notes are amazing and very thorough, so even if you're confused in class don't worry. Problem sets are doable, although variable in difficulty. Some take 3 hours, others 20.",
    "As a Cognitive Science major, I found this class both difficult and enjoyable. Don't take it if you do not have a strong computer science background. Do take it if you want to walk away with an even stronger understanding of programming and computer science in general. Professor Aspnes is great and is super helpful. The problem sets usually take several hours (I probably spent around 15-20 on the hardest one, with the others usually taking fewer than 10 but more than 5 hours). Each problem set is very difficult at first, but the feeling of successfully completing one is awesome, and you'll really feel like you understand a topic in great depth if you're able to implement your own data structures. As a non-CS major, I would definitely recommend this class to anyone who's at all interested in computer science.",
    "Gut. Take as 5th or 6th class.",
    "223 overall is a pretty good class. It's an introduction to C that will get you understanding the underpinnings of how the language works and how to write code that holds up to semi-rigorous testing. I've been told that this class is easier under Aspnes than with Eisenstat, and After taking the class I'm inclined to agree--hopefully we'll still be prepared for 323 in the fall, but it will likely be a bigger step up than for students in previous years. Also, note that Aspnes is a bit of a harsh grader, although he's generally fair (and an extremely entertaining lecturer), so don't expect there to be any kind of forgiving curve in the class.",
    "Great class to learn C. A lot of work though.",
    "If they were in comp Sci I would recommend it but to anyone else I would say stay away.",
    "Take the class, you can do it. The difficulty is far outweighed by the utiity",
    "You learn how to program in C, and then a survey of how to implement and when to use various abstract data structures. Nothing too mind blowing, but very fundamental stuff you need to know. Definitely worth going to lecture for Aspnes, but if you're one of those people that just doesn't do lecture, you'll be fine grade-wise, but there are a lot of things you learn in lecture that are valuable regardless of their effect on your grade!",
    "CPSC 223 with Aspnes seems like a somewhat different ballgame than with Stan. I think this is for the better--Aspnes is funny and teaches more about coding techniques. However, I feel less prepared for 323 if I want to take it. Also the curve got a bit nasty because stuff wasn't hard enough so if you slipped up once it was a bummer.",
    "If you're already comfortable with C, this class isn't going to be that hard (if you're not, it will certainly be time consuming). The exams are easy. This class is very bimodal. Half the class will ace everything and the other half tends not to do so well. Take it though; Aspnes is really fun to listen to. You can definitely tune out of many sections of lectures because there's a lot of coding that's done on the board (which I feel is unnecessary), but the way that Aspnes explains computer science theory is spot on and really well done.",
    "CPSC 223 is a very good overview of data structures. Though necessary for any comp sci major, I would seriously recommend this class to any student who wants a background in computer science. Data structures are an essential part of coding, and the material is actually pretty interesting. This class with Aspnes is not too much by any means. Some problem sets take a long time, but as long as you have the time to devote to them, they are not difficult to do well on. Additionally, exams with Aspnes are very fair. I feel like I learned a lot in this class and would definitely recommend it!",
    "'Twas a time for the most glorious of one-liners: \"Programming in C is like being trapped on a deserted island with nothing but an infinite supply of tooth picks, and then trying to build a raft. Theoretically it's possible, but you'll probably go insane\" \"C is the motorcycle of programming languages: pretty much anything that could provide the most basic level of safety was stripped in the name of speed\" Overall, the course was pretty good. The material was very interesting, and the problem sets were mostly fun ways to apply this. Prof Aspnes was a pretty good teacher, and he made a truly exceptional effort to be available on PIazza to answer all questions (in mere minutes after posting). When Prof Aspnes used the chalkboard, he made the data structures visually concrete. Working through these helped, and he would always answer student questions in class. That said, there are several changes that would go far to improve the course. 1) One would be recruiting more TAs: going to the Zoo was useless for me because I knew there would be hordes of people vying for a single TA (I understand there's a structural problem with few graduate students, but recruiting more undergrad course assistants would definitely be possible). Piazza can help with this, but it can't replace face-to-face learning. 2) Two is more prepared lectures. Prof. Aspnes seemed to do nearly every lecture ad hoc, with some prepared code from past semesters. I think a class of nearly one-hundred students deserves more respect for their time. He would often go on tangents. Some thorough lecture preparation would help future students get the most of lecture time.",
    "Intro course in C and data structures, good for learning how to actually program.",
    "A great computer science course that teaches you practical coding skills while helping you think about organizing data. I would definitely recommend it with Aspnes, as it felt like a really reasonable workload and high payoff for effort put it!",
    "Take this class if you have to, or if you're interested in furthering your knowledge of computer science. I found the problem sets to be engaging and sometimes fun, but not too time intensive (around 7 = 13 hours per problem set).",
    "Phenomenal course. I wasn't entirely sure if I wanted to pursue CS, but this course convinced me that I should. The course is tough, don't get me wrong. It will probably be between 7 and 15 hours a week on each problem set, but you get a lot out of it and it teaches to think in a different way. Also, you learn not to make careless mistakes (debug debug debug). Seriously, take this class if you have the chance and are willing to push yourself.",
    "CPSC 223 is an introduction to programming in C. The course covers the language in depth and the implementations of data structures. I came in with no experience programming in C, and I think I am a pretty competent programmer now, having taken the course. Professor Aspnes is an entertaining lecturer, and I think he was very committed to making sure all students were understanding the concepts. I felt like at least half of the class came in knowing how to program in C, though, which put me at a disadvantage when it came to the problem sets. I found them inconsistently challenging; some only took me a few hours, and others were extremely difficult and dominated my week. It was also difficult to get help, because there were so many students and so few TFs. Overall, I found this course very challenging, and I am not sure I would have been successful in it if I took it with Eisenstat. The course is probably one of the most useful courses you can take at Yale, though, so I would recommend it if you have the time to spend on it.",
    "CS 223 will take you from a basic understanding of computer science, which you can gain in 201, to being able to actually build larger projects and data structures. You'll learn how to write programs that aren't confined to a single file and can do input\/output, which is really useful. Aspnes' lectures are really enjoyable. He does occasionally spend a lot of time debugging code that he's written on the fly, but this can actually be somewhat helpful to see. (But, at the same time, don't beat yourself up over missing a lecture.) Highly recommended to anyone who is interested in developing slightly more practical compsci skills than you may have gotten in 201.",
    "This course is a foundation of CS education and Aspnes is great. Psets are a good length.",
    "If they want to major in computer science, then yes. Otherwise, maybe not.",
    "Great intro to data structures and C programming",
    "This is a class that teaches data structures and basic coding techniques. I would highly recommend taking this course with eisenstat. You'll get much more out of it.",
    "Definitely an adventure. Programs are often tough (mostly because C is a very painful language to code in) and class moves quickly. I took this without taking 112 or 201, which was probably not the best choice and ended up with me having to frantically play catch-up a lot of the time. Don't be like me.",
    "I recommend it if you want a feel for computer science. It will be more rigorous with Eisenstat. Overall not super impressed.",
    "For anyone interested in programming in any capacity, CPSC 223 is worth taking. You learn about how to create data structures to deal with various situations, and more importantly you learn how to think about your problems abstractly. Unfortunately, Aspnes is not a great lecturer, and I found myself almost falling asleep most classes. His assignments are less difficult than other professors', but as a result one does not learn as much as one might like.",
    "If there wee two courses in computer science you absolutely must take to be an effective programmer, data structures is one of them. Algorithms is the other",
    "Good material. Well-thought out psets, although I would have appreciated more, shorter ones in which we could have more simply implemented the data structures, leading up to the big ones (perhaps less frequently). Good, thought-provoking examinations. Lectures bogged down in implementation - should have had pre-coded examples for display and explained those step by step instead of bug-testing on the fly.",
    "I would not recommend this course unless the student has to take it for the major. The course was not done very well.",
    "A solid introduction to programming in C. Professor Aspnes has a great sense of humor and explains concepts well.",
    "It's a solid programming class. Put in the time and you'll gain a much better understanding of how picking the right data structure can make you a better problem-solver. I feel much more confident about my programming ability and my knowledge about data structures after this course.",
    "CS 223 is definitely more relaxing with Aspnes than with Stan, and that has its benefits and costs. I felt like I learned a ton about data structures and C, and the assignments and tests did at least somewhat make sure that I had a solid understanding of the material. Professor Aspnes has an unbelievable self-written textbook that describes the material in-depth even if his lectures are unclear or you don't go to them. The only real complaint I had was that the assignments and tests were extremely easy, so grading essentially became a matter of distinguishing between students who made dumb mistakes and those who didn't. I could be wrong about that, though. In any case, if your main focus is on learning the material effectively, taking it with Professor Aspnes is great.",
    "Boring for most of the class. It gets interesting about a week from the end. On the other hand, Aspnes is a great lecturer, so there is that.",
    "C is an ancient language. Yale expects you to know it to be CS. Sacrifices must be made in life, and this is one of them. If you don't like it you should've gone to MIT",
    "Great course. Be aware that even when Aspens is teaching 223, it is not a joke. This was a challenging course with a lot of work.",
    "If you're new to programming, I suggest you sit down for a few months and teach yourself C because this class won't teach it to you. It'll go over syntax for a bit at the beginning but it'll quickly get to the point where you don't understand what his code is doing, don't understand what your code is doing, and don't have time to care because you have to finish this pset before it finishes you. As someone relatively new to programming, this class destroyed me. I feel like the class was split in two- experienced people who found it incredibly easy, and the unexperienced who were left in the dust. The class was so hard I never really got time to learn CI was so terrified of not finishing psets on time that rather than spending time learning C I spent time banging out code until it worked enough to walk away with an alright grade.",
    "CS 223 is a solid data structures course. This year being taught by Aspnes it was apparently easier than previous years, but I thought it was a good course. It was challenging without being overwhelming, and I enjoyed it. The CS department definitely needs more professors! I wish there was a section for this course because the office hours were not enough help. In comparison, Intermediate Micro (for the larger Econ major) has sections and is a class with a comparable level of difficulty (easier in fact). The tests were perhaps too easy and making a silly mistake could have a large impact on your grade, but overall I really liked the course. I really wish they had section for this class. The office hours were always crowded and it was really really hard to get help when you were stuck on a pset. I was really disappointed by the TAs -- the CS dept. really needs to do better on this front.",
    "It's a great class that teaches two essentials of programming: a low level language and the inner workings of common data structures.",
    "As background, I took CPSC 223 as a way of exploring computer science more in depth, rather than taking it to pursue the major. Although the material became more interesting over the time, the amount of work necessary to succeed in the class was steep. Each problem set took about ten hours each, and I often struggled as someone outside the major to successfully finish each one. If you really are interested in pursuing computer science, I would say go for it; you do learn interesting material and better develop your skills in C. If you are taking this class for exploratory reasons, be prepared to make a serious time commitment.",
    "There are two main types of students who take 223 at Yale: those who have seen most of the material before, and those who havent seen any of it before. Its a problem when half of the class does the assignment in lecture the day after its assigned, and the other half is scrambling in the Zoo the night that its due. Because of this, I can see how Professor Aspnes could get confused by the level and ability of his students. As a consequence, though, his lectures either went too fast or too slow; he rarely seemed to hit the sweet spot. Be prepared to self-study if youve never programmed in C. Professor Aspnes is really smart and knows how to program, but despite his enthusiasm, humor, and apparent love for his students, his lectures were mediocre (he usually just wrote code on the board and attempted to explain it, but ends up just mumbling and following with some joke and a drawing of Boss Tweed dressed as Santa Claus). The lecture hall (Sudler) was dark, which didnt help it was hard to see, even when I sat next to the windows. I think Professor Aspnes would do well to ascribe to Professor Angluins blackboard theory of pedagogy: drawing everything out on a blackboard forces the professor to slow down to the point where the student can keep up with the lecture. The exams didnt test the material very well. They were short (4 problems each; most people could complete the exam in 30-40 minutes, while 75 had been allotted), only required knowledge of basic data structures, and seemed to test more your ability to read really twisted C code (written by an academic deliberately trying to confuse you with horribly convoluted pointer expressions that you would never write in production code because theyre simply not maintainable nor human readable) than your knowledge of data structures and programming techniques, which is what the course purports to teach. The real problem was that if you made one slight mistake and answered a problem mostly correct, it could cost you 20% of your grade, since there are only 4 short problems, and most of the answers were either right or wrong, with very little leeway in between (if you understood the problem and made a slight slip, it could easily look like you didnt understand the problem at all). All in all, Im coming out of this course dissatisfied and disappointed: I wish the course was taught better, covered more material and in more depth, and tested more fairly (read: thoroughly). And it would be nice if an actual human looked at my code and provided me with feedback (all grading on the assignments was done by fairly straightforward automated testing). That said, this course definitely strengthened my knowledge of some of the nuances of C.",
    "Great way to learn C. Poorly taught. I never went to lecture after the first few. But I laud Aspnes for keeping his online notes up to date so students can , and thank you to all other CS professors who do this as well. The assignments are where all the learning is at. You have to use a lot of google. But you'll learn a lot. But still, we pay 50k to go to Yale, so I do not appreciate when professors and classes defer to google so systematically. The TAs were totally understaffed, so we often could not get help at all even if we showed up to office hours on time and waited for ~2 hours. Very problematic, but idk a solution, because need more CS peer tutors\/TAs\/grad students\/funds to pay them... Needs addressing. Felt like I was on my own.",
    "Good introduction to C and data structures. Problem sets took me about 15 hours each, but if you already know C well the class should be pretty easy. There was one guy who managed to finish each problem set during the lecture it was assigned, so the workload varies significantly with experience level. Aspnes taught this year, class is supposedly harder with Eisenstat.",
    "If you are not a CS major, I would still recommend the class if you are ready to put in a good amount of time. It will cover important concepts that will eventually be used in interviews. it will also give you a solid grasp of C and data structures. make sure you find a group of people to work with and start early. You don't really get credit for partial work--your program either works or doesn't.",
    "CPSC 223 is a thorough introduction to programming in C. Youll spend the first few weeks learning the intricacies of the language, at which point you move on to discuss various data structures and their implementations. As for workload, this course consisted of 9 weekly homework assignments (together composing 60% of your grade) and two exams (20% each). Each homework assignment took me around 7-8 hours obviously varying significantly week-to-week. I found the exams to be challenging, as Aspnes seemed to ask about the tiny intricacies of C, while I would have preferred the exams to have focused on the data structures themselves. All in all, it was a good class. Youll certainly learn how to program but just as important, youll learn how to debug the code you write.",
    "A hard class, but definitely not as hard as with Eisenstat. Aspnes is a great lecturer with a good sense of humor, and you'll learn a ton from him. Also, C is an important language to learn if you haven't already. Remember, start psets early, post on Piazza incessantly, and go to the zoo!",
    "0. The main question you're probably asking is about grades. I'll give it to you straight: the curve is absolutely brutal, but that's the case with many CS courses. 95+ for an A. The late policy is absolutely horrific, with 2% deducted from your grade per hour. However, that is the price you pay with easier assignments compared to Stan's version of 223. The assignments were fairly easy, and the exams are fairly easy if you keep up with the reading. The online notes were awesome in explaining concepts--don't sweat trying to read all of the code he puts up online, though. Use the code he puts online for the problem sets when you need it. However, do try to understand the concepts behind the code. As for the actual teaching: Professor Aspnes is very clear when he decides to use the chalkboard to explain concepts. However, too much of the course eventually devolves into him writing on-the-fly code and spending even more time debugging that code. Do I feel like I learned a lot? Yes! However, it could've been more effective. I recommend the course (I don't know if it prepared me for 323, though). If you're looking for that sweet, sweet A, try to set your expectations a little bit lower--an A- isn't the end of the world.",
    "Fast-paced instructor in a very large lecture setting, so your mileage may vary depending on how much programming you already know. Familiarity with the UNIX shell is good to have, otherwise be prepared to get familiar with it quickly. A lot of the focus is on learning how to program in C rather than on the data structures and programming techniques, which is good if you're looking to build technical skill and understand the nitty gritty that is often hidden when you use higher level programming languages, but bad if you're looking to learn more theoretical computer science. Be prepared to spend some time on the psets, but Piazza is a great resource for asking questions and figuring things out, and the midterms are really easy in comparison.",
    "Weekly problem sets which aren't too bad if you keep up with the class. Might have to do some self studying to learn concepts.",
    "CPSC 223 is a good intro to data structures and C programming. Most years its taught by Stan, and its hard to tell how different the two classes are, but I found the material interesting and the psets challenging but doable. Outside of computer science majors (who must take this class), Id recommend it to anyone with some background in coding and interest in the material. If your coding background is weak Id consider taking it Cr\/D in case you dont have time to finish all the psets (also keep in mind that the curve in this class is not particularly forgiving). Id also strongly recommend testing every function you write as you write it because debugging everything at the end is a nightmare and takes way longer.",
    "Take if you have the time to spare. CS is a useful skill no matter what you want to major in, and I can't imagine anyone who completed the class doesn't feel better about himself\/herself."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "223",
  "section": 1
 }
}