{
 "crn_code": "24326",
 "season": "201001",
 "legacy_coursetable_course_id": 3632,
 "enrollment": {
  "enrolled": 48,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    0,
    5,
    7,
    27
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    1,
    0,
    12,
    17,
    9
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    30,
    9
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Take this class if you want to learn actual programming. By the end of it you will be comfortable with all the major data types and programming algorithms. To give you a sense of how legit this class is, a friend of mine was able to get a programming job at Bloomberg solely based on his 223 experience.That being said, this course is a lot of work. Be prepared to spend on average 14+ hours on each of the 6 programming assignments, and about 6-8 hours on each of the 3 written assignments. There are also 2 in-class non-cumulative exams.My advice would be to start the assignments early. If you do that, they are totally manageable and quite enjoyable. There's a sense of accomplishment you gain from building a working program that just doesn't come from doing a problem set or writing a paper.Highly recommended.",
    "Probably only take it if you're a CS major or something related or REALLY into programming in C.",
    "I'm not a CS major, and I'd guess that over 90% of those who take the class are CS majors. I never really spent any time in the zoo either, so I may not have gotten the \"true\" 223 experience. I'd say, though, that I enjoyed the class. I thought the programming assignments are interesting and thought-provoking. Some of the stuff taught in class, though, are a bit boring. I'd recommend this.",
    "This couse is awesome. It is hard, but extremely gratifying. To give you an idea of how good you are the end of the semester: I had never touched C in my LIFE, and with my 223 experience I was able to land an internship at Bloomberg. AWESOME.",
    "I would recommend the class to anybody who wants to learn more about quality programming.",
    "More challenging than 201, take this course only if you have a strong interest in CS.",
    "You learn two things - data structures and algorithms on those data structures AND C. If you know C beforehand it won't be as big of a shock. Otherwise, it's like drinking water from a fire hydrant. If possible do the readings before the semester, that will definitely help. Eisenstat is the best professor you can hope for. He always challenges you yet is understanding when you don't get it or when you need an extension. Emphasis is placed on the problem sets so make sure you do well on them and always, always, always, always start early. The earlier you start, the better. Nevertheless be prepared for about 15hours per pset. This class teaches you the core of CS and it is the material that is taught in this class that is often tested at technical interviews. It's because of this class that someone in the class got an internship at Bloomberg. Definitely recommend this class if you want to learn but be prepared to work hard.",
    "The course is very difficult. It is the class that will tell you if you were born to be a programmer or not. Problem sets will take you anywhere between 10 hours and infinity. It is all computer graded so if your program doesn't work like it's supposed to you get no credit. If you take it your life will be hell but you will learn a lot.",
    "The course is well-taught and well-organized. It is a lot of work and very time consuming if you are not super experienced in programming. It can be discouraging and challenging. I would only recommend it if you have to take it for your major.",
    "If you are a comp sci major, you have to take this class. It is very difficult and time-consuming. Plan to spend a lot of time in the Zoo. Professor Eisenstat runs a challenging class but is well-organized and tries to be helpful.",
    "This class basically goes through every major data structure in computing and common algorithms that data structure uses. It teaches you a lot of information that can translate into a lot of fields down the road, and though the class uses C for problem sets the concepts are virtually universal.It is, however, a lot of work. The problem sets are very challenging and virtually every student will need to constantly seek help from the TAs (who are VERY open to help) or fellow students to stay on top of the workload. This class is NOT for someone seeking an easy grade, or for someone interested in programming. This course assumes some programming experience (CPSC 201) but nonetheless has a steep learning curve. If you're merely interested in computer science, take it credit-D and you can always switch out if you're doing well. But if you want to be a better programmer, take this class, because it will make you one whether you like it or not.",
    "This course was very rewarding and well-taught, even though it is a lot of work (probably the most time I have spent on a class at Yale). I came in with no previous programming background, so the first few problem sets were pretty difficult, but by the end of the course I was surprised by how much I had learned. Eisenstat is a great professor for this class. He's taught it for a few years now,and he definitely knows what he is doing.",
    "You will learn a lot, but this class will probably take over your semester. I took it Credit\/D, which was a bad idea -- I spent ~10 hours a week on it anyway (it did save me some serious stress when I couldn't free all my storage at midnight the night the code was due). For science majors looking to beef up their coding skills, this class will certainly have that effect, and you'll learn more than you bargained for. I just wanted to learn C, but I ended up learning a lot about algorithms too. I didn't take CS201 because I had some prior experience with C - for the most part I didn't feel that I was at a disadvantage because of that. It definitely helps to have seen recursion before, though.",
    "Prof. Eisenstat's class is a good, but time-intensive course in C. Be prepared to spend long hours in the Zoo working on problem sets.",
    "Certainly more work than 201, and much more discriminating when it comes to testing programs--but a very enjoyable and instructive course.",
    "I would not recommend it if you are not a computer science major.It is useful for comp sci majors because it really helps improve your programming abilities. However, it is a MAJOR time suck. Problem sets took me at least 15 hours each for the programming ones.",
    "believe the rumors you hear about this course being super difficult.",
    "It's a good class where you'll learn a lot, but is the hardest, and requiring the most time of any class I've ever taken at Yale.",
    "You definitely get your money's worth from CPSC 223. It is a tremendous amount of work, but you learn SO MUCH over the semester. I probably spent more time on the assignments for this course than all of my other courses combined. If you're a CS major, you have to take it. If you're not (considering) a CS major, it doesn't seem worth the time investment. Sometimes it feels like the course is designed to weed out people from the major, not based so much on programming ability, but more so on patience and sheer stubbornness (which is actually probably a necessary trait for the CS major, anyway). Overall, the course is well worth it if you have the time and motivation to put into it.",
    "The class is a necessary and effective introduction to the Computer Science major. Problem sets take a lot of time, but ultimately the class is rewarding.",
    "I would definitely recommend it. Don't be discouraged by the rumors about how hard this class is: it really isn't that bad. I didn't find it very hard.",
    "Yes, if you want to major in computer science or like hard work",
    "TOUGH class. Don't take it unless you really want to. Seriously.",
    "It will teach you what it promises. It will take a lot of time. You'll gain a bit of practical knowledge not directly related to algorithms or data structures, eg the basics of linux.",
    "CS 223 is a quite good expansion on both CS 201 and APCS, if you took it in high school. I would recommend it, because it is a good introduction to C and gives you a solid foundation in data structures.",
    "I recommend CS 223, although it's required for all advanced courses, so most people thinking about it will take it anyway.",
    "I really liked Professor Eisenstat. His lectures could get pretty dry but he writes VERY GOOD problem sets that are structured in a way that teaches programming and some of the material very well. Additionally, he is knowledgable about his subject and extremely helpful when answering questions. He uses classesV2 well, implements a very helpful news group, answers questions over email very quickly, and has a great submission\/grading system. Finally, this class is graded very fairly. Eisenstat simply cares about education and undergraduates more than any other Yale professor I've had, and that matters much more to me than his ability to give an engaging lecture (I've yet to find a cs\/math professor who does...) Take this class if you like computer science, even if you're not a major.",
    "Computer Science 223 is what you would expect from a core computer science class. Read the course description, and imagine being taught that information like any other computer science class you've taken at Yale.That being said, I enjoyed 223, like I've enjoyed the other cs classes I've taken at Yale. The professor is fair, and the problem sets are not too challenging.",
    "impossible yet somehow you get by",
    "It is difficult, and any troubles a student has with it is usually from the difficulty rather than any other aspect of the class. Problem sets take a long time. Everything about the class takes a long time. It is very logical and indispensable to understanding computer science, but probably would not be good for people who didn't like to play with logic, or people who are more interested in abstract or humanities classes. In humanities classes, there is often not a right or wrong answer, but here, there is definitely a right or wrong answer. It's determined by a purely logical computer program, and there is no reasoning that would make a wrong answer acceptable.",
    "I find that this was a very useful course, but it was a lot of work. While I did learn a lot about programming techniques and data structures, the class was taught in C and there was no emphasis on learning the language. I would have enjoyed this class much more if I had more familiarity with C, or if the program were taught in Java or some other language more likely to be familiar to more novice computer scientists. Just be aware of this when deciding to take the course."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "223",
  "section": 1
 }
}