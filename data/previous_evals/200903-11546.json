{
 "crn_code": "11546",
 "season": "200903",
 "legacy_coursetable_course_id": 714,
 "enrollment": {
  "enrolled": 42,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    3,
    11,
    16,
    3
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    7,
    10,
    17
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    19,
    14
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "CS201 is a great introduction to computer science. Even if you're not interested in majoring in CS, I'd still recommend that you take this course! This was probably my favorite course of the semester. The programming assignments are fun, lectures are for the most part interesting, and it's really not as much work as it seems. If anything, the class moves a bit slowly...You really don't need any prior knowledge to take this course, and Prof. Angluin is awesome and super nice if you need additional help during office hours.",
    "This class is exactly what it says--an introduction to computer science (versus mere programming). Whereas a programming course would talk about how to use programming techniques to solve specific problems, this course explores many of the theoretical foundations of computer science--both in terms of hardware (circuits, basic computers) and software (Turing machines, complexity)--and along the way you learn to program in scheme, a frustratingly confusing programming language that no one actually uses but nonetheless is pretty cool and by the end of the semester you'll feel proud that you can do bootleg things with statements like:(cons (car lst) (recur-procedure (cdr (cdr lst)))))",
    "Yes, definitely take it if at all you interested in anything CSy. invaluable course.",
    "Great class, well taught. Beware the final or 'second exam' though. Work fast, because you're not given enough time - this corroborates across several years of the course, i.e., they always give you inadequate time on the final.",
    "This was a good class. Professor Angluin is a great teacher. The problem sets are just hard enough to challenge you, but I never felt lost or overwhelmed by the assignments. The exams were harder than the problem sets, but everyone is in the same boat, and the class is graded on a curve.",
    "I think it's not too hard, but I'm not sure it has added value in the understanding of computer science.",
    "I would recommend CS201 only if you are willing to spend time doing the assignments and thinking through the code. Assignments take on average 10 hours or more every week, and the questions can be quite hard some times. Professor Angluin is a great professor and great lecturer, so you can definately learn a lot from this class. One downside: There are a lot of arrogant freshmen in the class, and it is really annoying seeing them showing off every single class..",
    "Great class. Prof Angluin is super approachable and great at explaining concepts, even to math-incompetents like me. Office hours were also at really good times for me, but if they don't work out due to section conflicts or something, TAs also have abundant office hours, and you can always email all of them to get a really quick response. Her lecture notes, on the course website, are indispensable (esp. if you are feeling a little confused about the day's lecture or have fallen asleep><) -- might be helpful to read the old lecture notes before the class if you want to participate, although I never did get the time to do it. Take advantage of office hours, MAKE SURE you start your problem sets early (they aren't monsters, but they do take upwards of 10 hours on average), go over the lecture notes before you do the psets and before midterms, and you'll be fine.",
    "Compsci 201 is the fundamentals of computers and how they think, almost. It teaches many of the different ideas behind storage and manipulation of data, as taught through the language Scheme. It's highly interesting, and I would definitely recommend it.",
    "This is a good course, but a step up in intensity from intro programming.",
    "This class is great, especially if you're interested in computer science. The problem sets don't take too long, and the concepts are fascinating.",
    "This is a fun class to take if you're interested in Computer Science or programming. Professor Angluin is really nice and a very good teacher. Try it out!",
    "Great course. Problem sets are very time consuming but also quite fun - when doing them it doesn't even really feel like you're working. Get to know your TAs! They will be very helpful.",
    "A very good class if you want to see whether you're interested in computer science. Not as \"fun\" as Intro to Programming, but you learn some solid\/important basics. The problems sets take forever (which is why I took it credit\/d\/fail.",
    "I would absolutely recommend computer science 201 to another student! It's a fantastic course, and Professor Angluin is great! I spent about 8-15 hours per week on the problem sets (a total of 7 or 8 psets), so be prepared to start early! The problem sets were a lot of fun, though. You get to do stuff like simulate a turing machine, and generate random sentences in a context-free grammar that you design, and you'll get really comfortable with recursion. The TAs are really helpful, and they are in the zoo for many hours each week if you're stuck on the problem set. This course is taught in Scheme, so you shouldn't take it if you're looking to gain a lot of practical programming experience. Overall it's a great introduction to some of the really interesting ideas in computer science.",
    "An excellent class for someone with a solid background in programming. Gives you a much better idea of how exactly computers work, from lowest to higher levels. Excellently taught and consistently engaging",
    "It is a good introductory course for those who have had a little background experience in programming and wish to further their studies. I would definitely recommend this to anyone interested in computers.",
    "Computer Science 201 is an introductory course that allows you to get a feel for what some of the other courses in the computer science departments offer. I would recommend this course if you plan to take any other courses in the computer science department because it readies you for the material and workload of future classes. It is also very interesting, and you may consider taking it for that reason alone.",
    "I would definitely recommend CPSC 201. It's a great course for anyone interested in computer science and up to the challenge of completing weekly homework assignments that average about 8 hours a week to complete. They are fun, ranging from making a workable Turing Machine simulator, machine language assembler, context free grammar, etc. Just be sure to block that p-set time out in your schedule. The TA's have office hours before the deadline, so you'll always have help when you need it.",
    "Computer Science 201 is the best fundamental course. It may be challenging for people with absolute lack of previous background in computer science, but with hard work and adequate focus, students can digest the materials and do the homework.",
    "This class gives youan excellent introduction to CS as a whole and shows you that the major isn't only about programming. I came in this class with zero programming experience and still managed to do well (although I did put in lots of hours). Prof. Angluin is awesome, she explains everything very well and gives the entire course a really personal feel by trying to learn everyone's names. Great class, take it!",
    "CS 201 teaches the basics of computer science, not programing. I would recommend it to anyone interested in computers, or in any of the sciences.",
    "CPCS 201 is a breadth-first computer science course taught in Scheme, dabbling in various topics such as compilers, machine language, and sorting. I would recommend it even if you have taken quite a bit of computer science, both because Professor Angluin makes the classes interesting and because it covers things in a different way than any computer science class that I personally have taken before.",
    "This course is really about learning the basic theory behind how a computer works. I found it very helpful and interesting, and I am not a computer science major. I would highly recommend this course to anyone who is slightly interested in the topics. I will say however that you do not learn any practical programming, and if you want to learn how to program this course will not help you at all.",
    "How much do you guys like work? CompSci201 is a ridiculously work intensive class. Weekly problem sets that require a good amount of time depending on how good you are at computer science and logical reasoning. It's taught in scheme and I thought it was a great class, but one that took a lot of time."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "201",
  "section": 1
 }
}