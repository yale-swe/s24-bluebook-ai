{
 "crn_code": "21082",
 "season": "201601",
 "legacy_coursetable_course_id": 36620,
 "enrollment": {
  "enrolled": 128,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC305",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    3,
    30,
    40,
    26
   ]
  },
  {
   "question_id": "YC306",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    3,
    8,
    31,
    33,
    23
   ]
  },
  {
   "question_id": "YC307",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    32,
    56
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC304",
   "question_text": "How would you summarize ECON 111 01 for a fellow student? Would you recommend ECON 111 01 to another student? Why or why not?",
   "comments": [
    "This is a good class that teaches you basic programming skills that may be helpful if you want to write simple programs. Problem sets are interesting and lots of fun.",
    "Do it if you have the time to really put in the work. If not, it will be a terrible experience.",
    "This class was a good introduction to programming. By the end, you really get a feel for the major concepts, and are capable of designing simple programs.",
    "If you have any inclination to take a computer science course, I would recommend this one. It is a lot of work, and if you try to follow only the lectures (and not the reading), it can get over your head quickly, so you have to be committed to learning the course material at the professors relatively quick pace. The TAs are good for grading your problem sets two weeks late, and they lead a review session every other Friday instead of class, so you can sleep in. Its likely the most efficient way to learn basic programming, and I would recommend it if you have the time for it and a desire to learn about Java.",
    "I would recommend it to people like me, who want to have a basic understanding of computers and have some fun with programming.",
    "CPSC 112 is an overview of Java programming that focuses heavily on graphics. I would recommend this course for people who want to take it for fun, but aren't looking to major in computer science or aren't considering it either. I went in possibly considering CS as a major, but I felt like the course moved too fast for me to understand what CS would actually be like in the real world.",
    "A great introduction to Java and programming in general. You definitely can see your own progress, as you learn concepts and apply them to create more and more complex programs. It is designed so you have a constant feedback loop and the problem sets are always fun and interesting, even if they take a long time.",
    "Doing well in this class is not difficult, although it does take up a substantial portion of time. I felt like I was doing well and really understanding until half way through, and then I got so lost that I didn't even begin to know what to ask, but there are always TAs to help with problem sets and the exam was not bad at all. Essentially, you can have over a 100 and still not really know what you're doing.",
    "This class was an absolute blast. I had never taking programming before in my life (what is a computer and how does one do this coding thing?) and found Java super easy to pick up. The psets are very reasonable and aren't even weekly (you start to get a little more time for the longer ones). Office hours are really helpful if you just pop in and get help with your syntax when you first start to have issues you can't work through. Also I discovered that there is nothing so satisfying as getting your code to work finally. The psets are where you do a lot of learning for this class because much like learning any language, practicing the syntax is really what helps you improve. I do have a STEM background which may have been helpful in picking up programming, but I definitely think everyone should take some sort of coding class. I don't know how useful Java specifically is going to be for me, but it was still helpful to learn basic techniques which hold over most languages. Also, I loved that there was a final project which you could have a lot of fun on. Take it! Do it!",
    "This is a very good intro course. If you are interested in computer science and programming, you should take it!",
    "Fantastic class. If you are willing to put in the work, you will get a good grade. Networking\/taking this class with friends helps. There are several Psets which you are allowed to do pair-programming for and the final project is in groups. Really cool stuff, everyone should take this class (regardless of major).",
    "I feel like I got a very good grasp on Java, and overall really enjoyed the class. Coding is hard no matter what, but this class was very well organized and the work load was reasonable. Great intro to coding, would definitely recommend. Also 100 x better than CS50 in m opinion.",
    "Yes recommend.",
    "CS 112 is a good introductory course if you don't go to lecture and focus on the psets. The textbooks are really helpful, and working on the psets allows you to get really good at coding, but lectures are not the main focus of this course. The workload is light, but the midterm counts for a lot so study.",
    "I would recommend 112 to anyone who needs to begin CS or humanities majors who need an accessible QR credit.",
    "Solid introductory CS course in java. Take this class if you wonder whether CS is right for you.",
    "I would recommend it to other students.",
    "I would recommend this course to another student who wants to just learn programming or wants to see if they could get into computer science as a major. Either way this course does a good job on introducing a lot of important topics. Although there is mention and discussion of computer science during the course this is not emphasized in any way. When I say computer science, I mean algorithms, hardware, and larger topics than this introductory programming course covers.",
    "I would recommend CPSC 112 for a fellow student as an intro to comp sci, even if he\/she is not pursuing a relevant major. If you've taken a java course before, going to the lectures is essentially pointless.",
    "This was a great class for people who are completely new to CS - or wanted to sure up their knowledge before moving on to the most advanced classes. It really moves from the very basics to more advanced concepts, so there's something for everyone here. Some students struggle and get frustrated with debugging, but if you're willing to put in a lot of time and genuinely want to learn programming skills, then it will be worthwhile.",
    "112 is a good motivator if you want to learn to code, but nothing you couldn't do independently with a text book. It will give you a structured way of learning the major concepts and syntax and will push you to implement them through problem sets each week. Psets can take anything from 30 minutes to 6 hours, but were never overly taxing. The midterm was fair, although it is tricky coding without a computer. Most importantly, this class offers many opportunities to get extra credit, which means if you put in the effort you will almost certainly do well.",
    "A good introductory class for computer science. Make sure to start the problem sets earlier in the week so you aren't stressing over the weekend. Office hours are super helpful for this class.",
    "To every business school student at Yale- definitely take this course!",
    "Absolutely take this course. I'm not going to lie, it's a lot of work, but you come out of it feeling as if you've learned something significant and useful.",
    "CPSC 112 is a class that tests your ability to 1) learn a new language and 2) apply mathematical problem solving and logical thinking skills. I definitely recommend it if this sounds even the least bit interesting.",
    "A great class for someone who wants to learn the basics of CS, but be ready to put in a lot of work.",
    "If you are a senior who thinks it would be a fun idea to learn programming and using your credit\/d in this class...DON'T! Having a credit\/d mentality with this class is not the way to go about it. You either get programming or you don't, so I ended up putting WAY more effort into the class than I anticipated. It's not difficult to get a good grade in this class, so I would take it for a grade or don't take it with the expectation that it'll take minimum effort to get that credit.",
    "Be prepared to spend many hours on problem sets. If you're coming into this with no CS background, you will need to put the time in on your end rather than sitting passively in lecture hoping to absorb coding skills.",
    "A great introduction course. If you have little to no programming experience, this course is definitely a great starting off point. I had coded a little bit in high school, but I did not understand why and how everything worked. Richard makes everything clear and explains not only what to do but why and how it works.",
    "It is an intense introductory course to Java. Most of the work will have to be done on your own since lectures are always confusing and boring and the TFs are undergraduates too so they often don't even know that much about computer science.",
    "I'm a Humanities major who took the class as my QR -- it was fine, kind of hard at times but okay when I went to lecture consistently. If Yang Yang is teaching it, the projects will at least be fun.",
    "The course is a good introduction to computer science. I would recommend the course to anyone interested in learning the basics. The class also teaches a lot of skills in complex problem solving which I think will prove to be useful beyond computer science and beyond Yale even.",
    "Better than ENAS 130. Better than CS50.",
    "Yes, if you'd like to pick up programming, and have time on your hands to spend on projects and problem sets.",
    "Intense intro to programming. The concepts are easy; applying them is less easy. Keep up with each section because all the knowledge is definitely cumulative.",
    "Definitely don't overlook this class just because of CS50! I learnt a lot, feel like I know what I'm doing in Java and excited to learn more. Prof. Yang is great and there are lots of office hours to help you get sorted if you do get stuck!",
    "CPSC 112 is a core class to get introduced to programming. I would recommend it to any beginner as computer science is such a useful field.",
    "Be ready to teach yourself the material.",
    "I think understanding programming and the logic behind it is becoming very useful so I would definitely recommend this course.",
    "A great entry into Comp Sci. Would recommend to learn the principles of comp sci.",
    "Good intro cs class to take to learn about programming and cs. Psets are sometimes very long and confusing. Lots of work and the lectures aren't that helpful in my opinion but I would say that the course was good overall. Learned a lot.",
    "I would definitely recommend this class, especially over that CS 50 ridiculousness. This class sticks to one language which is the way to go for beginners. You learn all the programming concepts you need and then learning any other language is easy to do on your own. I was able to quickly apply concepts learned in Java to the production of a website in HTML\/CSS and JavaScript. There is no need to learn more than one language in an introductory class. The homework was my favorite part. I loved making new programs each week. Instead of just completing some problems, you get a working, useful, and fun program that you designed yourself, making it rewarding in so many ways. Anyone who wants to get started in programming should definitely take this course.",
    "I came into this course with absolutely zero background in programming. While I learned a significant amount about Java and can now code some decently complex programs, I did most of the learning on my own because I didnt find Yang Yangs lectures particularly engaging or helpful. He sped through most of the concepts, which may have been a good pace for people with prior programming experience, but lectures left students like me in the dust. That made the class pretty frustrating for me at times, but because it forced me to learn programming and the learning curve was so steep, Im ultimately happy I stuck with the course until the end. Problem sets got pretty time-consuming by mid-semester so plan accordingly with the rest of your workload, and dont procrastinate on the final project or else your entire reading period will be devoted to CS. Late days and TA office hours are lifesavers!",
    "I would not recommend this class. You will learn basic skills but it was pretty boring and a bad intro course.",
    "Great class, very straightforward to get an A in. You will like it if you enjoy having straightforward assignments and solving problems.",
    "Yes deff",
    "I have never coded before, and now I think I understand a lot about what makes code and a program powerful, easy to read, and elegant. However, towards the end of the course, we sped through so many topics so fast that I don't think I really understood any of them in depth. Also, other topics, like designing for the web or android applications were pushed towards the very end and only utilized in the final project if your group chose to implement them (mine didn't) or the very last two optional problem sets. I think introducing those topics earlier is important because I really wish I had a greater understanding of them, especially since they seem very relevant in terms of practical coding applications.",
    "As someone who never learned Computer Science before this class, I loved it. Professor Yang is very funny and fun, and the PSets are pretty interesting. I learned more from the PSets than from class, though I highly recommend going to the lectures. It's a class where you can get out what you put in, so keep that in mind. I'd recommend it for someone looking to learn programming logic and Java, a useful language.",
    "Take it but make some time.",
    "I highly recommend this course to anyone who wants a solid foundation in programming Java. The course is rigorous but manageable if you start the problem sets early and go to office hours when you get stuck. This has so many resources, including a huge team of TAs and a dedicated professor, to help you learn the material. One adjustment to computer science classes is that most learning happens through completing problem sets, so I definitely had to adapt my learning style. However, it is extremely important for everyone to have a basic understanding of algorithmic thinking and computer programming, so this course is a fantastic introduction to the world of computer science.",
    "Really recommendable for the first programming class",
    "If you want to learn computer programming, this course is definitely the best place to start.",
    "Cool material and some interesting problem sets, but boring lectures that don't always explain the material completely clearly."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "112",
  "section": 1
 }
}