{
 "crn_code": "22059",
 "season": "201101",
 "legacy_coursetable_course_id": 9281,
 "enrollment": {
  "enrolled": 31,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    1,
    0,
    8,
    13,
    6
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    12,
    9,
    7
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    16,
    12
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "I would recommend this course to anyone interested in knowing how computers work from within. But beware of the work load; not a good candidate for a fifth class.",
    "if you are interested in computer science, you have to take this course (its a prereq). but more so than that, comp sci teaches you to think about problems in a different analytic style. problem sets in Scheme use recursion primarily, which is in essence an inductive proof. Inductive logic is hard to wrap your head around but its awesome and makes you approach problems in any other field very differently.that said, this class is a LOT of work. problem sets will take you on average 12-18 hours per week and can be really frustrating. exams are tough, lots of time pressure and if you do not know what you are doing you are not going to do well. this class is worth the work, but you HAVE to put the work in --- there is no way to coast through this class.",
    "If 201 were not required I probably would not have taken the course, but it is always nice to learn new languages, working with lower level languages improves your problem solving though",
    "CPSC 201 is definitely a good introduction to computer science and teaches you how to think. Because Scheme is the only language used in CPSC 201, if you are seeking a course that teaches practical programming skills, you may want to try ENAS 130. If you are interested in computer science at all, I highly recommend taking this course early on (1st semester of sophomore year at the latest), so that you have room to continue down the computer science track.",
    "I recommend CS201 to people who want to learn about how computers work and are new to the subject. There is NO programming experience necessary even though it states it in the prereqs. Take this class earlier than later or you will find it boring.",
    "201 is pretty good; the class is interesting and the problem sets aren't too bad. However, the midterms (there are two and no final) are terrible. For the last one, we had twelve pretty in-depth problems to do in fifty minutes. And it is exactly fifty minutes - timed by the world clock. Since they're such a big part of your grade, this was a big negative for me.",
    "This is a very good course. A lot of interesting material. The homeworks are tough but doable and there aren't too many of them. Definitely worth taking.",
    "It's a lot of annoying hours spent staring at a screen, but so is every other comp. sci. class. Scheme is pretty interesting.",
    "Comp Sci is a must for any student who wants to be able to function with computers. Take it in the fall.",
    "This class is an introduction to Computer Science not to programming so if you're just exploring programming or want to learn a programing language I wouldn't recommend this class. Scheme is both annoying and useless in the real world. The class however is not fully oriented around Scheme but covers a wide rage of concepts in computer science. Of course if you're a CS major you will need to take it.",
    "I would recommend it, and I would recommend trying to skip CS 112 and learn it on your own. It's worth taking and covers interesting material.",
    "I would recommend this class if you are interested in it, because it does involve alot of work - problem sets take about 10-20 hours each, and tests are really difficult because you have to complete or try to complete about 12 programs in 50 minutes. But the problem sets were mostly enjoyable and this class has taught me alot and changed the way I think about things.",
    "Take this course!I feel like I learned more from this course than almost any other I've taken at Yale. I had basically no comp sci experience, and now I know how to make a computer (well a really tiny one but still). How cool.This course was extremely well structured and well taught. There are few courses I have enjoyed asmuch as this one. While the material was very challenging and the problem sets took a lot of time, they were also so much fun, and I always felt so accomplished after finishing them.My only complaint is that so much weight was put on the two fifty minute exams. I mean, I understand that it is hard to differentiate among the students relying on the psets since we have unlimited time and help from TAs, but I don't think the exams really test the skills we have been developing in the course, they're mostly a test of how quickly you can solve problems. If not, maybe at least give a practice exam for the final.Professor Rushmeier is fantastic. Not only was she a clear and engaging lecturer, she was always helpful during office hours and by email. The material was very hard, but she made it fun and understandable. Her love of this subject clearly comes accross to her students, and that makes a huge difference.Definitely worth the work!",
    "Yes. An absolutely amazing and interesting class. The problem sets are a little long, but you won't even notice if you like this stuff because they are so rewarding and entertaining. Pay attention in class and do the work and tests will not be too hard. Again, a wonderful intro class.",
    "I'd recommend the class to anyone who's interested in computer science. The material is engaging and the psets are fun to do.",
    "This is a great class, and you'll learn a ton. Do not be tricked into thinking the workload (only 7 p-sets!) will be easy. I spent 20 hours on one of them, and I was not alone. They can take time, especially if you're like me and skipped intro programming, and even if you didn't - Scheme is a bit of a beast. It was easy to get really stressed out the day before they were due. Go to the Zoo if you're having trouble and ask around - fortunately everyone is really willing to help. Professor Rushmeier was wonderfully responsive to email& encourages you to ask frequent questions. The trickiest part - and what this class is really about - is learning how to think like a computer scientist. You're not going to learn any useful languages here. But you will leave with a much deeper understanding of how computers function. Going to class is essential; there's no textbook, so what you learn in class is what you get. Fortunately Dana Angulin's notes online are awesome and concise. The trickiest part on the tests (no final!) is SPEED - so make sure you know your stuff back and forth.",
    "Altogether a very interesting and engaging course. Holly Rushmeier is fantastic. While the language you'll be programming in is pretty much useless in the real world (Scheme), it really helps to level the playing field since most students have already programmed in 1+ languages before. I am a biology major and have only ever programmed in JAVA, and I was absolutely fine when it came to problem sets\/tests. Be prepared about the problem sets - they take about 10 hours to complete each. If you can, check over your work with a friend. You almost always find that your code can be simplified. If you know nothing about the organization of computers, or the idea behind computer languages, this will be a very enlightening class. There is some overlap with electrical engineering, though, so if you are in this major be prepared to already know some of the material. Take this class if you want to experience a new way of looking at the world.",
    "Solid course. Would be interested in spending a bit less time on the early course material and more time on the high-level material (e.g. Regular Expressions, Context-Free Grammars, etc) as well as delve briefly into each of the various specialties (e.g. AI, cryptography, graphics, etc). Otherwise, solid coverage of interesting material.Bummer that we had to use scheme and couldn't develop other, more applicable programming skills, but I understand Scheme's use as a didactic tool; it's simplicity allows us to focus on the concept rather than the programming.My only true \"complaint\"\/warning would be that far too much weight is put on tests for which you cannot check your work. In the end, everyone did fine on the exams, I think that the problem sets are a better reflection of your understanding of the material.Professor Rushmeier is a lovely woman and a great computer scientist. I appreciated learning with her. Her one weakness would be that she did not know all of the intricacies of Scheme and occasionally a question would pop up in class to which she did not have a satisfactory answer, but otherwise, she was a great person to teach the course.",
    "Some of the psets take a very long time. Others take no time at all. That was almost the most stressful part of the class. Will the pset be easy this week? Or will it take 15 hours. Prof. Rushmeier is a pretty good teacher. I never found myself lost. Two midterms which aren't bad and one final.",
    "I recommend this course if you are interested in learning how a computer works, all the way up from the ones and zeros of machine code. Scheme is an interesting but useless language. Problem sets are time consuming but satisfying.",
    "CPSC 201 can be kind of frustrating in that the programming language is scheme, which is basically useless. However, the problem sets are doable and interesting enough to keep you engaged and there are lecture notes online that make attending class somewhat optional. Prof Rushmeier is a decent lecturer but if you sometimes have trouble focusing (like I do, especially right before lunch) then the notes are really useful. Starting the psets early and going to help hours is definitely recommended. All in all, I enjoyed the class and would recommend it, but if you are looking for programming experience then it's probably not the best choice.",
    "Yes \u0096 a great course even for non-majors. You will get a sense of computing as a field \u0096 you\u0092ll understand how computers work (through circuits and assemblers), how they handle data (algorithms and data structures), and you\u0092ll see some of the major conceptual problems in computer science (Turing machines, computability). Not useful for programming though, Scheme has some benefits that are cancelled out by its tediousness."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "201",
  "section": 1
 }
}