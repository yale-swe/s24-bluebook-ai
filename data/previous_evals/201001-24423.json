{
 "crn_code": "24423",
 "season": "201001",
 "legacy_coursetable_course_id": 4126,
 "enrollment": {
  "enrolled": 53,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    2,
    5,
    17,
    19,
    4
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    1,
    4,
    10,
    22,
    10
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    36,
    11
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "A good class however too easy if you have programming experience.",
    "I would recommend it. It got me interested in programming.",
    "take the class if you can. its very useful, and no prior programming experience neccessary",
    "I would recommend it if you're math oriented. There is a lot of math and science involved in the programming assignments. Go to lectures and use the reference programs to keep up with the material.",
    "It was a great course. I learned a LOT. I definitely recommend it. If you want to learn the basics of C++ and Fortran and a little bit of Mathematica and Matlab (although we really didn't go into detail on Mathematica\/Matlab), this is the course for you. It's a great alternative to CPSC 112 that, from what I've heard, is slightly more rigorous and will teach you more practical applications at a good pace. You've got to start the problem sets early, but they're by no means impossible, and if you have a knack for coding you'll really enjoy them.",
    "A decent introduction to programming. As previous reviews mention, the course picks up in pace the last 2 or 3 weeks and you had better keep on top of things if you want to succeed. While you learn the concepts, you will also find yourself frequently frustrated by example code that does not compile on yourmachine and by the limited opportunities to seek help. However, I hear it's better than the couse in the Comp Sci department, so if you want to learn some basics, take this course.",
    "Yes. Especially if you've already taken some coding classes, then you'll breeze right through this while at the same time opening up your familiarity with other programming languages.",
    "It goes from Fortran to Mathematica\/Matlab to C++, covering the graphical and engineering utility of each. If a student is willing to spend significant time outside of class learning the material then it will be a very helpful course.",
    "This is a very good intro course in computing. It speeds up a lot at the end, so be prepared to devote a lot more time in the last 3 weeks or so than you usually do.",
    "I would highly recommend ENAS 130 to anyone who doesn't have programming experience and wants to get their feet wet. Marshall Long is a great instructor who is very engaged in the happenings of the class. My suggestion would be to do the problem sets ahead of time so you don't run into de-bugging issues as the submission time draws near. Most of the assignments were fun to work on and made you think a good deal about how to efficiently solve problems.",
    "I would recommend this course for a good survey of programming with some depth, especially in C++.",
    "It's not really fair for me to rate this class. I'd taken programming before and just needed it for a pre-req. I wasn't the only one in the class who had programmed before, but most people were first-timers, so don't worry. The professor was clear and helpful, assignments were fun and doable, and you definitely get a lot out of the class. Lecture can be boring, but if you're at all a self-learner you don't really need to go.",
    "ENAS 130 is an introduction to two programming languages. It's fairly useful as a skill, but I also think other languages (i.e. Java, as is taught in Intro Computer Science) might be at least as worthwhile to learn. We also spent hardly any time in Matlab and Mathematica, despite the fact that every one of my friends in engineering at other schools took an entire class on Matlab. All in all, don't take it if you don't have to.",
    "Great intro class if you have a mind for details. I had never programmed before and found the projects to be a good balance between challenging and doable. Marshall Long gives lots of great hints in class and will answer pretty much any question.",
    "Useful course. Take it if you don't know much programming and want a strong start in C++ and Fortran.",
    "I really liked this class, definitely take it if you are interested in programming. The problem sets and exams, although challenging by the end of the semester, are definitely doable and very straightforward; although they will make you think, there are no surprises which is very comforting. There is something really satisfying about getting your program to work that will make the time you spend on problem sets seem to fly by enjoyably, assuming you know what you are doing. This means at least being aware of what is going on in lecture, although they can be sometimes boring. You don't have to do much outside of lecture to understand the material.",
    "Take the class if you are interested in learning to make your computer be more graphing-calculator-like. Interesting to an extent. Early problems are helpful in understanding the basics of each language or program, but the later homework assignments are harder, more time-consuming, and (I felt) less applicable.",
    "It's important skills, probably, but a rather annoying and time consuming class- especially at the end of the semester. Class is fairly useless but by the end (after laboring through confusing programs) you've definitely got the basics of C++ down.",
    "YES. Take it! Especially if you haven't had any programming experience. It's not too difficult. The assignments can take a bit of time but it's totally worth it. It's a very good skill to have.",
    "As someone with practically no programming experience, I took this class Credit\/D as a fifth class thinking it would be minimal time commitment and useful for the future. Wow was I wrong. Fortran was ok, spending a couple hours each problem set would suffice. But once C++ started, everything just completely went over my head. For one, Professor Long stopped assigning psets according to each chapter out of a textbook as he did with Fortran, so I never knew what to reference when I started struggling. Also, this is a terrible class to take Credit\/D because once you don't keep up everything becomes impossible to do towards the end. I managed to come back in the end, but seriously risked getting a D at one point. Just be warned, the class gets a LOT harder in the end. If you feel like you're already struggling around the drop deadline, then either really step it up (as in ~10 hours\/week) or drop it right away.",
    "A very nice intro programming classes, that takes you through the basics of fortran and then uses that to teach you some more interesting stuff in C++. The homework can take a while towards the end, but the programs are also become more interesting and satisfying once you get them done. The professors and TA's were very helpful and always replied to questions.",
    "ENAS 130 was a time consuming class, but it was worth the time that I put into it. I would definitely recommend this class. I took this class for fun to get a foundation in the basics of computer programming, and it definitely gave me that. If you want to learn programming in the context of science and do it with an engaging and interesting class, take ENAS 130 with Professor Long.",
    "Very good introduction to programming. You learn a bit of everything, so it's not too comprehensive, but it was pretty useful for me. Take it if you are a scientist or engineer.",
    "I would recommend this class to anyone with an interest in programming. It's a generally easy course if you have some programming experience. I can't speak for people who have never programmed before but I can see how the class could be much harder for someone who has never seen programming of any sort before. One thing to keep in mind is that even though problem sets (programs) will be easy and won't take much time at all in the beginning, by the end you will be working 6+ hours at least on each, and much more if you have never programmed before. Once again, someone who has never done programming will have some difficulty at times, and may need to seek help or go to the help sessions that are held. Pretty chill course overall though in my opinion.",
    "If computers interest you, you might like this course. If you have never had experience with coding, be prepared for a lot of work near the end.",
    "This is an awesome course and gave me a lot of confidence to solve complex problems using three different programming laguages. I came in with ZERO programming experience and now can develop my skills on my own to take on advanced programming projects. The exams are pretty straight forward but challenging enough to provide a good measure of your programming skills.",
    "The class is a very basic introduction to programming, pretty much on par with CPSC 112. If you have already taken CPSC 112, you really don't need to take this class (it will probably bore you). If you are trying to decide between this class or CPSC 112, you should take this class if Marshall Long is teaching it. The problem sets ranged from really easy to slightly challenging, but none of them really required significant amounts of time. Also, the grading was lenient insofar as the TA's just evaluated whether your code could accomplish the basic task assigned, and they did not try to break it or catch errors made in corner cases.",
    "This is a lot of work, like 5-6 hrs a week for an assignment. That being said, you get pretty good at programming, and I think it's worth it.",
    "If you're an engineering\/applied math major, this is probably a requirement. If not, take it for a fun way to get introduced to the very basic thinking process behind programming. Marshall Long is a really nice, helpful person - he'll make the course light and interesting, especially since you cover a wide range of software on a reasonable depth. Even if you're a history major, it's probably a good idea to know the basic concepts behind computer programming (that's what your iphone\/mac\/pc\/bb is running on).Beware the weekly assignments though - if you don't start early on them, you'll probably end up hating this course, as they were 70% of the grade.",
    "Recommend strongly. Computer skills are increasingly valuable and this class helps you obtain them in a not-too-stressful manner. Just do not wait until the night before to start your programs.",
    "It's a good programming course. Keep in mind that it will become more work towards the end of the semester.",
    "I would recommend this class if you need an introduction to programming for engineering or science. The C++ section can get pretty difficult at the end, but if you have been following good programming habits all along, that can help.",
    "Take it. Be aware the assignments get more difficult towards the end of the course.",
    "The course was very good. I went in with little programming knowledge and now feel comfortable programming in both FORTRAN and C++. I think that Professor Long did a good job balancing instruction with hands-on learning. I felt a little overwhelmed when first introduced to classes in C++, but in retrospect that was the best way to learn. Finally, the class is a light workload until the last two weeks when it really picks up.",
    "The course was very well structured. It felt like there was a natural flow to the way the material was presented. It's an intro course to programming, but it went beyond teaching code. Towards the end the class focused more on object-oriented programming, and the assignments become a little trickier - but nothing that one who starts his assignments a day early can't manage. I feel like I came out of it really knowing what it is to think like a programmer and the course has made me inclined to take a more advanced programming course in the future."
   ]
  }
 ],
 "extras": {
  "subject": "ENAS",
  "number": "130",
  "section": 1
 }
}