{
 "crn_code": "11894",
 "season": "201103",
 "legacy_coursetable_course_id": 12172,
 "enrollment": {
  "enrolled": 15,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    1,
    2,
    1,
    4,
    0
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    2,
    3,
    1,
    1,
    1
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    4,
    4
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Please do not take this course. If you need an easy A, then maybe take this, but be prepared for a semester of frustration and agony that will, in the end, leave you with little practical knowledge. If you really want to learn about object-oriented programming go online, learn C++ on your own by reading open-source code and working on research projects, read online standard style guidelines, but do not take this course. Professor Fischer's code is an embarrassment to industry standards, and the entire class is his, continually disproven, theories on how to make software.Professor Fischer is a smart guy, but he should never teach object-oriented programming. He teaches the course as a series of demos that he and his wife have cobbled together that don't really teach you anything. Time and again he interjects his opinion in place of hard facts about what are accepted industry standards and by the end of the course, you realize you just have to do the final project according to his design and get out of dodge. If he had just gone over design patterns, open-source architectures, and other industrial standards for the entire course it would have been actual useful. Instead, I feel that I am a worse coder for taking this course.",
    "Yes, although with the reservation that it is very focused on the nitty-gritty of C++ programming, with not a lot of attention paid to the overall scope of the subject generally.",
    "Overall, this class was a horrible experience. The lectures were boring, the problem sets were trivially easy and the exams tested you on obscured C++ syntax based on poorly-written examples. Unlike other classes, you don't really learn programming via a lot of coding since the problem sets are obscenely easy and take less than 1.5 hours apiece. This means you are in trouble for the exams.That said, object-oriented programming is a really useful skill to learn so I'd recommend that you get the lecture notes from someone who has a taken the class and spend your valuable credit elsewhere.",
    "I would recommend this class if you want to learn C++, don't think you will be able\/ want to learn it from a textbook, and don't mind a boring lecturer. If any of the above don't fit - don't take the class.",
    "It's a very practical course if you're going into industry. The lectures are boring and recycled and there's a big focus on learning C++ rather than on OOP design principles - if you already know C it won't be difficult. We didn't get much direction or feedback on our final project proposals, so you end up sinking as much time into it as you can while also dealing with final exams.",
    "This course is a good CS elective that is fairly straightforward. The final project is a huge time sink so get started early. Fischer may not be the most captivating lecturer but he knows the material well and tries his best to involve the class. I would recommend this course. Some people complain that this course is more of an introductory C++ class than an OOP class so be wary of that."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "427",
  "section": 1
 }
}