{
 "crn_code": "13756",
 "season": "201903",
 "legacy_coursetable_course_id": 52942,
 "enrollment": {
  "enrolled": 49,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC402",
   "question_text": "Your level of engagement with the course was:",
   "options": [
    "very low",
    "low",
    "medium",
    "high",
    "very high"
   ],
   "data": [
    2,
    4,
    8,
    6,
    0
   ]
  },
  {
   "question_id": "YC404",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "fair",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    7,
    8,
    4,
    0,
    1
   ]
  },
  {
   "question_id": "YC405",
   "question_text": "The course was well organized to facilitate student learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    5,
    2,
    8,
    4,
    1
   ]
  },
  {
   "question_id": "YC406",
   "question_text": "I received clear feedback that improved my learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    4,
    5,
    6,
    5,
    0
   ]
  },
  {
   "question_id": "YC407",
   "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    3,
    8,
    6,
    3,
    0
   ]
  },
  {
   "question_id": "YC408",
   "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    3,
    7,
    9,
    1,
    0
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC401",
   "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
   "comments": [
    "I learned about Object Oriented program in C++ this semester as well as several more complex C++ principles",
    "Not anything I couldn't have taught myself. (I took it with Fischer.)",
    "One major skill that I learned is c++. You learn about polymorphism, object oriented program design, and many intricacies of c++.",
    "This course taught me object-oriented programming principles",
    "C++ was definitely a lot of fun to learn. It's also made me a better programmer. I can see the object oriented principles permeate to all my other CS courses. Definitely a good class to take.",
    "I learned the basic concepts and theories behind correct object-oriented programming as well as lot of specific syntax and semantics behind C++",
    "C++ programming and intricacies",
    "I learned introductory C++ and the very basic concepts of object oriented programming. This course was mostly focused on programming style and very specific rules of C++, rather than more advanced programming concepts. Honestly, I could have learned the entire course contents through a simple online tutorial.",
    "Object oriented programming principles",
    "Object oriented programming. And that Michael Fischer is very boring as a professor.",
    "object oriented programming",
    "Learned C++, basic principles of object-oriented programming.",
    "I learned about C++.",
    "Object Oriented Programming in C++, nitty gritty of C++ syntax Developed an intuition for principles of object-oriented programming, including modularity, encapsulation, privacy, classes, inheritance, etc",
    "I learned oop principles and C++"
   ]
  },
  {
   "question_id": "YC403",
   "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
   "comments": [
    "weakness -- the lectures were super super boring. Very hard to pay attention to.",
    "I think this is a pretty good course, I wouldn't change too much by way of the material, though I think something very useful would be to have more demos of different concepts in class, I found those usually helped.",
    "This course COULD have been very useful. I imagine taking it with anyone other than Fischer would be a good decision. But DO NOT take it with fischer. It will be a bad time.",
    "Strengths: The problem sets were all very good and conducive to learning. Weaknesses: The lectures were very slow. I often felt like I was wasting my time during lecture. Another weakness was grading of problem sets. You will be marked down for not following the exact code format specified by the professor.",
    "The course stressed and taught many principles in object-oriented programming. This course could feature less complicated and less rigid pset instructions, as it hampers our practice with creativity in c++",
    "The problem sets were some of the best and most structured assignments I've seen in the CS department. The lectures often moved at a very slow pace and apart from Prof Fischer collecting attendance, didn't always feel like it was worth my time to attend.",
    "Very un-engaging lectures, could have more interesting psets rather than just Kalah",
    "This course is the worst course I have taken at Yale. While the content covered is reasonable, although very basic, the way that Professor Fischer teaches this course ensures that no one learns much and no one is engaged. The tests were very focused on memorization rather than concepts, which encourages students to simply memorize information rather than really learn. The psets are extremely poorly structured and the instructions are unclear and can be changed multiple times per assignment. Fischer does a very poor job presenting content; instead he chooses to spend class time berating students for appearing unengaged or for naming their assignments incorrectly. He also threatens students with giving poor recommendations to recruiters if they name their assignment incorrectly even once.",
    "Problems sets are strong, but lectures are weak",
    "Get a new professor. Michael Fischer was unorganized, unclear in his specifications, and as a lecturer mumbles a lot.",
    "Lectures could be better",
    "Lectures are slow and unengaging; spent too much time on minor details and often lost sight of the most important concepts. The problem sets are fair; they take a reasonable amount of time.",
    "Professor Fischer is by far the most disorganized and disrespectful educator I have ever met. His attitude towards his students is at worst extremely rude and at best extremely confusing. I am not sure why he still teaches when he clearly hates his job. For me, he is an archetype of everything that can be wrong with an educator and the damage it can have on a class, department, and university.",
    "Strengths: not gonna lie the psets were fun to do...once you got past the ambiguities, see below Weaknesses: The professor. This class had the potential to be truly incredible... and it was not. I think content-wise, this is one of the most useful classes I have taken at Yale. However, this was just a logistical disaster. The specifications for the problem sets were always full of inconsistencies, ambiguities, and oversights. This meant that we ended up spending an inordinate amount of time trying to figure out what the assignment actually intended, instead of focusing our energies on solving the problems using an object oriented approach. The lectures were also quite dry, even though the material was really interesting. The slides were great to read over away from class, but I think they were from the year 2003 or something and they also contained some confusing mistakes.",
    "The course's psets were either really easy to understand and implement or very confusing and time-consuming. The lecture slides could have been more engaging and more fluid. I felt like the slides were fragmented which made them hard to understand. A weakness was there were no practice exams so it was hard to know what would be tested on the midterm and final. So much material was covered so I feel like the professor focused on breadth over depth which left me feeling like I could've had a better learning experience if we focused on fewer concepts."
   ]
  },
  {
   "question_id": "YC409",
   "question_text": "Would you recommend this course to another student? Please explain.",
   "comments": [
    "Eh, the psets were ok sometimes. The lecture was brutally boring though; I could not pay attention. But you can do ok in the class without going to lecture, although attendance is a part of your grade.",
    "I would recommend this course as I think Object-Oriented Program is a really elegant branch of coding, but I would recommend taking the course with another professor",
    "Absolutely not. DO NOT TAKE. I thought it'd be worth the low work rating, but it really just ruined my mood whenever I had to work on it. Please steer clear of it. I \"learned\" c++, which is to say, that I learned over the course of the semester the same amount of content I'd have been able to learn on my own in 3 weeks. If you'd given me the slides and given me some time, I'd have performed the exact same in much less time. Thats how little real, useful, important content is in the class. AND you still get tested on the stuff that doesn't seem important, so you still have to study it.",
    "If you want an easier cs elective that does not have too much work I would recommend this course. If you want to learn c++, I would also recommend this course. If you are looking for a course where you will be engaged during lecture, I would not recommend this course.",
    "Yes if you want to learn object oriented programming",
    "No! The course focuses too much on trivial aspects of OOP and C++. The Psets are poorly written and the grading rubric very arbitrary. Expect to lose a lot of points for really trivial mistakes (like not commenting the right date on every file you submit - this will cost you about 5% of the grade). This is particularly frustrating since the programming aspect of the Psets is very easy to solve, so you mostly lose points because the specifications were unclear. Fischer does not provide example output or test cases and the grade is determined by the TA manually running a few tests on your program. Edge casing won't get you any extra points. I had read similar comments before taking this class, but expected to do fine on the Psets if I juts read the specifications carefully. I was wrong. Since the specifications are unclear you can't help but miss minor details (and every missed detail costs you 5%). The exams ask arbitrary questions that were not covered in lecture.",
    "It's a great class. Very useful, not that much work, but does make you a better programmer.",
    "I would recommend this course to anyone interested in learning OOP, as it is super useful and this is the only class at Yale that emphasizes the theory and correct prcatice behind OOP architecture.",
    "Yes, though it's not engaging at all it's very easy and you'll learn C++ if you don't know already. PSETs take 1-5 hours and 9 (?) in total, grading isn't like 223 though with many test cases, there are a few points for that but it's more if you check off rubric items like did you label your .cpp and .hpp files and follow other instructions. If you read all the slides diligently you will be prepared for the exams as well.",
    "Do not take this course if it is with Professor Fischer. You might think this is an easy course (which it mostly is) but the very low quality of Fischer's teaching makes this class not at all worth taking. The lectures teach you very little and the assignments are very unpleasant in ways that have nothing to do with reasonable difficulty.",
    "Yes, because it teaches important OOP concepts",
    "Not with Michael Fischer. The class could have been good with someone better, like Glenn.",
    "Lectures are kind of tough to get through, but the problem sets and exams are fair. If you're looking for a chill CS elective, this is a reasonable choice, I guess.",
    "Absolutely not and that decision would be based solely based on the behavior of professor Fischer and if he was the one teaching the course.",
    "Yes absolutely 100%, just not with Fischer. As I said above, I think this is one of the most useful classes I have taken at Yale. You need OOP in literally any job, and it's great to develop an intimate understanding of C++. But you'd be better off not taking it with Fischer-- assignment specifications are extremely unclear and lectures are dry.",
    "I would not because I didn't feel like I learned much through the lectures or problem sets. I don't think the professor is bad, but the course should be restructured to better facilitate student learning."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "527",
  "section": 1
 }
}