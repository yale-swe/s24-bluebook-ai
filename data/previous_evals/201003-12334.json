{
 "crn_code": "12334",
 "season": "201003",
 "legacy_coursetable_course_id": 6463,
 "enrollment": {
  "enrolled": 20,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    0,
    0,
    2,
    13
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    3,
    5,
    7
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    15,
    0
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "This is the class for the serious programmer who wants to get more serious. You will code for hours on end because you will procrastinate your assignments. The assignments will be really long, but you'll given about 2.5 weeks for each. Help is available and useful. You'll learn a lot about computers both through the lectures and the assignments (though sometimes you don't understand the assignment 'til you finally get it working.)My biggest complaint is that the material presented in class does not closely enough match the material done in the assignments. Exam time brought great stress because unlike in other technical courses (math, physics, other cs courses) doing the homework was not enough to keep up with the material.",
    "take it. you start to actually become competent in this course",
    "Be prepared to spend your semester in the zoo. The assignments are a lot more involved than 223, and in my opinion they were too low level to be interesting. Make sure you budget your time well.",
    "If you've made it through 223, take this class. It's extremely rigorous (the problem sets are basically 223 assignments on steroids), but where 223 taught you things you NEED to know for CS (essentially every major data structure and algorithm), 323 teaches you cool other things, like compression and data error correction.In terms of workload, prepare yourself. Don't take another programming-intensive class with this one, and possibly don't take ANY other intense class. Unless you came out of the womb hacking into Linux shells, the problem sets will take a long time and be a lot of work. (You should be able to gauge how hard the assignments will be by how many human friends you have.)Also, learn early on that as far as Eisenstat (in the words of a previous year's evaluation), \"no man is an island.\" Though he can seem unapproachable and stand-offish, he's actually pretty understanding and wicked smart. He wants you to succeed.Lastly, some advice. When doing the problem sets, TALK to other students in the class. A LOT. Don't get competitive, but rather toss ideas around. It's especially helpful to have a group meet up to discuss each problem set for a few hours before anyone starts, so you guys know generally what to do. Because often the specs are extremely unclear and confusing and figuring out how to start is the hardest part.",
    "Very challenging and informational course. Be prepared to spend at least 15-20 hours on each of the programming assignments.",
    "If you are thinking about taking 323, odds are it's a required class. Having said that, it's not too bad. The problem sets are fun, but they do take anywhere from 14-24 hours each. The material covered in lecture is not particularly interesting, but it's stuff you probably should be aware of as a programmer.",
    "An excellent course overall, but a lot of work--the median time spent on all assignments this year was 135 hours. However, because of the amount of work and the rigor of the course, you come out with a MUCH better understanding of how computers work.",
    "If you really like programming, and you have done tons of it in C (for example, by first taking 223), and writing your own Unix Shell sounds like a very cool idea, then take it! It is time consuming, but the rewards that you get for investing time in it are worth every minute spent.",
    "The course focuses on low level things and sometimes feels like an electrical engineering class. However, it covers topics that every computer scientist should know. The lectures overlapped little with the assignments, so expect to dosome extra reading in order to understand the psets. Professor Eisenstat is fantastic! His teaching style is great and he is ALWAYS available to help out with any questions or problems with the assignments. The sooner you learn to ask him questions on a regular basis the better for you.The psets consume your life. But it's worth it.",
    "I would definitely recommend this class. And beyond the usual \"you probably have to take this if you're a cs major\" recommendation. If you're in math or engineering and took CS223, I would definitely consider this class as well. Professor Eisenstat can be a little slow in lecture, but he clearly puts a ton of time and effort into this class - much more than any other prof I've had. The problem sets are great. Amongst other really cool psets, you will code a simple make utility, lzw compression program (a la winzip), and a simple bash shell. The psets will teach you a ton about about programming, computer organization, and linux\/unix. You'll learn by doing - something I find myself missing in almost every other college course. You'll also get to work with python or perl, which are really practically useful languages. Eisenstat is fair, answers email questions quickly, and actually cares about his students more than any other professor I've had at Yale. The work load is pretty heavy, but you only have a problem set every 2\/3 weeks, so I found it manageable. I put in about 25 hours on the weeks when we did have psets, so you're looking at around 10 hours a week on average.",
    "Very programming intensive course, but no doubt you learn a lot in terms of programming in C as well as about computer architecture. It's hard to recommend this to someone who has not had programming experience, but if you've taken 223 then this course isn't too bad. I was initially very scared of this course but I think that the jump from 201 to 223 is a larger jump than that from 223 to 323."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "323",
  "section": 1
 }
}