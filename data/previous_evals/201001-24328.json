{
 "crn_code": "24328",
 "season": "201001",
 "legacy_coursetable_course_id": 3634,
 "enrollment": {
  "enrolled": 25,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    1,
    1,
    7,
    8,
    3
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    4,
    5,
    11
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    17,
    3
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Good introductory algorithms course. Psets are very reasonable - 4 problems each. However, they areinteresting and challenging problems and you should start thinking about them early.Midterm was very reasonable if you did a modest amount of studying. Haven't taken the final yet, so dunno what that's like.Learn a broad range of topics like greedy algorithms, divide and conquer, dynamic programming, graph partitioning, NP hardness and completeness, approximation algorithms, and randomized algorithms.Daniel Spielman is an excellent professor. He is enthusiastic, friendly, and explains things very clearly. For the tough topics, he makes good PowerPoint presentations illustrating the topics. [Fun fact: Spielman graduated from Yale and took CS 323 with Eisenstat.]There was no section for this class. There was no interaction with TAs other than going to their office hours, which I never went to. If you have problems with your pset grades, you should go talk to the TAs at office hours. [I had problems, but I was too lazy\/didn't care enough to go argue for my answers with the TAs.]",
    "YES. If you put in the time for problem sets and pay attention in class you will get a lot out of this course.",
    "definitely recomended. it is an interesting class that introduces you to formally thinking about algorithms, as well as how to come up with them in the first place. porblems with the class is no colaberation on p-sets and inclass final as oposed to take home. professor is very clear and easy to follow and engaging",
    "This course is what computer science is all about. If you're just interested in CS from a mathematical perspective, this is the one course you can take. It is both incredibly useful and mathematically wonderful, and the prerequisites are somewhat optional to those with a strong math background. I strongly recommend this course to anyone who is considering it.",
    "CPSC 365 is a course in different types of algorithms. Prof. Spielman's lectures are interesting, but sometimes become technical and pedantic. Take this class if you have to or if you have an unusually strong interest.",
    "If you're a CS major, you have to take it anyways. If not, it's still a good class if you want to know about algorithms and it is also a good course if you're looking for practice doing proofs in discrete math.",
    "Dan Speilman made this a great course with a very reasonable workload. The course is an introduction to the basic types of algorithms: greedy, divide& conquer, dynamic programming, NP - completeness and approximations, and randomized algorithms. The later material in the course is definitely harder than the early stuff, but if you have a proof based math background this course shouldn't be too difficult. Students without a proof based math background found this course much harder. If you do have the appropriate background, take it!",
    "It's a difficult course - the problem sets require quite a bit of thought, and sometimes you just need to have an epiphany. The lectures were interesting and not at all difficult to follow. The professor explained everything pretty well; and everything he covers in class is in the textbook so you can review it later.",
    "This is a great class. You learn how to think about how to solve the types of algorithmic problems that you need to solve. It is very well taught.",
    "Yeah I would recommend this class. Obviously all Comp Sci majors have to take it but I would recommend it for other people with a good background as well. Definitely not necessary to take 323 first. Probably not even necessary to do 223 if you did some computer science before Yale. Very proof based. And the problem sets were challenging but not nearly as time consuming as 223, 323, or 244. Took me about 4 hours each, which I think was around average.",
    "Interesting class, challenging for me, algorithms are hard to understand, but once you get them it's great. Read the book, and you'll be fine. Don't leave the HW for last minute though, give it a day or two to do it.",
    "Very fun course; problem sets were more enjoyable than difficult. They took a while (5-10 hours) but they weren't tedious. If you like problem solving, I recommend this course (a bit of familiarity with mathematical notation \/ proof concepts is required, but just ask questions and you'll be fine). Even if you are not a CS major! Think of this more as a problem solving course than as a cs course.",
    "Algorithms is not a class, it's a defining experience. It's difficult every step of the way, and you will encounter many intellectual obstacles. But once you have completed it, you turn back and realize that not only did you savor every moment, but that the class really has changed who you are and how you think. This is not an exaggeration. Expect to be challenged even if you came in as a hotshot, and to spend long hours looking for the aha moment to each question in the weekly problem sets. On top of that, Professor Spielman is phenomenal. I would recommend it totally.",
    "YES you should do it. Whether you are a computer science major or not, this course will improve your thinking and give you a greater appreciation for algorithms and their importance, Don't let the requirements scare you either. Once you are willing to think hard and honestly about the questions, and commit to understanding everything covered, you are good to go.",
    "Algorithms was one of the best courses (in the top three for sure) I have taken at Yale. The teaching was superb and the material was totally new to me. Spielman came to every class with a well-planned lecture and he supplemented the standard textbook material with interesting tidbits along the way. The class was hard. I spent a long time (8-12 hours) doing reading and problem sets for the class every week. If you include the time I spent thinking about the problems in the shower and on the treadmill, it's probably even more than that.If you are a CS major, you have to take this. It's a good class but is time-consuming. You will learn about different ways to approach the most important problems in computer science and you will learn the means to compare different problem-solving techniques against each other. You will learn which problems are generally unsolvable (or hard to solve) and what to do when you can't solve a problem. You will write lots of proofs, so be prepared for that. Definitely take AMTH244 of something similar first.If you are not a CS major, but you enjoy problem-solving and\/or are a math major, you might like this class. Spielman is a great teacher and the class covers a lot of thought-provoking material."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "365",
  "section": 1
 }
}