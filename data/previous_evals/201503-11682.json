{
 "crn_code": "11682",
 "season": "201503",
 "legacy_coursetable_course_id": 34106,
 "enrollment": {
  "enrolled": 6,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC305",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    1,
    2,
    2,
    0
   ]
  },
  {
   "question_id": "YC306",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    0,
    1,
    4
   ]
  },
  {
   "question_id": "YC307",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    3,
    2
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC304",
   "question_text": "How would you summarize ECON 111 01 for a fellow student? Would you recommend ECON 111 01 to another student? Why or why not?",
   "comments": [
    "It is a good class that you should take.",
    "Software verification is really cool, and there's no one better to take it with than Professor Piskac. You'll build a verification condition generator (takes a program in a toy language and proves its correctness) and a SAT solver. You can work in any language (although a functional language like Scala or Haskell is basically necessary for the first one) and with a partner, if you wish (although the workload increases accordingly). It's a ton of fun, and you should take it.",
    "The primary goal of CPSC 454 is to develop the ability to mathematically prove the correctness of your programs. It builds off of a toy language (assignments, branching conditions, loops, and arrays) and explores how to prove its correctness (i.e. how to prove that the algorithm will successfully move you from a state satisfying the precondition to a state satisfying the postcondition). You also pick up the basics of first order logic along the way. I found the interplay between abstract logic and the practical application of proving programs correct to be really interesting, and learned a lot in this class. If these subjects interest you, definitely take it.",
    "If you are looking for an awesome elective with a strong theoretical foundation, go for it!"
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "454",
  "section": 1
 }
}