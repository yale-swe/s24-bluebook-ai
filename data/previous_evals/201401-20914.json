{
 "crn_code": "20914",
 "season": "201401",
 "legacy_coursetable_course_id": 26749,
 "enrollment": {
  "enrolled": 96,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    2,
    13,
    23,
    37,
    9
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    14,
    14,
    40,
    9,
    7
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    61,
    23
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Take it if you want to have \"programming experience\" but it is not all that useful. I did learn to run some Linux commands though.",
    "I would never recommend this class.",
    "If you are considering becoming an engineer, and want a good knowledge of matlab and c, Enas 130 is a great class that will give you the skills to do any project in the Stem fields.",
    "If you're doing science\/engineering, this course will probably be mildly helpful, although a pain to deal with. Consider instead taking the intro sequence in the CS dept. (112, 201, etc.) if you have time. It will be better taught and you will learn coding much better.",
    "This course is a nightmare. Do not take it unless you must. If you must, I hope you already know how to code or else good luck.",
    "Wouldn't really recommend. Don't be fooled by the exciting first lecture- it got to be a drag and I found myself the rest of the semester either missing lecture or hesitantly going and getting next to nothing out of it. This course is set up well for self-motivated students who are probably just as well off learning everything themselves anyway. The skills you actually manage to gain from this course ultimately lie in your ability to program quickly and effectively, which the problem sets don't really motivate. You will be introduced to MATLAB and to C, though C only very briefly. These skills may be important, but you will ultimately have to develop them yourself. I wouldn't even bother with the textbook except maybe after the course if I thought I actually wanted to be skilled in this stuff. Take it if it's required for you and realize you've gotta put in your own time to really facilitate maintaining the skills you gain (which really is the languages themselves because the algorithmic tasks are so simple).",
    "This class is frustratingly specific -- don't take it for a QR or if you want to just learn something about how to code. We spent the entire semester learning about speech processing in Matlab and image processing in c. If you want a class that delves more deeply into a few topics, this might be a good class for you, but it's not good for just giving you a sampling of what you can do with computer science. Although I now feel more confident teaching myself a new CS language, I wish I had taken CS 112 instead.",
    "Although I did learn how to program in Matlab and C, I would not recommend this class to another student. If possible, take the CPSC equivalent. Maybe it was because this was Kuc's first year teaching the course, but it was very unorganized and he kept modifying the assignments (even the day before it was due), which was very frustrating. The workload is very high - 2 \"assignments\" due per week, each containing multiple parts. I'd estimate I spent anywhere from 1 to 10 hours per week on the assignments (more often on the higher side). The TA's grade very strictly and are not sympathetic at all - if you forget to upload a part of an assignment, you automatically get a 50%. You also can't drop any pset grades. The midterms are pretty simple and straightforward, however, and there is no final exam. The 2 reports you have to write are pretty long, but not too difficult. The lecture pdfs are always posted online so a lot of people don't even go to class.",
    "If you want to understand computer science \/ computing hands on this is the class to do it. Theory isn't really discussed in detail -- its all about the applications.",
    "I would recommend it if a student wishes to get away from the theory of computer programming and actually learn how things we use everyday are coded.",
    "Not too bad, a little dull. The psets are interesting, though. You learn more about systems and editing\/understanding code than about coding from scratch.This class covers Matlab and c.",
    "Would recommend. The class will teach you about both MATLAB and C and if you enjoy it you will spend time thinking about ways to improve your code or do other tasks with these two programs. The problem sets really aren't that bad, a good amount of skeleton code is given but if you do the problem sets, you will gain strong skills in these languages. Lecture notes are really good, most of the learning comes from doing psets though. Don't skim on the reports, do them thoroughly. Overall, great course, I loved it and I'm strongly considering another compsci class.",
    "If you are an engineer, take it. Pretty easy, not a lot of work, don't really need to go to lecture.",
    "Take it if you want to learn some programming. It can be a good start. Doesn't hurt credit d-ing just to see how it goes.",
    "As I said in my review, here it goes: NEVER TAKE THIS CLASS, I'M SERIOUS! WORST CLASS I`VE EVER TAKEN IN MY LIFE. The worst course I've taken so far at Yale. No doubts about it. Prof. Kuc is not that of a nice person, and he's seriously not the best lecturer. His lecture consists of reading his lecture notes in PDF aloud, so going to class is useless. That's why 30 students out of over 100 show up to class. Prof Kuc changes the assignments every 2 hours, even after most of the students sent it in. It's a lot of work, I mean, copy and paste, because he tries to have people who never coded before producing speech recognition and image processing without teaching the basics. Hence, people end up with no understanding and copying and pasting stuff. Oh! Then you get the tests and you're completely screwed up, because you never learnt the stuff, right? For C, for example, we spent less than a month on it and we jumped directly into encryption, meaning that we never learnt how to program in C, even though we learnt a little bit in Matlab. There are two psets per week for the class and it's terrible, but even though the work is exhausting, it's also pointless and dumb. As I said, copy and paste. The reports' grades are completely oblivious, two people with different TA's and the same exact report might get 100 and 30 out of 100. Not to take for letter grade neither for credit D either, because you're either doing very well or you're completely screwed up. I know a looooooot of people in that class, nobody liked it. The reports are going to screw up with your grade, like seriously. I never liked writing essays and that's why I'm a science person. Ironically, the grading for writing for this class was more obscure than for my writing courses. I think I speak for everyone saying that taking this class was a completely useless, pointless, time consuming and stressing experience. Taking this class was my biggest mistake at Yale. IF YOU HAVE TO TAKE IT FOR YOUR MAJOR, JUST TRY TO TALK TO THE DUS AND TAKE A CLASS IN THE CS DEPARTMENT INSTEAD, BECAUSE THIS CLASS` EXPERIENCE IS AWFUL! AND I SWEAR IT`S BECAUSE IT`S JUST ANNOYING, NOT BECAUSE IT`S HARD, AS IT WASN`T NEARLY CLOSE TO HOW HARD MY OTHER CLASSES WERE. PS: THIS IS A REALLY ANNOYING CLASS, RUN WHILE YOU CAN! Learn the stuff on your own, it's better.",
    "Yes.",
    "Although I might not be a majority, I thoroughly enjoyed the class. I took it out of interest with no prior experience in programming. If you want to learn Matlab programming, then I would recommend taking it. Kuc is a very entertaining lecturer and the class has an average amount of work.",
    "It's not a good course. If you have to take it, sorry. If you don't, you are much better off taking 112 or 201, where you will actually learn about coding\/computer science.",
    "I highly recommend ENAS 130. You can start from the basics and become quite adept in Matlab and C. This course makes me consider whether or not I want to continue on the mechanical engineering track or change to CS...",
    "This course as taught by Roman Kuc is alright. I don't think anyone actually learned coding as a result of this course though. A fair amount of people came in with programming experience and never showed up to class. Others learned from their friends or learned how to modify the already-provided code. In the end, I feel comfortable coding and debugging in Matlab (which were course objectives), but this class was boring and yet frustrating at times.",
    "It's a fairly interesting course that provides a shallow introduction to programing. The assignments are very short and easy, at times trivial. While I thought it was an interesting course due to the subject material, if you do not enjoy programming or working with computers, this is probably not the course for you.",
    "I would not recommend this class. It was a good idea, but very poorly executed. The workload isn't very high, but it's deceptively hard to get good grades on the exams and projects even as someone with a programming background.",
    "go for it if you need to. probably you need it if you are looking at it.",
    "This is not a great class. The problem sets aren't that hard once you figure out what the teacher wants but in terms of actually programming little is learned.",
    "I will recommend to another student. The class is not very hard and teaches you useful programming techniques. The professor is fun and is always willing to help students.",
    "It's an easy class. You are introduced to Matlab and C, and you learn techniques for image processing and speech recognition. You don't learn any actual problem-solving from this class, but you do learn many tricks for both Matlab and C. The two midterms, which are each 20% of your grade, are based on Matlab and C, and they're both easy. The two reports, which are also each 20% of your grade, are on speech recognition and image processing, are very straightforward. Note that the grading in this class is focused on catching petty mistakes rather than rewarding intelligent programming, so if you pace yourself and check your work, you'll have a good grade. The professor is a nice guy, but seems somewhat incompetent. I showed up for maybe 20% of the classes, and I put little effort into the class overall. This is probably between CPSC 112 and 201 in terms of programming difficulty, but idk.",
    "ENAS 130 was bad and I would not recommend it if it was taught by this same professor. I don't think it's worth it. There are other better ways to get an intro to programming.",
    "Only if you need to take it for a requirement",
    "ENAS 130 is an introduction to MATLAB and C. As a student with experience in other programming languages, the concepts in this course were not difficult to grasp. Nonetheless, I learned interesting applications for this course, which I benefited from.",
    "Take if needed for a major or if the student is interested in learning how to use MATLAB. If can be taken credit\/D\/fail, that would be an ideal situation to take the class.",
    "Course does not teach or encourage creativity. Assignments require fixing code already given in lecture notes as opposed to writing unique code. Assignments are also unclear. Numerous time I would complete and submit an assignment only a for Prof. Kuc to make a bunch of 'updates' to it that would require me to redo everything. The way everything was graded, if you try to be creative or if your code deviates from whatever the standard is (which is really hard to know since the assignments are unclear) then you will lose points. It was very hard to learn much going to lectures. For some reason I just didn't quite click with Prof. Kuc's lecture style. I also have no idea what my grade will be in the class. I did very well on 3 of the 4 major assignments and ok on another, but problem sets and the grades for the two reports were normalized (completely behind the scenes) so I truly have no idea what I'm going to ger. If you don't have any experience with computer programming, the computer science department's version of this course might be the way to go. That said, MATLAB is a very powerful and easy to use language and I think some of the problems with this course (namely unclear assignments that are Prof. Kuc rereleases) will be fixed the next time he teaches the class. It would be a tremendous amount of effort to teach a large lecture course like this for the first time.",
    "Take it if you need to.",
    "I would not recommend ENAS 130 for anyone who doesn't need to take it as a required course. If you want an intro programming class, take 201 or 112. ENAS 130 is very boring and not that much work (except when there's a report due, in which case it take up a lot of time). In our session, we learned how to create audio, create speech recognition tools, and manipulate images with MATLAB and C. These were kind of cool, but not very challenging. All of the C stuff was stuffed in at the end, and I wish there had been more emphasis on it, since it's the most useful of the two languages. I only took as an engineering req.",
    "Worst course I've taken in years, worst at Yale. Professor just lectures directly from his pdf notes, assigns psets that he changes and modifies the night before, and is very disorganized. I learned nothing from the course. If you want to learn to program, go teach yourself.",
    "Absolutely -- programming is such a useful skill for everyone, and the way the course is structured is ideal for learning the basics, to learn more on your own afterwards.",
    "This is a good course for beginner programmers who want practical programming skills. However, this course is not for potential computer science majors.",
    "Don't take this class if it's not a major requirement. It's just too frustrating, because the professor always modifies the assignments like 2 days before the due date. And you get 2 PSETS every week. It's quite an intense class workload-wise, even if the assignments seem ridiculously easy at first. This class was not a great experience for me.",
    "This class was a good introduction to matlab and c programming. A lot of the people in the class seemed to have some basic programming knowledge, but the class is structured for someone who does not have any, so you can definitely catch up. The Psets did take a while because of bugs in your code that you had to work out and the grading sometimes seemed really arbitrary, but overall I appreciate what I learned in this course.",
    "If you have the option to take another programming course, I would do so. The majority of the things you learn in this course are tailored to two projects that have no real long-term merit for you as an engineer or researcher. Professor Kuc is a great instructor, but the course just isn't very well structured. Although it was only an intro course, I don't feel like I learned enough to be able to say I have any true programming experience. From my understanding, the most engineering-applicable parts of programming are those that apply to programming microcontrollers and things of that nature--I doubt that anything I learned in this course would help me to that effect.",
    "Start homework early and get the grip of programming otherwise you will be behind",
    "I would recommend this course for a student with little to no experience programming. The weekly assignments (of which there are several-- this is fairly time consuming) are all motivated by either speech processing or image processing applications, so there is a cohesiveness week to week. Prof Kuc is a funny lecturer and is very helpful in office hours.",
    "ENAS 130 applies computer programming (about three-fourths of the time is spent on MATLAB and one fourth on C) to concepts in engineering, specifically speech and image processing. The engineering topics are especially interesting, since we learn how to develop speech recognition apps and how to encrypt and decrypt imagery. However, this course will be especially difficult if you have with no prior programming experience. I would strongly recommend taking this course after taking another introductory-level programming class in the computer-science department. If you do have some programming experience, this course will be enriching. It will teach you how to apply programming to more practical engineering problems.",
    "More work than you think it will be. Find the TA that is most helpful and stalk them with questions, even if they aren't your TA. Stay on top of the grades you get on your assignments and contest them when you think you were graded unfairly.",
    "Standard programming class; not very difficult, more utility than CPSC112 for someone who's going to end up in engineering\/science. It can be frustrating at times but is overall what is advertised.",
    "Good intro to MATLAB and C. Lecture notes are good.",
    "Definitely take this course, even if you don't have an programming experience. You will learn a lot but it does take quite a bit of time and patience. Also, Professor Kuc is wonderful. Lectures can sometimes be a bit dry. Take advantage of the TA help session and of professor office hours.",
    "Only if you have to, this class is a lot of difficult work. The class goes from manageable to you being completely confused with a snap of the fingers, especially if you have never done programming before.",
    "Great class! Even for someone like me with no programming experience, it wasn't incredibly difficult and I feel like I learned quite a bit. Prof. Kuc is great as well. He's entertaining and enthusiastic.",
    "A useless class whose material is better covered online. Take CPSC 112 if you're an intro student. Take CPSC 201 if you know some stuff. Otherwise, why are you even considering this class?",
    "Professor Kuc provides very detailed lecture notes online before every class that include sample programs, background information, illustrations, explanations of intuitions behind programming strategies, and outlines of the assignments, expectations, and longer-term goals. These lecture notes were vital for doing the weekly programs and the two projects, but made class time useless. We learned from doing individual work, and the homework Kuc set was interesting, properly challenging, and relevant. But going to class was not necessary.",
    "I would recommend this class to another student if you want to learn how to program in MATLAB and C, two highly important languages for computing in the sciences and engineering. I thought it was overall a good course that introduces students to programming in the two languages and also to the fundamentals of speech recognition and image processing, two major applications of what we learned. This was the first year that Professor Kuc was teaching it, and it was just restructured, so I think with time it can only improve. Sometimes lectures focused a bit too much on what we were supposed to do for homework, making homeworks less challenging and lecture less useful, but I am hoping that is something that will be changed in future years since as I mentioned this was the first year with the new structure. I also think there was almost certainly a bit too much emphasis on speech recognition and image processing, where more attention could have been put towards programming and computer science fundamentals, but again, this is another thing I do hope will change with time. That said, I did certainly learn a good deal about programming in both languages and about important applications in speech recognition and image processing, as well as a number of other useful things such as how encryption works, how pseudorandom number generators work, how difference equations and autocorrelations work, and how computers allocate memory. I would recommend shopping this class and perhaps shopping the other introductory programming or computer science classes in the computer science department to try to get a sense of which class if any would be worth your while. I think this class was good and has potential to be even better with time.",
    "Great for learning Matlab but stay super organized because the professor is not",
    "Tough, pretty grueling if you fall behind. Just keep up and you should be fine.",
    "Backloaded. Way, way backloaded. Plan your schedule around this.",
    "If you're coming into this class with no programming experience, then be prepared for a challenge. You will be busy with homework but this is what helps you become a better programmer. I was a beginner and I feel more than satisfied with the amount I learned.",
    "Good basic programing course though if you want something more complex, perhaps best to take class through CS department.",
    "ABSOLUTELY NOT! You do not really learn how to code in this class. It is more a class on code manipulation- being given some code can you modify it slightly to produce a slightly different result. My TA was rather useless and did not help me learn or improve.",
    "I would recommend this course to someone interested in computer science.",
    "I took this class because it was required for my major, but I enjoyed it as well. The programming applications are interesting. You don't really have to go to lectures. The tests aren't that difficult, but it's a strange format because you're expected to hand-write lines of code on the exams.",
    "ENAS 130 is a pseudo-introductory programming course. You use programming to accomplish 2 large tasks, image processing and speech processing, and the various steps required to do so can sometimes seem disconnected, but it all comes together in the end. The programming techniques themselves are often not explicitly taught in lecture, but rather you are expected to infer what to do from the lecture. I would recommend this course to another student whether or not they have prior programming experience, but if they don't, I would them that it is going to take a lot more work that many other students.",
    "This course provided me with a good introduction to programming.",
    "The assignments are many and take quite a lot of time, but no wonder you'll learn a lot in this class. The problems you'll solve are not very difficult to grasp, but your challenges will be to express your solutions in code. I think this is one of those courses I'll actually have use for after Yale."
   ]
  }
 ],
 "extras": {
  "subject": "ENAS",
  "number": "130",
  "section": 1
 }
}