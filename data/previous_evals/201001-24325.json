{
 "crn_code": "24325",
 "season": "201001",
 "legacy_coursetable_course_id": 3631,
 "enrollment": {
  "enrolled": 29,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    1,
    1,
    5,
    16,
    2
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    3,
    10,
    6,
    6
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    19,
    6
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Would definitely recommend.",
    "CPSC 201 is not the greatest class in the world. If you just want to take a CS class for fun, I would strongly recommend 112 with Daniel Abadi over 201, since 112 is all about programming and uses a useful language (Java) whereas 201 will do little in the way of developing programming skills while using an obscure (albeit fun-to-use) language called Scheme, a variant of Lisp. For those who still want\/have to take the class, it is certainly not painful; I just don't think it was very enlightening. You do get to cover things like computer architecture (you get to work with binary a little), grammars, and queues, which are all very cool, but I felt for the most part that the class was very watered-down. It often seemed like the professor dumbed-down the material for us, which was completely unnecessary and made the lectures largely devoid of content. The course definitely has room to cover a lot more material and perhaps use a second programming language (like C) in addition to\/instead of Scheme in the second half of the semester. On the bright side, Prof. Rushmeier is a very friendly person and the workload is very light. We only had seven problem sets, and they were all very fun, except for the occasional mistakes, contradictions, and general vagueness present in some of them (one in particular was very difficult to understand). There was just one midterm and a final (or two midterms, I guess, since the final was in-class, which was great). The midterm was pretty easy, but the final was very long, and no one (that I know of) finished it, but I'm pretty sure Prof. Rushmeier took that into account when doing the grades, since she seems very reasonable about those kinds of things. So by all means, take CPSC 201, but just beware that it might not be a very rigorous Introduction to Computer Science.",
    "I would recommend this course. Somehow Prof. Rushmeier got a reputation for being a very poor instructor who didn't understand the material. I can only assume that she improved substantially from the previous time she taught the course. The material was interesting and I learned a lot. Scheme isn't so bad at all, either.",
    "yes definitely, trains you to think rigorously",
    "Good, but not great. Problem sets are relatively easy but require a lot of time.",
    "The course's online lecture notes are one of its greatest assets and make most topics easy to understand. Take this if you want a broad overview of the field of CS; this is not (primarily) a programming class. Professor Angluin and Professor Rushmeier are both wonderful. The problem sets took me, on average 10 hours per week, but I'm slow and careful. Go to the Zoo help hours; they help speed things up. Beware of the weighting of the graded work in the course. The problem sets that I spent 80+ hours on over the term counted for 33% of the grade, and the two hour exams counted for 33% each, so test-taking skills under a time constraint are helpful for this class (but not strictly necessary--I'm not good with timed tests and I did fine).",
    "Professor Rushmeier is an extremely accessible teacher. She is super nice, and she always accommodates requests for special meetings or questions on line. At the beginning of the term I found it a little difficult tolearn Scheme from here, and I wish that she had used a computer in class to show us what Scheme was doing instead of writing on the blackboard, but she excelled when we moved on from the language to computer science concepts. Her problem sets take a long time (between 10 to 15 hours), but they always helped me synthesize the material in a very helpful way. The problems built on each other, and it was cool to be able to solve big problems (like solving any binary equation or converting assembly code to machine language). The tests were hard, but they were also learning experiences in their own rite, which was good.As I mentioned, Professor Rushmeier excels on a one-to-one basis. She is great at giving help, and she always makes room for us in her schedule. I really appreciated that she learned all of our names and made our lecture class seem like a seminar. As the term progressed, it was easier and easier for me to understand her teaching style. She is really funny, and lectures are fun. Again, I would recommend if possible using a computer when teaching Scheme.The class is great!!! Not too difficult if you have the time for the problem sets. Take it!",
    "You'll learn about the most basic levels of computer science--starting with binary operations all the way to basic programming languages. I wish there had been more connections made to today's technology, though.Start the problem sets early, though. I have not spent less than 10 hours on any one problem set. Unlike CPSC 112 and Java, this class uses Scheme which can be terrible to work with.",
    "Very interesting, and useful if you want to learn more about computers. It's very vigorous though. Expect it to take up a lot of your time. The tests are also very tricky.",
    "To be a CS major, you need to take this course. If you're not going to be a CS major, I would recommend just taking CS112, which is a really fun programming class.",
    "CS201 is a great class--definitely take it! The material is interesting, and the problem sets are fun and helpful (but also time consuming, fyi). A really good intro to computer science both for people who are interested in continuing in the field and for those who just want to try it out. Prof. Rushmeier is really sweet and tries really hard to help her students, and the outside help by both her and the excellent TFs was really, really well done and is a big factor in making this class an enjoyable challenge. Again, take this class!!",
    "Only take this course if you are interested in cs. The psets are very long, and debugging takes forever.",
    "It's a good class if you're interested in the core processes of how a computer works.",
    "This course is an amazing course that everyone at Yale should be required to take. Computers are a huge part of our everyday lives and everyone should know how they work and function to better appreciate how far technology has come.",
    "Really recommend it if you have any interest in computers and always wondered how the basics work.",
    "I would definitely recommend Computer Science 201 to another student. The material is really interesting and I found it to be a lot of fun. Professor Rushmeier comes off as a bit spacey, but she is actually a great teacher and really funny.",
    "It is a comprehensive course on important topics in Computer Science. The problem sets were the better part of the class, though don't mistakenly assume that the problem sets are everything. Before the midterm and the final, briefly go through the class notes and make yourself aware of other applications of a concept. The exams tend to test your ability to solve problems in given topics rather than memorizing solutions to well-known problems (or those on the problem sets). It probably won't be the best class you'll ever take, but it is worthwhile nonetheless."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "201",
  "section": 1
 }
}