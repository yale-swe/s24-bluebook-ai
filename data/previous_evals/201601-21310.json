{
 "crn_code": "21310",
 "season": "201601",
 "legacy_coursetable_course_id": 37004,
 "enrollment": {
  "enrolled": 84,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC305",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    4,
    10,
    29,
    29,
    3
   ]
  },
  {
   "question_id": "YC306",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    10,
    15,
    33,
    14,
    3
   ]
  },
  {
   "question_id": "YC307",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    62,
    13
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC304",
   "question_text": "How would you summarize ECON 111 01 for a fellow student? Would you recommend ECON 111 01 to another student? Why or why not?",
   "comments": [
    "Don't take this course unless you have to. If you have programmed before, you will be bored out of your mind. If you haven't, the course proceeds very quickly and very illogically and you won't get the content.",
    "ENAS 130 provides a decent introduction to C, C++, Mathematica, and MATLAB for STEM majors. It mostly focuses on C and C++, devoting only a week each to Mathematica and MATLAB. I had extremely little prior programming experience, and I did not find ENAS 130 very difficult. The problem sets are not overly difficult, and can be interesting (reconstructing Conway's famous Game of Life cellular automaton). Overall, ENAS 130 provides a good background in practical programming skills without the (in)famous frills and flash of CS50.",
    "I would reccommend this class if you need an intro CS class. It's boring but no major problems. The assignments start getting hard towards the end, but if you get help through office hours, a tutor, or a friend, they shouldn't take very long and are totally manageable. The exams are super fair. Open book, open note, very simple. The final project is just like another assignment. Very easy to do well in the class without really paying attention or going to class.",
    "The codes get progressively harder, and if you don't learn in the beginning, it will never get easier since you keep building on everything. I personally had no coding experience and had a rough time, but if your brain works that way, I'm sure one would do well.",
    "I WOULD NOT recommend this course to anyone who was not required to take it. If they had previous programming experience, perhaps, but not otherwise.",
    "A good introduction to objective-oriented programming, in which the learning is almost wholly based in exercises. The lectures are somewhat pointless if you are not 1.knowledgeable of programming or 2. are trying to implement the new tools at the moment.",
    "ENAS 130 is a good class for learning how to code in C and C++ at a beginner's level. A lot of the people in the class have had some programming experience so it is a little frustrating at first for those who have no experience but by the end you feel like you actually know what you're doing. The psets vary in difficulty from 1 hour of work to more than 10 but the TAs and the professor are pretty helpful so it's not hard to do well.",
    "If you have to take this class, then know that Prof. Long is probably not the best professor and you'll need to put in a lot of work to do well in this class. If you're a programming expert, PLEASE do the rest of us a favor and talk to your DUS about substituting a higher level class for this one. You'll cause many novice programmers undue stress by ruining the curve with your perfect scores, not to mention the fact that you'll be bored. If you're thinking about taking this class for \"fun\" and\/or to learn programming (like me), I would not recommend it. Prof. Long does a poor job of catering to you, and I think you'd have a better introduction to concepts in CS 112. It ends up being a lot of work to learn everything you need to keep up, especially towards the end of the course. Also, if you're thinking that you're gonna get a good introduction to MATLAB and\/or Mathematica, you can learn an equivalent amount about both programs just by reading the most basic of web tutorials. Overall, if you have to take this, you'll certainly survive, albeit with some lost sleep. If you don't need to take this, I'd recommend shopping around for other ways of learning some programming, or at the very least, Credit\/D'ing this one.",
    "Really enjoyed this course. Took it for my major with no experience beforehand. Work was challenging towards the end but very, very doable, and I truly feel I learned a lot (course probably could have covered more concepts in C\/C++; Mathematica and MatLab seemed like afterthoughts). Prof. Long is very nice and helpful one-on-one.",
    "Lecture is very very boring. If you have any coding experience at all, this will be a breeze. If you don't, good luck. Do the work at home and submit it early- just keep checking Classesv2 (Canvas? the new one?) to make sure you know when the midterms are.",
    "If you took comp sci before, it'll be a pretty straight-forward class.",
    "Impossible class unless you have a lot of computer science experience. Avoid if you can, or take computer science before. Not really an intro class.",
    "Only take this class if you absolutely have to for your major. Otherwise take a different intro class that will actually be helpful.",
    "ENAS 130 is a tough course for students with no CS experience in the sense that the course asks students to both learn the syntax of code but also to problem solve with the code simultaenously. PSETS took me a long time to complete. However, that shouldn't necessarily dissuade you from taking the course! I believe CS has a sharp learning course, but after taking this course, I'm confident in my ability to understand both elements of syntax of code and problem solving with a CS mindset. I would recommend taking this course C\/D\/F if you have minimal experience with coding.",
    "I would not recommend this class unless it is necessary to take for a major. As an introduction to computer science, this class was extremely fast paced and catered to those with previous computer science experience. There was a lack of support for those with no experience, and I would strongly take a computer science class before this course if you need to take it, or a different computer science class entirely.",
    "Great introduction to computing, ft. the most popular languages in the world. C and C++ were taught and as interlude, Mathematica and matlab were also introduced. Workload is not terribly heavy. Good choice for engineering majors (well I guess it is mandatory too).",
    "You learn C and C++, and you will be able to do very, very basic operations on matlab and mathematica. If you have friends to work on the assignments with, they're pretty bearable.",
    "The class time can get really boring, but I ended up doing most of my learning while working on the homework anyways. Basically, if you're good at\/like computing and programming, you'll enjoy this class, and if you don't...well...you'll get pretty frustrated. I will say this: for people who end up enjoying the subject, you will be able to overlook the class' shortcomings and appreciate it highly for what you learn.",
    "Very much so a self-taught course. The teaching was relatively ineffective. I would recommend finding a good website tutorial and using that for the course. It was a decent introduction to C and C++. Matlab and Mathmatica are hardly covered. If you have to take it, it isn't bad. However if you want more detail on programming work, take an actual CS class.",
    "You will learn a bit about c and c++ and how computers work conceptually. Easy A if you can do logic",
    "I definitely wished I had had some previous experience with programming. That being said, I would still recommend this class to anyone if asked. I had a hard time with it here and there but I learned a ton and I now have a lot of confidence in something I had never seen before, which I think is somewhat extraordinary.",
    "ENAS is a class virtually all engineers have to take, so you might not necessarily be able to avoid taking the class. Know that you have very little room for mistake if you want a good grade, because more than 60% of the people have prior coding experience and the grade distributions for midterms are skewed more left than Bernie Sanders.",
    "From what I found, those who had never programmed before had trouble due to the fast moving pace, however if you have previously programmed, you should have no problem. The only programming I have ever done in my life was when I took CPSP112 last spring and I found this class to be one of the easiest courses I ever took. Except for the last 2-3 assignments, I was able to finish the psests in under an hour each week. However I know many people that never programmed before spent much more time (5+ hours per week). It comes down to how much you already know and how much time you are willing to spend as to whether you should take the class. If you want to take it simply for MATLAB and Mathematica, dont. You will spend a combined of 2 weeks on those things.",
    "I would definitely not recommend ENAS 130 to another student. The course was generally uninteresting and was never very rigorous. It was designed, I think, to teach students how to perform short coding assignments of the kind they might expect to encounter in science or engineering, but because it never gave students the opportunity to work on more substantive\/interesting assignments, it failed to make computer science appear very interesting.",
    "You're probably taking this because you have to, but it's not that bad. Stay on top of your stuff, find some friends who either know CS or get it, do psets with them, ask a lot of questions, do a lot of googling and you'll be fine. Don't leave the psets until last minute though. Regular amount of work other than the last couple of psets which are a little bit longer.",
    "Having taken the Java course CPSC 112 before this, I would not recommend this course. ENAS 130 *used* to teach almost exclusively MATLAB, which was very practical. MATLAB is not ideal for learning how to program, but hell, it's what engineering people use, so it'd be good for engineering students to learn it. This semester, the curriculum covered predominantly C and C++ with dabs of Mathematica and MATLAB. This was not good. It spread the course's time out too thin and didn't allow enough time to learn any programming language\/platform past its basic syntax. It failed to teach almost anything about how to actually solve programming problems. I felt cheated. I wanted to learn MATLAB in depth. Instead, I learned the syntax of C, the broad strokes of C++, and not much else.",
    "You learn C, C++, and a bit of Mathematica and Matlab. The assignments are fun, but the lectures are boring and useless. You don't need to go to lecture, especially since Long isn't a great lecturer. Grading was weird this semester because there was no rubric to any of the assignments and the problem sets were self written, so at times it was unclear as to what the professor wanted.",
    "Although this is marketed as an introductory course, it was not so introductory! As someone who has never done any sort of coding before, I often felt myself drowning in a massive amount of material that I was never going to be able to understand. I think there should be more TAs, because at the help sessions I went to, the TAs were often overworked, and as a result didn't have time to explain things to students in depth. I think Professor Long is the classic case of knowing something too well to be able to explain it. Things that he takes as given may be extremely confusing to students are are programming for the first time, but he didn't seem to be able to empathize \/ explain some basic concepts. I also think he could perhaps employ more \"teaching by analogy\" -- it is was easy to become lost when he was only speaking in computer-speak.",
    "If you have no programming experience but need it for your field of study, then take this class. It's difficult and gives you a working knowledge of very basic algorithms, which improves your Quantitative Reasoning (QR) in any field. You don't learn those algorithms, you just figure it out as you go. If you do have programming experience, this class will be a waste of your time. You know if and for loops, and if you're here to learn one of the languages, or to do MATLAB and Mathematica, learn those on your own time. That's how it works. If you have a glancing interest in computer science, take something from that department, not this one.",
    "If you already know how to code, even in another language, this class will not be useful. Learn these languages, and MATLAB and Mathematica, on your own time, since that's how it ought to be anyway. If you don't know how to code, this is a wonderfully challenging course that may move too quickly. Take it only if necessary.",
    "Highly recommend this class as an intro computer science class. Covers a good amount of material but the projects really will help you grasp the concepts. There are weekly homework projects (which are often challenging), two tests (which are easy and, if you grasp the homework, don't really need to be studied for), and a challenging but do-able final project. Lectures are dry but he posts the code online for you to parse through yourself, which is helpful.",
    "I would not recommend this class without prior coding knowledge. It was very difficult to jump into, but very rewarding if you knew what was going on.",
    "Not well taught. Difficult for beginners and not an intro class.",
    "ENAS 130 is a strong introduction to computer programming in C and C++. For someone with no programming background, it is doable, but challenging, especially when the pace picks up. The problem sets were well designed and actually the most enjoyable class work I had all semester. However, lectures could be pretty boring, as Professor Long would often go through sample code line-by-line. However, it was still a solid course that taught me a ton.",
    "Take the class if you need to. If you had programming experience, it'll be a piece of cake. if you haven't, don't put it as your 5th class. If you haven't had any exposure to comsci, i would recommend spending lots of time learning and reviewing lecture slides and working with people.",
    "As an engineer you need to take this class. You learn a lot of useful tools like Matlab and Mathematica that will definitely help in your future classes. The workload is only a program due every week. They start easy but they can get complicated but I only spent more than a couple hours on one assignment. The test are also pretty simple and you don't need to do a lot to study for them. Professor Long isn't the best teacher but I understood everything he taught basically. If you can do basic quantitative reasoning this class should be pretty easy for you. I did a little Java in high school but it was definitely useful relearning basic coding techniques. Overall good course, if you're ABET engineering like me you'll probably have to take it anyway, so get it over with freshmen year and get your easy A.",
    "The vast majority of those taking this class are doing it because it's required, and a good portion of the class has already had exposure to one or both of the main coding languages taught in the course (in this semester's case, C and C++). It's a relatively straightforward class with problem sets that are designed for an engineer's mind. If you're looking to get a really solid background in coding\/take more coding classes in the future, your best bet is an introduction class in the computer science department. While a solid class, ENAS 130 won't really create a solidified foundation for any programming languages on its own.",
    "I had to take it as a requirement for my major. I had no previous programming experience and was completely lost all semester. I learned nothing from the professor- anything I know is from reading \"Programming for Dummies\" and help from my struggling friends in the class.",
    "Not great. Only take it if you have to. That being said, I found the course interesting if challenging; don't go in expecting it to be easy. If you don't have any prior programming experience, you'll need to study a decent amount.",
    "Rewarding but terrible class. The skills you (have to) learn and software you download are pretty powerful, however you do not need to take this class to gain either of them. This class teaches you to code within a scientific framework, however it teaches you to code only one way. If your code varies at all from what was expected the graders can take off major points. And they're inconsistent about it. Also, the midterms are timed. This favors fast typers\/coders a lot. And I'm pretty sure some people collaborated on these midterms putting those of us with morals at a disadvantage. Lectures were boring, wastes of time, but the notes created by the professor were incredibly helpful. All in all a miserable class but I had fun coding.",
    "Take this class if this is your first programming class. I learnt a lot. Professor amazing. His notes and the material interesting.",
    "STAY AWAY. If you have computer science experience, take this and you should be able to do well enough if you are willing to put the time in. If you have never worked with computer science do not take this class by any means necessary. It is poorly taught, the TA's are bad, and if you get lost for a single second, it is very difficult to regain you footing.",
    "ENAS 130 will force you to learn programming in C and C++, but won't necessarily teach you. I got through the course by working a lot outside of class with people who are CS majors and were willing to explain the concepts I was working with. I like Professor Long, and he'll definitely help you if you email him, but the class lecture style isn't particularly conducive to learning.",
    "A great introduction to coding, I feel like I have learned so much this semester. The problem sets are interesting, and I feel like the skills I learned in this class are actually applicable to future use.",
    "Hard but doable if you've never coded.",
    "ENAS 130 is a pretty good introduction to programming. It starts in C, spends two weeks in mathematica and matlab, and ends in C++. Most of the work in the class is getting the weekly psets running -- how long you take on them will really depend on how much programming experience you already have, but even if you're a beginner, it probably won't be more than 10 hours, or 15 hours on a really bad week.",
    "This class is a really good intro to programming in C and C++. I went into it with very minimal coding experience (just a small amount of Java and HTML) and ended up loving it. That being said, if you already know C\/C++ you're probably not gonna get much out of this class because those two languages make up most of the material and MATLAB and Mathematica are only very briefly covered. If you do end up taking this class, just know that Professor Long's lectures can get kind of monotonous and difficult to pay attention to. Luckily, you can pretty much get by without going to every class because he uploads powerpoints and a lot of sample code."
   ]
  }
 ],
 "extras": {
  "subject": "ENAS",
  "number": "130",
  "section": 1
 }
}