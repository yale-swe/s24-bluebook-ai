{
 "crn_code": "22523",
 "season": "201301",
 "legacy_coursetable_course_id": 20852,
 "enrollment": {
  "enrolled": 168,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    1,
    8,
    27,
    57,
    43
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    2,
    3,
    13,
    71,
    46
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    30,
    103
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "The course is excellent. It provides a solid foundation in Java programming and builds analytical thinking skills.",
    "If you are interested in computers and websites and software, definitely take this class if you haven't had experience with programming before. It opens up your eyes to the way that a coder thinks, and you begin to get an understanding of how the digital world works from the program perspective.",
    "A fun, time-consuming class where you should seek help early and often. It's manageable, and the problem sets are really really cool.",
    "This course seems to me to have two main goals: teaching the structural fundamentals of programming in Java, and teaching how to \"think like a computer\" in general, regardless of programming language. The logical basis gained is quite useful, even if one is not planning on continuing in computer science. If you are at all interested in computers and how to make them do anything you want--*no experience necessary*--I would highly recommend this course.",
    "Great chance to learn some programming--I really enjoyed the problem solving. I didn't learn much or anything about computer science though.",
    "Take this class. I don't think it really teaches you a new way to think unless you are not very logical to begin with. If you aren't capable of thinking logically then definitely take this course. If you already approach problems systematically, this class is a fun and easy way to learn how to use computers to help you. Yes, easy-this class is really not that hard, and no pset took more than 8 hours (only one that long, most more like 3-5).",
    "I cannot imagine a better organized course, or a more likable professor. The subject matter was relatively difficult for me as someone who takes few quantitative classes and the problem sets ended up taking up large swaths of time, but the amount of help available to people struggling with the content is unbelievable--you have absolutely no excuse not to do well, because there are so many office hours to choose from, and most of the TAs and peer tutors could not be more willing to assist you. Prof. Yang is very approachable, friendly, flexible, and helpful; even though this was a relatively large lecture, he got to know my face and greeted me around campus, and the number of extension days and extra credit assignments he gives is amazing. Midterm was difficult, but the fact that the exams count as only two problem sets makes it a little less stressful. Lectures were often kind of dry (comes with the territory) and a significant portion of the class never went, but you should try to go to stay on top of the material. Overall, this is one of the best courses in terms of setup I've taken at Yale, if not the best. If you're not a QR person, you'll need to budget a large amount of time for the problem sets every week, but as long as you have the time it's worth taking with YRY.",
    "Take this class! Computers are so important in today's world that it is very useful to understand what is going on behind the scenes. Do the optional assignments. You will thank yourself later.",
    "really good class, as long as you keep up with your psets.",
    "Yes. Take this class because you need to know a little bit about how computers work. Considering that the students have varying backgrounds in programming prior to the class, I think it does a decent job of balancing the newcomers with people who have programmed before. There were a lot of TA's who had office hours literally every single day to provide help for those who needed it.",
    "I would recommend this course if you are willing to spend several hours a week on problem sets. Honestly, a single problem set took me over 12 hours.",
    "CS 112 is a good class if you have never programmed before. It can be difficult at times and is very time consuming. But programming is a very useful and rewarding skill to have. I would recommend it but would also point out that it is probably more time consuming than expected so one should be sure that his\/her schedule allows for that.",
    "You learn the basics of how to program in Java. The problem sets are time consuming but can be really rewarding. TAs are generally very helpful and willing to assist you on the problem sets when they get difficult. Concepts which seem hard\/intimidating at first slowly become more comprehensible. I took this for my QR as a non-STEM type and it was challenging, but manageable. Not sure if I will continue to program at all, but was pretty interesting.",
    "This class is a great, rewarding, easy class for people who do not necessarily want to major in computer science or ever take another compsci class. However, it also has convinced a lot of people to major in compsci who had not considered it before.",
    "PSets can be AWFUL but also VERY VERY rewarding!",
    "Lots of fun! Enjoyable assignments and a great way to think. Totally dtf.",
    "This class is hard and frustrating, but also rewarding. For a lot of the problem sets, I had to have significant help from the TAs. Still, though, all the Psets proved doable with that help. Also, there is enough extra credit offered such that you don't have to take the final. Definitely do this.",
    "Great course! Make sure to take it before you leave Yale, and with prof Yang! He's super realistic about assignments and material and you will feel like you learned a lot. It's cool being able to program!",
    "Basic introduction to programming (in Java). Very straightforward and easy to learn if you have a good sense of logic. Recommended!",
    "112 is a great class for someone who is either interested in programming or who wants a really interesting, albeit time consuming, QR. I am a humanities major but I found 112 to be an extremely rewarding way to complete part of the requirement. It is definitely a class for someone who plans their time well and does not procrastinate. While all the assignments are doable, they cant take time.Many people say it is impossible to get a good grade in the class which is not true. You know when you have written the correct program so you can get 100s on all the psets if you take the time to do the work. Lecture was helpful but all the slides were put online so many people would skip lecture completely.",
    "This is a fantastic course. While it requires a lot of time and commitment, it is a course that all students should take. This was my first time taking a programming course and while there were plenty of challenges, it was so worth it. The TAs are absolutely fantastic and Professor Yang is the best! If you put time and effort into it, you will do well and take away a lot from it. I was amazed that even after just a few weeks, I could write fairly complicated codes. Great introduction course and while I am still humanities oriented, it made me explore more future options in the computer science department.",
    "There is a decent amount of work, but the work is usually interesting.",
    "This is a nice class, a lecture. Going to the lecture is not really helpful but the book is helpful (it's exactly like the lectures but not as sleep inducing). You'll learn a lot, that being said, if you have ANY programming experience, I'd take CS 200 (201?) as you'll be bored to tears during the first half of the semester; it's not even worth the easy A you'd get.",
    "Fantastic course! Challenging, but not overly difficult. A really worthwhile course to take.",
    "Programming is cool to know if you're curious about it, and the class shows you why it's so appealing... Not sure if I'd take this particular course again, though. There might be other ways to learn programming, such as through HackYale or CodeAcademy or whatnot.",
    "Take this class! As with any programming class, you won't get much out of the lectures without trying to code yourself, but the professor and TAs offered tons of help. Some of the psets do take a while, but the time is definitely worth it.",
    "Yes I would recommend it! I really enjoyed the course and feel like it was really useful even though I am not a computer science major",
    "YES if you have time to spend 10+hrs a week on each pset. (Unless you're a super smart applied math major, then you only need 1.5hr) One of the most important QRs you can take at Yale. You will learn a lot about programming and never look at your laptop's pinball game, your iPhone timer, or Guitar Hero in the same way. You will even begin to understand the source code behind web pages (right click on any page and choose \"view page source\".) Taking this class was like learning a foreign language for me--your world will open up.That said, make sure you go to lecture. After midterms I stopped going to lecture since I figured I could just learn it from the textbook. But then I stopped reading the textbook as well, since I forgot I was taking this class. I could still scrape by by LIVING at office hours and brute-forcing my way through psets I didn't really understand. Just go to lecture AND read the textbook.",
    "I learned that if you are going to take it, do NOT take it cred\/D. I felt I didn't have to go to class and was lazy at looking at the slides, then realized the problem sets are impossible if you don't know what's going on, and the tests are a nightmare because you can't bullshit Java like you can on a humanities exam.The problem sets also take like 7+ hours each but are really rewarding when you get it to work. At the same time though, it can be insanely frustrating to have compile errors or search for a single bracket you're missing to make things work.Luckily, they give you 2 optional replacement psets in case you sucked on or skipped one of the other psets.",
    "I took this class credit\/d\/fail. Thank GOD I did. The problem sets take many many hours each, like 10+. I recommend you take this class credit\/d\/fail and make friends with some smart kids because the psets are ridiculous. I got almost full credit on most of the psets, but failed the midterm. The good thing about this class is they offer 2 makeup extra-credit psets that you can submit. If you complete the extra psets, you don't have to worry about the exam! Be careful if you take this class, I recommend you have programming experience beforehand if you take this class.",
    "A fantastic course that will make you want to major in ComSci. That being said, it is a HUGE amount of work that is pretty unavoidable. If you understand a p-set, it's a lot like solving puzzles, which is great. If you don't, you can spend literally dozens of hours just hitting dead ends. GO TO OFFICE HOURS. The TAs are great, and there are office hours just about always. tl;dr LOTS of work, GREAT class",
    "Very time consuming but rewarding",
    "You learn Java, and you do some pretty cool programs for homework. By the end, you're thinking, \"Did I just make that? Awesome!\"",
    "It is a very superficial overview of Java programming that teaches with a lot of breadth but very little depth",
    "Yes, take this over ENAS 130. It's worth it!",
    "The class is a well-oiled machine. There was a huge TA infrastructure with office hours throughout the week, a fantastic, class-specific website embedded in classesv2 with active question-answering in Piazza, a class schedule adhered to religiously and reliably throughout the semester, and p-sets that were fun and interesting, if time-consuming (although most of them turned out to be less time-consuming than the class' reputation had led me to believe). That being said, with all these outside-class resources, it wasn't so necessary to go to lecture (you could read the pretty thorough lecture slides after class); lecture became particularly less necessary if you read the assigned book readings, which I would highly recommend doing. On that note, DO the readings instead of relying strictly on the TA system for help, because you'll ultimately end up saving a lot of time that way. I started the semester Credit-D-ing this class, but it became pretty clear I was spending too much time on it, and that it was sufficiently manageable, that it was more worthwhile to take it for a letter grade.I would definitely recommend this class to another student. Everyone should have at least a little background in programming. That being said, the jury's still out as to whether Java programming will be very useful with regard to how I decide to learn about computer science and apply knowledge about computer science in the future, especially given that I am a non-computer science major.",
    "Take this course if you can! I learnt how to think like a programmer and found the assignments enjoyable. However, it was also stressful putting in so much effort for an intro class that was not for my major. Be prepared to put in 7 to 10 hours of work for the later psets (there's about 1 a week). If you're willing to put in the effort though, it should be easy to score an A because of the replacement assignments and late days given.",
    "Dude it's a lot of work, but it's cool.",
    "I thought after high school that I was done with math and science. No more chem, no more calc. But I really didn't like the idea of wasting my time at Yale with a \"gut.\" My experience with Intro Programming was exactly what administrators dreams will happen with distribution requirements. It was challenging, I put a lot of time into it, I learned a lot, I'm getting a good grade, I worked collaboratively with people, think in a much more logical and ordered way, and even flirted with the idea of majoring in CS. I'm probably sticking with my humanities major, but I highly recommend Intro Programming to anyone.",
    "Don't believe what you hear about the awful workload of this class. It's not that bad, but it seems like a lot because it comes in bursts. Every week and a half or so you'll have a PSet due, and since most people don't start them until close to when they're due, it seems like you're spending hours and hours programming, when in reality, if you'd just spaced out the assignment, you might spend a half hour (less probably) each night working on it. Professor Yang and his team are really fair about grading also, since there's an upward curve and built in extension days (or \"grace periods\"). Also, if you need help, you can always go in for office hours, and the TFs\/Peer tutors\/UCGs are usually super helpful. Overall, it was a great course and a wonderful skill to learn.",
    "Making a bunch of awesome, not very complex programs with Java is the gist of what you'll be doing. I would definitely recommend to another student, but if you have some programming experience or really work well with logic and semantics, take 201!",
    "As someone with no prior Computer Science or programming experience, I can say this class is truly excellent. It introduces basic concepts in programming and CS, while also exposing you to a new way of thinking, which will yield dividends in other (non-CS) courses in the future. If you have any interest in CS or just want to know basic programming concepts, take this class!",
    "Yes. It is a good introduction to programming and, though the problem sets require a lot of work, the class is structured such that you have some wiggle room.",
    "One of the more enjoyable classes I've taken at Yale. A great way to learn the basics of programming. You get to make some pretty cool programs from a sudoku solver to a virtual guitar played with your keyboard. I would recommend this class if you're interested in programming at all. You do get what you put in, and problem sets average from one to three hours, but there are usually opportunities for extra credit if you really want to put more time in.",
    "AMAZING AMAZING AMAZING. One of the funnest classes I've taken at Yale. I loved doing the problem sets. Even though they were sometimes frustrating at first, finishing one and getting everything to compile and run properly was one of the most rewarding feelings. Before taking this class I knew nothing about computers or programming. Now I can get my computer to do stuff for me!!! TOO COOL!! Great great great class.",
    "This class is a lot of work. Unless you are interested in going into a related field, take it Credit\/D. Prof. Yang is super nice but he goes fast, and if you don't have an intuitive grasp of the concepts, you can fall behind very easily. If you put in the effort, you will learn a lot. Ultimately, this class wasn't for me, but if you have time and are willing to work (10-15 hrs for later psets if you are on the slow side like me), it can be very satisfying.",
    "Yes, I would recommend for someone with little or some programming experience. I took AP Comp Sci in high school, but had forgotten much of it by this year - for me, the classwas very manageable, sometimes easy, but sometimes challenging (especially on the psets). I spent 2-7 hours on each pset, but solving a problem on your own is really rewarding. The class itself had a great support structure - you get 10 extension days for psets (up to 3 on each) for the semester, and TAs and the professor are always around to answer questions. Take it!",
    "Lots of fun. I already have recommended it to tons of people.",
    "TAKE IT! It's such a fun and rewarding class. There may be tough PSets but you have so much support from the team this class has set up for you that it'll be okay. There's nothing like the feeling of having finished a program and having it run flawlessly. It's beautiful.",
    "TAKE CPSC112. Is it as much work as they say it is? Yes. But is it worth it? I would say yes. You do learn java, but more importantly, you learn a way of thinking that will help you in any problem-solving endeavor you may encounter. There are few things that can top the satisfaction you feel when your code works. There are few challenges as fun as working your way through the logic, structure, and syntax of writing a program. No matter what your background, this class is applicable and fun. Plus, we all use computers so often that I think it's good to get a sense of what makes them work. Overall great course that you should definitely take before graduating!",
    "CPSC 112 is a Java-based crash course not through the programming language, but through algorithmic thinking. Take it with Yang (he's the best, by far). He teaches you how to think about programs, not just how to program. You'll get frustrated sometimes, sure, but stick with it and you'll really love the course. Probably one of my favorites--plus, our last problem set was a competition with Google Glass as the prize.",
    "You learn the basic elements required to program in Java. The problem sets start out simple, but they get pretty tricky pretty fast. By the end of the class (at least my year), we wrote a program that created a wavelength to synthesize a guitar string, made an array of 37 chromatic strings, and turned our keyboard into a piano keyboard basically. You can imagine that, to get from basic print statements to creating a fully functioning instrument synthesizer, there's a lot of material that needs to be learned.I really enjoyed the class, but know that it takes a fair amount of work, especially if (like me) you have virtually no background in computer programming.",
    "Great introduction to programming. Somewhat quick paced but if you go to class and devote some time to the problem sets it isn't a problem. Be aware that it will require a decent time commitment especially later in the course so consider Credit D if your not going to be able to keep up. Yang is great.",
    "CS 112 is a great and fun introduction to computer science. I went into the course not really knowing what I was going to get out of it\/what I wanted to get out of it, and I half expected to have a general working of how computers work at the end of the course, which wasn't the case. You don't learn how computers work in this class, but that does not mean the class isn't worthwhile. Instead, you learn how to do basic java coding, which, although a somewhat useful skill in its own right, is only a part of what you get out of the class. The real benefit of taking CS 112 (and any computer science course, for that matter) is that the type of thinking required to solve a CS problem is a really useful one to master. Being able to think logically through the problems and think of clever ways to solve and troubleshoot code really enhances your brain's abilities (and can be really fun at times). This class is a LOT of work, and some of it can be really annoying if you can't figure out why your code doesn't work. That said, once your code does finally work, there's honestly no better feeling in the world than having your finished product up and running.",
    "Yes, great class. Who wouldn't want to learn basic programming in today's day and age? Sure, the problem sets are time-consuming, but if you just do what you're supposed to do (ie, attend lecture, do the readings, start PSETs ahead of time), you'll be totally fine. TAs are available to help whenever you need them, and Professor Yang himself is extremely accessible. He's super dedicated to his students, too. Great class. Highly recommended.",
    "I would definitely recommend this class to all my friends no matter what their majors are.",
    "CS 112 is a fun yet rigorous introduction to programming. While you only use java, the concepts easily transfer to other computing languages. Assignments include developing a Mad Libs program, several animations, and a Pokemon-type video game. The problems sets are very demanding, but TAs host daily office hours and help students work through them. The grading is very fair: nine problems sets plus a midterm and final that each count as two problem sets. Students have the option of two replacement problem sets as well.",
    "If you are willing to put in the time, take it. Otherwise don't bother.",
    "It was a great introduction to java. The course does move quickly, so make sure you keep up with the lectures and follow with the book. Also meet with Professor Yang and the TAs. They are very helpful and will take their time with you. Take this course with Professor Yang!",
    "If you have any programming experience, take 201. Seriously, we spent several weeks on defining variables and the concept of methods. I didn't have much experience, but it took until at least spring break before I learned any new material. That said, I did enjoy the class, and it was an easy A.",
    "A great introductory course to programming, computer science, and java.",
    "An excellent intro course that teaches you to think about problems like a programmer.",
    "I would recommend the course because it is a straightforward way to get a feel for programming, and is not a huge time commitment.",
    "Awesome class. A lot of work, but rewarding Nd interesting if you are willing to put in the time.",
    "This is a great class, but it is also a large time guzzler.",
    "A great challenge. I knew nothing about programming going in and know a ton coming out of it. It was hard. Really hard. But I learned so much that the challenge is rewarding.Strength: you are going to learn a ton.Weakness: sometimes it feels like you've been thrown into the deep end of a creek without a paddle.Overall would recommend.",
    "Yes, it's a great course. Fun too! You program things like sudoku solvers, guitar hero, and animal simulators.",
    "A lot of work, but super rewarding. Professor Yang is awesome, and he wants people to learn as much as possible. Psets are sometimes hard, but if you mess one up there are two make up assignments that can replace your grade, and you have 10 discretionary late days to use for assignments when points won't be taken off.",
    "Great class, you can really learn a lot and there are chances to learn a little more if you're interested (html, Android app, etc.), but you can also do the minimum work and enjoy it and do fine gradewise. Definitely recommended, but don't leave the psets til the last day. Also, really helps if you have friends in the class. If you don't make some, cuz it helps a lot.",
    "yes to get an introduction to programming, but don't expect to learn too much for other classes",
    "This is essential knowledge for any college student today \u00e2\u0080\u0094 coding is now a language just like Spanish or Chinese. Everyone should have to take a class like this, and CPSC112 with Professor Yang is as good a place as any to start. Yang and his team of TFs are extremely helpful, the problem sets are fun and interesting, and you come away from the class feeling like you truly learned something.Note that this is not a gut \u00e2\u0080\u0094 some problem sets, especially toward the middle of the semester, required nearly 10 hours to complete. But the deadlines are very flexible, as is the grading. This course is really designed so anyone can succeed and learn a lot.",
    "I really enjoyed it. It taught me different way to think about solving problems. It has garnered my interest in the field even more. It also met all my expectations. The teacher is great and there was great motivation. The course is time consuming but definitely worth it.",
    "a lot of late evenings spent wondering why your code doesn't work",
    "Highly recommend it. Programming is very useful to know and this is a great intro course.",
    "CS112 is an excellent intro programming class, accessible even to people who have never programmed in Java (or any language before). It's also just a class with fun assignments and a fun workload. The problem sets are sometimes time-consuming, but for those willing to put in 5-10 hours, grading is very very lenient! (You even have 10 free \"late days\" with no penalty!) The teaching team here is one of the best at Yale - constant office hours and support - and, overall, this is certainly a class worth taking.",
    "I would recommend this class to anyone who thinks they might have an interest in computer science, or who likes patterns and solving problems, or even graphic design. It's a fun course for everyone who is willing to learn the concepts and put in the work, but is especially useful as a gateway course.",
    "I'm glad I took this course. The psets can take a long time, but the peer tutors were helpful and almost always available.",
    "Great class. You learn a lot and its fine to take this class if you don't have any programming experience. Lecture is boring. Go to office hours, they really help.",
    "I would take this class again! Freshmen, sophomores, juniors, and seniors should all consider taking this class- the earlier, the better. You might fall in love with CS. Take your time learning the early materials, since they are really important for the rest of the class.",
    "This is a great introduction into Java programming, and you will be able to make your computer do some relatively complex things by the time you've finished. If you have any interest in programming (which you should) you should take this course.",
    "Yes! Fun and interesting.",
    "Only take the class if you really want to spend 10 hours a week doing assignments, most of which you wont be able to do yourself and would consistently need help for.",
    "It is super interesting and super time consuming. I loved it, but I could see it not being for everyone. Take with caution and be willing to get comfy in Dunham lab's basement.",
    "It was a pretty good introduction to computer science but the problem sets took way to long. Basically what was taught in class was kinda simple or not taught that well but then when you got the problem sets it was the basic concept but much much harder.",
    "Definitely take this class -- everyone should know how to program!",
    "Take this class if you want to learn programming, but don't necessarily want to major in Computer Science. If you've taken Java already, this class can give a lot of problem solving practice!",
    "I would highly recommend this class. Definitely try to take it with Professor Yang if possible but it's definitely a course that everyone should try to take before graduation if possible.",
    "Take it with Professor Yang. The class will be tough and it will take a lot of your time. People say each problem set is like 5 hours. This is true for the first few. Towards the end it can take up to 16+ hours. It depends on the person, but it really does take a long time. It's rewarding and it's a lot of fun. If the policy remains the same, you may be able to get 100s on all your psets, and then skip on the final and still leave with an A in the class. It's worth it to dedicate the time on the psets. The midterm is hard. The final wasn't so hard, but it's better not to bank on that. Just do the psets. And the replacement ones too. You can learn a lot in the class. Go to the office hours of the TAs, you will learn and get useful help, sometimes more help than you thought you'd get, such that you finished your program quicker than you thought you would.",
    "I really enjoyed my experience in CS112. I came into the class knowing very little about programming, but was able to learn a lot. I'd highly recommend this course to anyone and everyone. Four important notes: (1) The textbook is very helpful if you're ever confused, (2) Take advantage of the frequent office hours with the Professor, TFs, and Peer Tutors - they can be very helpful (3) Be prepared to spend a long time on the PSets - even if you understand things well (4) Do the make up P-Sets even if you don't need them! In 2013 you could use 2 of them to replace an exam grade, and even if you don't they're good additional practice.",
    "Great! You will learn a lot. Problem sets take a long time, but there's a ton of support within the course, as long as you don't fall behind. So happy I took it - it was a fantastic intro to programming (as the name implies).",
    "This class is a good introduction to programming. It moves slowly at first but picks up toward the end of the semester. I took it Credit\/D, which I think was definitely the right choice, but I underestimated how much I would have to work even just trying to pass. It's easy not to pay attention in lecture, but since the class is so cumulative, that can put you behind really quickly. If you're willing to do the work and throw yourself into it though, it's a great class.",
    "Particularly if, like me, you\u00e2\u0080\u0099ve never taken a CS class before, CS112 can seem extremely intimidating. However, this is what makes the class so incredibly rewarding\u00e2\u0080\u0094by the last quarter of the semester, you can look back and see how far you\u00e2\u0080\u0099ve come and how much you\u00e2\u0080\u0099ve learned. The goal of CS112 is not so much to memorize or perfect your knowledge of Java, but to learn the way of thinking that programming requires. Computer programming is essentially like solving a puzzle, and throughout the semester you learn the tricks and methods to do so. Even though each consecutive problem set gets more complex, I actually found the ones at the end of the semester to be far easier than the ones at the beginning, because I understood the principles and thought processes that programming requires. Prepare to spend a lot of time on the classwork\u00e2\u0080\u0094the psets can take hours to finish. Grading isn\u00e2\u0080\u0099t very harsh, but can sometimes be a bit nit-picky. That being said, Professor Yang and the TAs want you to succeed, and if you\u00e2\u0080\u0099re dedicated to the course and really want to learn, you\u00e2\u0080\u0099ll do well. I would definitely recommend that everyone take this class--it\u00e2\u0080\u0099s a great break from writing essays, and is extremely rewarding and fun."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "112",
  "section": 1
 }
}