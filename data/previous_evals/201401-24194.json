{
 "crn_code": "24194",
 "season": "201401",
 "legacy_coursetable_course_id": 26384,
 "enrollment": {
  "enrolled": 38,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    7,
    14,
    9,
    2
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    7,
    6,
    13,
    4,
    2
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    32,
    0
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "First year, was okay. Definitely extremely bottom-heavy - all the work is at the end of the semester - A LOT of work.",
    "yep, once the organizational issues are corrected, this is going to be a great course! with the project, you have a chance to make something really awesome that can be taken into the real world after the course is completed.",
    "There are two components to CPSC 439: a semester long software project that you get to work on in a group of 6 people and a class on formal methods. Both components are incredibly interesting. For the software project, it is great to have a class where you learn from your peers and learn about all the technologies that are being used in industry to develop software projects. For the formal methods component, it is very interesting to translate a program essentially into math and be able to prove its correctness. Overall, this class was great, and group projects were very impressive all around.",
    "Interesting class. The first 2\/3rds were all practical while the stuff after spring break was more focused on theory and formal methods. Prof. P cares a lot about the class and put a lot of effort into lectures. The biggest negative is that there was tons of work due at the end of class and not much during the semester. I would definitely take it again because a large part of the class is the group project, which is really exciting as I had a great group.",
    "A bumpy ride for a first time teacher and first time offered course. The slides and lectures were fairly boring and unintelligible. For the first part of the course, I found most of the information redundant or useless (having worked at tech company already), and the second part became so complicated and poorly explained that I couldn't keep up at all or even figure out what I was learning. On the bright side, the course only stands to improve with student feedback.",
    "CPSC 439 is a fun course, and Professor Piskac is engaging and presents really interesting material. This was a pilot run, so I imagine many improvements will be made for the next time the course is taught - this time around, the workload unpleasantly hockey-sticked at the end, right around reading week \/ finals period. I still recommend this course and really enjoyed it, but be prepared to clear your schedule. It is also worth mentioning that you will get more out of this course if you have already had a software engineering internship. If you have never programmed on a large team before, a lot of the concepts will be foreign, and while you will be able to follow the lectures, you won't gain nearly as much. This course is definitely worth taking, but you should probably get some workplace experience first.",
    "The meat of this course is in the project. Basically, you form groups of 4-6 and build something really cool, documenting the process along the way. Naturally, this requires a bit more experience than the prerequisites suggest. You should probably have gone to a hackathon (although you should not write similar-quality code), or done an internship in industry before taking this course. This was the first time it was offered and so it was very much in a \"beta\" stage. We spend a few rushed weeks at the end on formal methods that seemed to bother some of my classmates. I thought they were really cool, so I just went to office hours to keep up. Not a big deal, but take reviews critical of that piece with a grain of salt. If you want to go into industry, or if you're a CS major and just want to have some fun: TAKE THIS COURSE.",
    "This class started out very slow going over some project management and design patten terminology. However post spring recess the course load and the material difficulty becomes comparable to any other Computer Science elective. This might change in future years. My guess is this will not be an easy elective in the future. Professor Piskac is smart and an expert in formal methods. The course will probably be geared towards that in the future. Regarding the programming project in the class, students are grouped into teams to build an application of any kind. This is pretty exciting and makes the class totally worth it. But make sure you select carefully which team you join. Work with people you know. This is probably the most challenging part of the course. You want to avoid individuals that want to get away with as little work as possible or not mature enough to take other people's input.",
    "It's hard to describe this class. Building an app is really freaking cool. Learning formal methods in a 3-week crash course before the final exam? Not as cool.",
    "Make sure you don't just want to build a project for the semester, because this class requires far more work in the formal methods of software engineering.",
    "Don't take this class. It's incredibly disorganized and doesn't teach software engineering. The classwork focuses on formal methods, and you can't do the project unless you have knowledge of a practical language other than C (the only semi-practical language taught in the computer science major, other than java, which won't fly for a project either). Basically this class should be called \"formal methods, plus a project that you can't do unless you have already done software engineering\"",
    "Take only if actually interested in software engineering theory (formal methods)",
    "A fun and educational course. I learned a lot about formal semantics, testing, and software verification. The workload was just right. The project component of the class makes it fun.",
    "Possibly. When I took the course it was the first time it was offered, and there is a really large room for improvement. It started out rough, really rough, but by the end it felt like a legitimate software engineering course. Hopefully the professor learned a lot through her teaching of the course, and I expect next year that it will be much better. I actually learned a lot from the course, and the project is a really good experience to work with people in a group, and make something you can actually be proud of, and the material that you need to know is actually interesting. I recommend taking a gamble, and seeing how it has improved this year.",
    "I would not recommend this class to another student. The gist of the class is a group project, a few haphazard psets and an exam. The psets were sprung on us without much notice, and we were not given solution sets to the psets. Then, the exam was based entirely on the questions from the problem sets, which had neither been returned nor given solutions to at the time of the exam. So you can imagine the difficulty of taking an exam based on questions that you are not sure if you know how to solve. In addition, the course as a whole was quite unorganized, slides were taken exclusively from a different NYU course, and lectures were hard to follow. The project can be cool if you have experience in building apps, but if you don't expectations are quite high to learn how to contribute in a language\/platform that you have never had any experience using. Don't take this course unless there are no other options or you are a very accomplished ruby\/python coder\/web designer.",
    "A new class, and it has some issues of a new class. Please read these reviews with a grain of salt-- Prof. P was teaching this class for the first time and would demand homework or presentations of us at a weeks notice many times. I think this will not be an issue in the future. We were required to do homework within 4 days of the release of the pset and spend 10 hours during reading week on the class. Many assignments were surprises not included on the syllabus. However, the subject matter is very important, and very much worth learning. And Prof. P cares a lot about her students and the projects, which are the majority of the work in the class. I'd sa take this class, but be warned that there are still some growing pains.",
    "Watch out. The lectures are irrelevant and uninteresting. The only reason to take this class is to get the chance to do a cool software project. Expect nothing from the lectures and you won't be disappointed, and problem sets are annoying and based on obscure stuff from lecture (which you won't go to).",
    "Do yourself a favor and give this class a few years. At this point, the course is too unstructured and taught by a novice who does not understand the rhythm of university life. The first half had nothing to do. The second was extremely stressful and full of more deadlines than could be met. There were deadlines every four or so days, even hours before the final, before the presentation and during finals week(the final was before this week, making it very hard to study in time). The class is useless to attend. Any real software engineering experience gained is only through how your group is. If the difference between your knowledge of real world coding is too little, you may feel lost and become a bottleneck to the team. Strongly advise not to take this class. If you must, take after a summer of solid internship.",
    "CPSC 439 is a programming intensive (depending on your project) class that also puts a lot of weight to logic and proofs for Formal Methods. The class is definitely interesting and fun (especially when you are working on your own product). Although there is room for improvement, especially on the distribution of the workload throughout the semester, if you want a practical course and if you love logic, I would definitely recommend this class to you.",
    "I would actually not recommend this course to other students for the time being, and I say that very rarely. The final app you create in the class is cool, but the experience you get from creating that app (with very little guidance or structure, mind you) is possibly the only redeeming aspect of this class. The syllabus was in flux for the entirety of the course, Ruzica is a very unclear lecturer, and many people weren't even motivated to go to class. Wait two years for this course to develop further, then take it.",
    "There are two major sections formal methods, and group programming. The first was covered in the last 3 weeks of class and the group project was done out of class time. In the future the class may have a better balanced workload and include more information but as it was this first time it was rather chaotic.",
    "This class has three parts: 1. overview of software development methods 2. a basic introduction to formal methods of program verification, and 3. a large team project. Don't make your project too complicated! It will take a lot more effort than you expect, so focus on doing one thing well and getting it perfect.",
    "STAY AWAY. STAY FAR, FAR AWAY. CPSC 439 was one of the worst academic experiences I have ever had (including preschool). The course was horrendously organized, which I should have realized from the start of the semester, when Professor Piskac didn't have a syllabus or any semblance of an idea of what she was planning on teaching in the course. The slides for almost every lecture were \"courtesy of\" a professor at another school, which in practice meant that she literally took slides from another course, changed the PowerPoint theme, and then just taught directly from them. I think this was one of the contributing factors for why lectures were incredibly unclear and hard to follow. After the first two weeks, most students had stopped coming because of how utterly useless they were. In addition to the problems with the lectures, the assignments and tests were unfair and managed incredibly poorly. We were originally told that we would have a midterm, which was then canceled, meaning that the primary assignments were homework, a group project, and a final. Professor Piskac assigned one problem set about halfway through the semester, and then realized about a week before reading period started that we needed to have more, so she assigned two within just a few days of each other, with one being due 2 hours before the final. Because of how late they were announced, it was impossible to prepare or do them in advance, and having two due within such a short time of each other was unreasonable and frustrating. Furthermore, a large portion of the final was the material on the last problem set (due 2 hours before when the final took place) and we were not given a solution set, which was very frustrating and made it much more difficult to prepare for the final. The problem sets were also often unclear. The group project was also irritating. Random assignments popped up throughout the semester with little warning, including a peer review of another project, which was never mentioned until just a few days before it was due, which also happened to be the same week as the final, the last problem set, the final presentations, and the project being due. Finally, Professor Piskac was extremely unreasonable with time expectations from us during reading week, seemingly entirely missing the point that reading week is designed so that students can study for finals. On the Monday of reading week we had to attend a two-hour project fair and then were \"strongly encouraged\" to attend four hours of group presentations."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "439",
  "section": 1
 }
}