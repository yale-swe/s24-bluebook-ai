{
 "crn_code": "10913",
 "season": "201503",
 "legacy_coursetable_course_id": 34113,
 "enrollment": {
  "enrolled": 17,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "GS004",
   "question_text": "Work Load",
   "options": [
    "light",
    "appropriate",
    "heavy"
   ],
   "data": [
    0,
    3,
    3
   ]
  },
  {
   "question_id": "GS005",
   "question_text": "Pace",
   "options": [
    "slow",
    "appropriate",
    "fast"
   ],
   "data": [
    0,
    4,
    2
   ]
  },
  {
   "question_id": "GS006",
   "question_text": "Difficulty",
   "options": [
    "easy",
    "appropriate",
    "hard"
   ],
   "data": [
    0,
    4,
    1
   ]
  },
  {
   "question_id": "GS007",
   "question_text": "Preparation for Departmental Requirements",
   "options": [
    "not helpful",
    "somewhat helpful",
    "very helpful",
    "not applicable"
   ],
   "data": [
    0,
    2,
    2,
    0
   ]
  },
  {
   "question_id": "GS008",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "below average",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    0,
    0,
    1,
    4,
    0
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "GS003",
   "question_text": "How would you summarize AFAM 505 01\/AMST 643 01 for a fellow student? Would you recommend AFAM 505 01\/AMST 643 01 to another student? Why or why not?",
   "comments": [
    "Operating Systems with Zhong Shao is great. It sharpens your programming skills and gives you a much deeper understanding about how computers really work. Further, it gives you a stronger intuition about abstractions, interfaces that hide low-level details to make life easier for high-level users. Abstractions abound in operating systems, from the appearance of near-infinite memory via virtual memory to the illusion of serial execution via threads. But abstraction exists not just in operating systems; it is a universal concept. Programming languages, graphical user interfaces, databases -- these are all instances of abstraction. More generally science itself has the marks of abstraction in its organization into the \"levels\" of physics, chemistry, biology, etc. So take OS. Its workload is heavy but reasonable, especially it seems compared to previous iterations of the class; and you'll learn a lot.",
    "Yes. This course will help other people know more about operating system.",
    "I would recommend it on the basis that OS is an important subject, not on the quality of the course.",
    "I would. Foundamental for understanding system",
    "A must take for any cs student. The assignments were well designed to give an idea about what goes into writing the OS"
   ]
  },
  {
   "question_id": "GS009",
   "question_text": "How did this course deepen your knowledge of your discipline\/profession? To what extent did this course contribute to your dissertation\/research?",
   "comments": [
    "This course introduced me to a lot of central concepts in OS that computer scientists and programmers should probably know. So, to this extent, I am glad I took it."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "522",
  "section": 1
 }
}