{
 "crn_code": "21981",
 "season": "201101",
 "legacy_coursetable_course_id": 9282,
 "enrollment": {
  "enrolled": 60,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    0,
    3,
    17,
    28
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    1,
    2,
    6,
    17,
    22
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    35,
    13
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Not particularly theoretically interesting, the value in the class seems to be derived from the progress you make in coding efficiently. You just spend a lot of time bashing against code, and you get better at it. Just like practicing a musical instrument. Not particularly intellectually stimulating.",
    "Good basic, necessary class for going further in CS. Not hard conceptually but relies a lot on ability to use (or learn) C.",
    "223 is a great class if you're interested in the more practical side of CS. Lots of programming and real-world stuff. If you're a more theoretical person, Id recommend 365, but if youre a CS major, you have to take both anyways. Solid class, not too much work, although getting used to linux and text based coding is kind of jarring if youve only ever used IDEs on your laptop.",
    "I have learned more in this class than in any other course I've taken at Yale. It is extremely rewarding. Take it.",
    "Don't take this class unless you're okay with spending 10-14 hours straight in front of a computer. You will most likely have to do so 6 times in the semester.",
    "You learn programming techniques, and about data structures. It's more work than most other classes you'll take, and you get a lot out of it, plain and simple. Lectures can get boring, but the programming assignments will always keep you on your toes (or pulling your hair out).",
    "You have to love solving problems, if you do this is heaven.",
    "CS 223 is no walk in the park. You will have to put in about 12-15 hours of coding per week, plus some more for thinking about solutions to problems. However, it is definitely well worth it. If you take it, you will not regret it.",
    "If you are interested in becoming a better programmer, this is the course for you...",
    "A difficult, but rewarding introduction to the bedrock of Computer Science. This class is taught very clearly, but will be tough unless you have taken CS201 and \"get\" programming.The median problem set took over 10 hours, and there's a problem set every 1.5 weeks or so. Do your programming early. Do not procrastinate.Grading is on a curve, so don't be alarmed if you get something in the 70s consistently.Eisenstat is very good at fleshing out the topics, and the readings help too.",
    "Take only if you have to or of you came out of the womb speaking in 0's and 1's.Other than that, if you don't understand something, check your pride at the door of the Zoo. Get help and seek it often.",
    "CS223 was quite a grind. I took it C\/D\/F, which was perhaps not the best idea in retrospect, as I ended up procrastinating on the programming problem sets, which do take 15-25 hours on average (there are 6 of them, along with 2-3 written psets, which take 5-10 hours). The class is definitely a good, rigorous introduction to programming though (201 does introduce you to CS topics, but overall doesn't give you that much programming experience), and it definitely helps to have some experience with C or a related language (it was tough for me, having learnt only Scheme in 201).",
    "definitely recommend to anyone looking to practice programming data structures while learning fundamentals about how memory allocation works.",
    "yes. teaches you the cornerstones of advanced programming",
    "Don't do it. Buy Kernighan and Ritchie and teach yourself. Seriously. You will hate this class. Even if you take it credit\/D you'll need to spend hours and hours a week on it anyway.",
    "Whether or not I would recommend this class depends on what type of person you are and what you are looking for. Basically, the pros of the class are that you learn A LOT, it is well-taught and well-designed, and covers important material. You will really progress and feel like you've gained a lot during the semester. On the other hand, the cons of the class are the large amount of time it takes up, the frustratingness of having to figure out a lot of side technical stuff before you can really address the class\/each individual problem set, and the equal frustratingness of the fact that the grading system is pretty intense, and how hard you work really does not correlate with how well you will do. It is really hard to predict how well you will do on anything, since a lot of random things come up in the grading that take you by surprise, and youcan be either lucky or unlucky with those.That said, this is my basic summary of the course. Weigh the pros and cons, think about what you want, and make a decision from there! It certainly is a learning experience.If you are someone who is interested in CompSci but is not a major and feels like C programming would be a valuable skill or is just generally interested in the material, you might want to take the class Credit-D. Even though it will still be a ton of work for a Credit-D class, it takes that extra element of stress and unpredictability out of the class and will assuage the impact of those hours you spend in the zoo trying to figure out some random little bug. That last little bit of perfectionism can really take a toll on you, and Credit-D would give you a break on the stress\/time commitment of that.",
    "Meh. Required for CS major. Programming assignments are time consuming but will force you to learn C.",
    "Take this course! It's a great class with useful content and one of the best professors in the math\/science departments.This class in many ways is two classes, made of the lectures and the problem sets. The lectures teach sorting algorithms, arrays, recursion, linked lists, hashing, and trees. Don't know what these are? You'll find out, and feel like they're almost obvious thanks to Prof. Eisenstat's great lecturing. This part of the course is also great for programming interviews; you can probably get a nice summer internship after this.The other side is the problem sets. They take quite a while, but are nice applications of the class concepts. Most of all, though, they teach you to program, debug, rinse, and repeat. After this, you can do a good amount of CS work without even being close to a CS major. Many on here have complained about the difficulty of the course; though the problem sets take a while, they're a great fit with the course, not impossible, and very FAIRLY-GRADED in the end ;)",
    "intense and worth it.",
    "This is a great class. It is hard, but it is very possible to do well if you put in the work. Eisenstat is great, and willing to help outside of class. I took 223 as a non-CS major and it has gotten me excited to take more CS courses next year. Be warned though, this is a class that is meant to be your priority for the semester.",
    "Good course, you will learn a lot about data structures if you put the time into it and do the problem sets. I took it credit\/d which is probably a good idea if you are not a major and don't mind wasting it on a class for which you will still spend a ton of time doing work.",
    "For the love of god start your psets early and this class will be a breeze. Get help when you need it as there are tons of resources for you. Overall a good class that really improves your programming ability and speed. Learn how to use the debuggers early and the later problem sets will be easy.",
    "great class - you will learn a TON of programming and computer science. The workload \/ difficulty isn't quite as bad as people make it out to be - it isn't nearly as difficult as some of the other hard quant classes at yale",
    "I would definitely recommend this course to anybody who was interested in the material when they took 201. The challenge is really variable at first depending on how much C programming you've been exposed to (you're kinda thrown into the water on the first day and told to swim...), but I think most people who knew nothing about it and were actually interested in the class excelled and learned quite a bit. I came into this class thinking I was a C programmer and by the second or third problem set realized how much I still had to learn. No matter what your experience, you're given all the tools you need and this class will improve your knowledge base.",
    "223 is a lot of work, but very rewarding! Nothing feels as good as figuring out a bug in your code. Eisenstat is a great professor, and not as scary as he seems. He's also very helpful and wants you to do well, so don't be afraid to email him or go see him during office hours. A lot of people take this credit\/D, but I don't know if you'll really get as much out of the course by taking it credit\/D...it's not that interesting a course by itself...it's the time and energy you put in that makes it so rewarding.",
    "Not gonna lie - this class is hard. If you are not a CS major, think hard about taking this class. That said, I think it's really interesting, and helps you become a much better programmer. Also, Professor Eisenstat is fantastic. He really cares about his students, and will really help you if you just go talk to him (something I wish I had done more).",
    "It's a good class but I wouldn't recommend taking it unless you have to for your major since it's so much work.",
    "I would highly recommend CS223 to any student interested in computer science or programming. It will greatly improve your programming skills and confidence.",
    "This class is great. You learn A LOT. It is hard. You will spend a lot of time doing it. Start your problem sets early and you'll spend around 15 hours a problem set-- not too bad, but still time consuming.Professor Eisenstat is one of the most caring professors ever. He devotes a ridiculous amount of time to helping his students learn and going through code with them. TAKE HIM UP ON HIS OFFERS TO HELP.",
    "This class",
    "This class may give you an idea whether or not you want to be a CS major. It is hard. If you think that 201 wasn't that hard, so how could 223 be, you are probably wrong. If you already know C, you will have an advantage in the beginning. Nevertheless, despite the fact that you must learn C yourself, that is not the hard part. The hard part of CS is inventing algorithms -- efficient ways to solve a problem -- that no one will ever teach you. It's basically an IQ test. The grading is problem-set heavy, which are mostly programs which are graded on speed and robustness. Again, it's a hard class that will really make you decide whether CS is what you want to do.",
    "CS223 covers very important algorithms (like searching) and structures (like trees) in great detail, while at the same time giving challenging programming assignments that teach how to effectively organize code. For anyone interested in programming, this class is highly recommended and worth taking.",
    "Take this class. I took this class after never having taken a computer science class before (although I had to do some C programming for an astro class the previous semester), and although the first few programs were a struggle I improved tremendously. If you like programming or find it fascinating this class is for you. I was excited to go to every class - Eisenstat is amazing! - and his lectures are well-planned and humorous. Know you will be challenged, and you will really struggle and spend a lot of time on the problem sets. But in the end it was all worth it!",
    "Time-intensive, but worthwhile. Eisenstat is great (definitely take advantage of his office hours if you ever run into problems).",
    "CPSC 223 is an excellent course. Yes, the course is more work than most but it teaches you to think in an entirely new way. By the time you finish the course, you will know the ins and outs of an entirely new programming language which is very useful, much more about theoretical concepts related to computer science, and most importantly, how to solve very complex and unique problems using algorithms. Many have said that the course is the most work, the hardest, and the best at Yale, and I would agree with that personally.",
    "It's a good class. You learn alot of important topics. It's alot of work, but not quite as scary as I anticipated.",
    "Fundamental. Can be a lot of fun with challenging homework assignments. Be prepared to spend 15-20 hours on each assignment. 6-10 hours is not the rule.",
    "If you want to know how to program, take it. Having only CPSC 201 as my background in comp sci, I did not find the course more difficult than anyone else, as everyone is pretty much immersed in C. The problem sets are certainly long and need to be started well ahead of time, but there is not much more satisfying than completing a 15 hour program and having it pass all the public tests. The data structures part is a great introduction to ways of organizing data you never would have thought of without this course.",
    "This is a very hard class. It is several steps above CS201, and I found myself spending several late nights each week on homework assignments. I would not recommend it to students who have not taken CS201 or students who found CS201 difficult. I also would not recommend it to students who are not planning on using it for their major\/requirements. It is not a random class that just anyone takes, in my opinion. However, if you, like me, are interested in computer science at all, then I would recommend you at least shop it."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "223",
  "section": 1
 }
}