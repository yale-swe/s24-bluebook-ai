{
 "crn_code": "12164",
 "season": "201403",
 "legacy_coursetable_course_id": 28989,
 "enrollment": {
  "enrolled": 131,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    12,
    33,
    42,
    21
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    19,
    31,
    40,
    13,
    6
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    27,
    73
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "I would recommend it for those who have a passion for programming. I would also recommend that they start the course Credit\/D\/Fail.",
    "A course on building an Android app. I took this course as a senior and was one of the class CEOs. I left knowing how to program an app, but much of it I learned on my own. I would recommend this class, but only if you are prepared to learn the material on your own especially how to code an app (this is how it is in real life). You'll also have to balance the psets with the app (the app doesn't replace the pset from previous iterations of this course). If you choose to be a class CEO your workload triples: the buck stops at you. All problems, all crashes, all bugs, you will be responsible for since you cannot switch groups or earn extra points (stocks). I know CEOs who dropped the course from all the stress. But I enjoyed being a CEO since eventually leading a company is my goal, but it was stressful when I receive a text from a team member at midnight that our app had a fatal bug we had left out earlier. I really bonded with my group.",
    "I would recommend CPSC 112 to someone that is willing to put effort in reading and doing exercises in his own. I particularly didn't and at the end of the course I felt overwhelmed. There are only four assignments, a midterm, a final exam, and a final project. The workload is very low, but is highly recommended to do the practice questions in the book, even if they are not required.",
    "If CPSC 112 returns to being a strictly java course, I would definitely recommend it to another student, as I felt that part of the course was very strong and well done. However, if it remains a course which is partially well-taught java and partially self-taught android, I would not recommend it.",
    "CPSC 112 teaches the basics of the Java programming language. In addition, you learn to get to create an Android app from scratch. I would recommend it for dedicated students who have had some programming experience in the past, but haven't taken any AP courses or equivalents in the field. Be warned, it is a lot of work.",
    "I want to learn Java, not try to teach myself how to make an Android app without a solid foundation. If the syllabus still has the group project, don't take it.",
    "Poorly implemented android development curriculum.",
    "It's as much work as you want it to be. Doing Lynda tutorials on android stuff was really fun and instructive. It's certainly gotten me more interested in Android dev. It can be overwhelming because of the android stuff though.",
    "Do not take this class. A very stressful way not to learn as much about intro-coding as you could. The startup emulation was a.) awful, or b.) a negation of the sexy mythos attached to startup culture. Deeply confusing.",
    "Take the class if you want to learn to program and want to fiddle with java. Not worth it if you are just going to go to office hours and get the answers to psets for an easy a",
    "Interesting concept, bad execution. I regret not having taken a higher level CPSC class like 201 despite my non-existent knowledge because I feel as with this class I only learned five tools that can barely be put together to print stuff on a screen.",
    "They definitely need to work on the layout and fix it so it's not so overwhelming. If they don't, I wouldn't take it. I would take Hack Yale or something if you really want to learn how to program in a user-friendly way that doesn't make you want to have a mental breakdown.",
    "I would definitely recommend this class to anyone with an interest in programming. I had zero knowledge of coding coming into Yale but now I am thinking I might want to be a CS major. This class was interesting in that we learned the basics of Java for the first half of the semester before switching over to building android apps. Prof. Abadi did not teach the course very efficiently but this was the first time testing out this curriculum and I have heard great things about him from past classes. Problem sets, while taking about 5-10 hours each, were quite enjoyable and worth the work. Programming's not for everyone, so I would recommend credit\/D'ing this class at the start and then switching to a letter grade once you feel comfortable.",
    "CS 112 is normally a good course from what I've heard, but this semester was a bit out of whack. We were essentially guinea pigs with the implementation of the new project, which lowered the amount of material that we covered in the textbook. The project was an interesting idea, but it honestly was futile since few people in the class were able to code well enough to take advantage of it. The project aspect would probably be better for actual CS major than kids just trying to learn the basics of programming. Overall, the class was good though.",
    "Take this class. Programming is very interesting and useful. Definitely a class that all students should take at Yale (I know a lot of people say that about every class, but computers are fundamental to our society and are only becoming more so, so you might as well know how they work). The app-making experiment was only so successful this semester, but could be incredible after some kinks are worked out.",
    "Take it because it's a pre-requisite for actually good classes. It's main benefit is that it gives you a semester to learn two months' worth of material.",
    "I would recommend it especially if the app-building aspect of the course was not included. If it were included, I would just warn them that they have to spend a ridiculous amount of time working on the class for about 2-3 weeks at the end of the semester.",
    "Definitely do NOT take this class Credit\/D. You'll be more inclined to put in minimal effort, and your grade will probably border the D\/F range because in order to do well in this class, you have to be committed to the programming. In general, I would avoid taking an intro comp sci class before you learn some coding on your own--but push yourself, because that's what you'll have to do in this class. That way you can see if you'll be right for CPSC 112.",
    "Take this course as a freshman or sophomore! It's a lot of work, but the point is that you learn by putting the time in to see what works and what doesn't.",
    "DO NOT TAKE IF THERE IS APP BUILDING AS A PART OF IT Otherwise, Java is really fun to learn! Its an interesting problem to solve and really fun and involving to do and you should totally take it!",
    "This version of CPSC 112 (both learning Java and building Android applications) was interesting in theory but not executed well. I feel that the course took on too much at once, which made it difficult to keep up with both the app project (once it was assigned) and the assignments for the course. The app project also required many extra hours because we had not yet learned the necessary Java skill set to create our desired app (mainly because we were still learning Java). I would not recommend this version of the course but regular CPSC 112.",
    "Do not take this class with Professor Abadi or with the Android aspect. It is disorganized, unhelpful, and the only way to learn the material is to read the book and do the problem sets.",
    "I'm not sure if I would recommend this course over the traditionally taught 112. I think that this course will definitely improve in the coming years, as people who actually want to have more experience in Android app development will take this class (and those that don't will not). This course has a lot of potential.",
    "I would recommend CPSC 112 primarily for those who do not otherwise have time to program. If you have time to program on your own, it would be best to pick up those skills independently, and then proceed to intro comp sci.",
    "Yes, since ultimately I am satisfied with what I learned and happy with the app that I produced. I do wish it had been less of a bumpy ride though.",
    "I would not recommend this class as it currently is being taught. Either the entire class should focus exclusively on programming, or exclusively on app development so it can be taught thoroughly. Combining both for complete beginners is too much to grasp.",
    "I would recommend taking this course only if you want to be exposed to coding as a beginner, and don't particularly want to be a computer science major.",
    "You can learn Java language and produce Android app!",
    "DON'T TAKE THIS CLASS. It's a waste of time.",
    "I think you should definitely take a programming class before you leave yale. This was my first CS class and I absolutely loved it. Highly recommend.",
    "(This is from the Silicon Valley\/Andriod App Guinea Pig Semester)\" CPSC 112 could have been a great class or great classes. Trying to learn Java, do problem sets, and work on an Android app at the same time was exceedingly difficult to the point where I believe the Silicon Valley Simulation could have been it's own class because the overlap was not sufficient. While the Java was manageable and the problem sets were challenging\/fun, researching for hours online for other people's code to borrow and manipulate for my app's code was not as much fun; it all felt rather pointless and rushed (out of the frying pan and closer to the fire with each problem set or app meeting). Let's not mention the aspect of having another student (your CEO) be in charge of the shares that pretty much dictate your grade on the project or the averaging (averaging might be a strong word) together of the app group's final exam grades. In general this class is a good intro class for non-programmers, especially for people who enjoy things like organizing and details. It's a worthwhile QR, especially if they change the way it was run this semester. Also, don't be fooled by Abadi's occasional stutter; he's a brilliant, funny, and approachable professor.",
    "A great class but learning Java is painful. So you've to be ready to spend a lot of time on the psets.",
    "I would not recommend the class. It requires an incredible time commitment. Java is a challenging language, an easier more contemporary language.",
    "Take this class in the spring, without the Android component, at least until the instructors solidify the implementation of this idea. Good introduction to programming if you have no experience. If you do have experience, take 201.",
    "CPSC 112 is a great course if you want some preliminary exposure to programming and app design. I will say that on the 2 focuses of the course, basic Java concepts and introductory app design, you will not learn anything too in-depth on either. It's mainly to get a brief glance at what programming and tech start-ups entail. Don't expect to learn a ton of programming; it's pretty on the surface. The Silicon Valley simulation is shoddy at best. You don't begin app design until 2-3 weeks before the end of the semester which means the \"job market\" and the \"stock market\" are pretty pitifully simulated. Nonetheless, the basics established in this course will most likely transfer over to CPSC 113 where the Silicon Valley simulation will probably be more effective. It's a great course to learn basics and get a taste of programming.",
    "It's not exactly a riveting lecture, but it's fun and useful material. You learn the most by just doing the psets on your own, but I think it is still worthwhile to take it as a class instead of trying to teach yourself if for no other reason than to stay on track and force yourself to do it. The work is fun and it's a pretty good introduction to Java; I'd recommend it.",
    "CPSC 112 is an intro to programming class which covers many basic topics that allow you to write code that is applicable and very easy to write code with. We created many cool programs which allowed us to even apply some of the programs so that we can even use them. We even started creating our own app. I would recommend this class without the app development and only with the app development if changes are made. This class has given me some great knowledge that is great to know in this age of technology and made me think of problem solving in a whole new way which has helped me tremendously.",
    "I would not recommend it to another student.",
    "CPSC 112 is a great class to take to learn about programming. This semester, there was a new structure, however, which I feel detracted from learning about java coding. Although it was wonderful to have the ability to create an app, the knowledge needed to create an app that was worthwhile was beyond the scope of the class. Many students ended up spending more time learning about how to create an android app than understanding the material that was required for the test.",
    "Don't take it if it's the app format.",
    "I would recommend this course to students who want to learn to code. I did, after all, come out of the course with a working knowledge of java and a functional android app.",
    "As everyone will say, it's a lot of work, but actually very accessible, fun and rewarding. I took it for the QR credit and was surprised, as an English major, how naturally Java syntax came to me. Learning a programming language really is a linguistic challenge and not a mathematical one, so if you're a linguistically-minded humanities major, don't be too intimidated to take this class. You come away having learned a lot about a subject that will actually recur daily for you. The new focus on Android seemed frustrating and distracting to me, but I can see that for a CS person looking to actually work in the field, it would be an immensely helpful, novel development for the class to take.",
    "I would recommend the 2nd semester course in a heartbeat because the actual Java coding portion of this class is very fun and I learned a lot. Doing the app project took a lot away from my actual Java coding experience. There are a lot of kinks and specifics that need to be worked out for this course to run smoothly with the app development component.",
    "I chose this class almost flippantly, intending only to use it to satisfy an obscure requirement for the cognitive science major. It ended up being my favorite class this semester. I never thought I would encounter a class where I was actually excited to sit down and figure out the problem sets. And that euphoria of finally figuring a tough problem out and seeing your code compile and actually work? Almost unparalleled. Java is the first programming language I've ever been exposed to (not counting the HTML tutorials on Neopets to spruce up your Neopets profile page, that is) - and I think it's a wonderfully logical and beautiful language for a beginner programmer. Professor Abadi was an engaging and kind lecturer, and the material presented in class complemented the textbook quite well. The second half of the semester was focused on getting into groups to create our own Android app. An awesome idea at the outset, but it definitely hit some roadbumps in its execution. The lack of direction made it difficult for us to jump from idea to implementation, and it took many tireless hours of watching and reading tutorials online before we even knew where to begin. It's definitely a jump to go from the Java we learned in class to all the Android-specific skills we needed to pull off a fully functional project. That said, it was one of the best hands-on learning experiences I have had at Yale, and I would do it again in a heartbeat.",
    "A class that is likely to improve in the future semesters. The organization was a bit off as it was the first time it was taught. It is a really fun class, and it teaches intro to programming- something you need to graduate Yale with a knowledge of!- in an applicable way that gives you the satisfaction of a finished product at the end. Pay attention in the first few lectures (or read the book). Programming is something that takes lots of patience and time, so be prepared....its not just easy, but in terms of a programming class, this is a great intro (its not too difficult either).",
    "Don't take this class unless it is majorly improved. This year was a test run to try to incorporate android app programming and a sort of start up environment into the course. It is a great idea but was implemented horribly. We were left to figure out too much on our own for our android programs. It would have worked out much better if he had apps he would do during lecture from start to finish and have us copy what he does as he does it. This semester we were put into groups that would work on an app together. Unless you had someone in your group who was a good with programming already that could teach everyone else you were going to have a bad time. And we also had very little time to complete our app. We fell really behind schedule. Beware this class. It's a headache.",
    "I would recommend it to another student if it were to have the app component eliminated. All things that were related to simply Java with no Android focus, however, I thought were good and I would recommend to a peer.",
    "If you are from a STEM background, this class is really quite easy. Alot of what you are taught is how to think about problem solving, which if you are already used to solving problems, you will find very intuitive. The class moves slowly, and it's a big lecture. Not a bad class, but not great if you are looking for anything but the most elementary intro to compsci.",
    "I would not recommend CPSC 112 to another student in the current format that it is offered. It fails to adequately teach programming or android app building.",
    "If you're looking for a course that will give you a solid\/beginner understanding of Java programming and give you hands on experience with Android Development programming, then takes this course. You'll get both, and by the end of the course, you'll be able to claim that you are a programmer (a beginner obviously but nonetheless a programmer). That being said, understand that the revamped curriculum for this course is fresh in the sense that you will have to do a LOT of self studying and problem solving. Office hours will become a norm (at least they did for me), and you will find yourself cooperating with your peers on computer issues. (you'll use Eclipse for Java development and GitHub for code cooperation which both can cause headaches...) Despite that however, if you put in the aforementioned work, you should be fine. Although I personally think that many things could have gone better whenever I took the course, I did learn how to code, and I do feel confident in saying that I can develop and Android application(s). It's a valuable skill to have! Good luck!",
    "I would be cautious about taking the class in this new version with the app. It is added stress and I don't think you get as much out of it in terms of gaining an introduction to computer science. You definitely learn a lot if you put the time in but be warned that the problem sets are extremely time consuming and stressful.",
    "This class was badly planned because it was experimental. The group project had hardly anything to do with what was taught in class, giving students a lot of stress to self-teach themselves. The grading was unclear, and students could hardly predict their grade by the time they could choose whether or not to keep their class Credit D\/Fail. The problem sets should have a higher percentage out of the whole grade.",
    "I would recommend this course if a student is looking to get his\/her feet wet with some basic programming. The group project portion of this class was great, but in truth you might have to be willing to teach yourself a bit and be on top of yourself about making tangible progress week to week.",
    "Experimental version: app building project was a huge challenge. The java part of the course was strong, but the project was a bit slapped together. We had WAY too little teaching about android app development, which I found out was a much different skill than java programming. This class in general became very time consuming because of that.",
    "The course is a good intro class if you have no previous Java knowledge. It helps a lot if you actually keep up with reading the book and practicing some of the programs. The most effective way of studying is by practicing and I recommend trying different things to see what works and what doesn't an what type of errors you make, as this is often on the test. I suppose I recommend the course, but consider taking it credit\/d\/fail if you will not be majoring in comp sci.",
    "The course had a good intention, but poor execution. It tried to achieve too much. In terms of covering Java, we did not cover Classes, which is a key concept. In terms of Android, the development environment is largely a mystery. The class was inspirational in the sense that there were occasional talks by those representing the larger tech industry.",
    "CPSC 112 is a basic introduction to computer programming. Java isn't very pretty as far as computing languages go, but it can do pretty much anything you want it to do. Very useful course that I would recommend to anyone.",
    "Cs112 was a challenging, inspiring, intense introduction to programming in the Java language (a great language to start with) and Android development. The class this semester was basically a large-scale experiment, because Professor Abadi was trying to weave in a \"Silicon Valley\" start-up edge to it by having a big android application project as well as fake stocks and other \"start-up\" elements in the class. I definitely respect Abadi a lot for making this leap and taking these risks (taking these kinds of teaching risks is absolutely necessary to move forward in my opinion). That being said, I thought the \"silicon valley\" elements mostly just detracted or distracted students from the class more than it added to the experience. I really enjoyed learning about Java and the creative, problem-solving process behind programming. This was the absolute best part! I also loved managing a team and creating a concrete, android application (though it was unsurprisingly quite basic because of experience and time constraints). The main weaknesses of the course were organizational issues - communication about the trajectory of the course was often very unclear and it felt like Professor Abadi was planning things too much on the fly. In its current form, I would generally recommend this course to sophomores through seniors who are inherently adventurous and willing to take the good with the bad, or to freshmen who are especially adventurous. Overall, you have to be in it to really learn about programming and above all else you can't be afraid to teach yourself things! (Which is an indispensable skill regardless of what major\/life path you choose anyways!)",
    "I would say its a class you should take if you want to know if you like to program.",
    "Yes. It is a good class.",
    "This is a generally fun and useful class. I personally enjoyed the group app project and found it a meaningful experience. The workload was quite low towards the beginning of semester, but quickly ramped up towards the deadline of the final project.",
    "Professor Abadi took a risk with this course, but I don't think it paid off. Asking students to build an app in an intro programming class was a bit too much, and I feel we would have been better served by the standard, if duller, version of the class.That said, the assignments were interesting, and the tests were fair. The guest lectures, including one from the Rap Genius founders, were a treat",
    "Yes, it was a great class to learn the basics of programming.",
    "If you take the version of CPSC 112 that includes the group project (Android App development), be prepared to work very hard. It was extremely rewarding at the end, but the process itself demands patience and grit.",
    "This class introduces the basics and also presents an interesting project to culminate all that you have learned and also allowing you to explore a bit on your own. I would just because it's interesting but also very unique because of the project.",
    "Because this semester of CPSC 112 was basically experiment using an entrepreneurial approach, I feel that it had many flaws that made the course slow and not as intensive. For one, the app building project that was a good portion of the grade failed to test the skills that had actually been emphasized through out the course. I would not recommend this course to somebody else, but considering that I have not experienced the conventional way CPSC 112 is usually taught, I cannot really speak on the matter.",
    "This class was a giant experiment this year in incorporating app development into intro programming, and everyone knew this. I decided that the group app development project would have a 70% chance of falling through and not really accomplishing much, and I think that this was true for most groups. However, if Abadi and his teaching staff rework the class a bit more I do believe that a great intro to Java and app development 112 can be created. It just was not done this semester."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "112",
  "section": 1
 }
}