{
 "crn_code": "21500",
 "season": "201401",
 "legacy_coursetable_course_id": 26378,
 "enrollment": {
  "enrolled": 142,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    0,
    3,
    30,
    76
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    2,
    2,
    17,
    54,
    34
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    80,
    29
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Eisenstat is a very clear, cogent instructor. My only complaint is that sometimes his lectures went a bit too quickly. Sometimes all I needed was a simple repeating of a thought, but his lectures are very unidirectional; once you miss something, you won't hear it again. Most of the learning in this course happens on one's own time; you don't really understand the concepts presented in class until you think about them and work at them in your own time. In terms of programming, I feel like my coding level has more than doubled after this semester. The PSETs are such that you need to improve your efficiency as well as adhere to best practices, in order to do well. Most importantly, since the PSETs are so hard, you get practice in breaking apart large problems into smaller ones, identifying patterns to abstract in your code. You also get tons of practice (although very painful practice) debugging your code. The course is the most difficult one I have taken at Yale so far, but you will grow immensely as a programmer and computer science major.",
    "Problem sets (~66 percent of grade) take up most of your time. You learn by doing and asking for help. Annoying at times but rewarding when you solve them. The stuff that intimidates you at the beginning of the semester will not intimidate you by the end. Meanwhile, exams (~33 percent of grade) are based solely off the lectures and cover conceptual\/algorithm topics. YOU WILL GET AN A ON THOSE IF YOU GO TO CLASS AND PAY ATTENTION. They're not nearly as hard as I hear the exams in 365 are.",
    "Yes, but its not for the light-hearted. You'll either immerse into computer science or you won't.",
    "Ah, CS223. If you're a CS major you'll have to take it, so just do it and get it over with. It's not like you have a choice. If you're not a CS major, you should probably only take it if you really like CS and can find some masochistic pleasure from trawling through the problem sets. P-sets from this class were the single biggest source of stress in my entire semester and took so much time (average of 15 - 20 hours per set). If you know C already, it will help a LOT. I did not know C or anything similar to it before taking this class, and that made it very difficult to catch up. Office hours are abundant and VERY helpful. The peer tutors are the reason I survived this course. Go to all of the office hours you can. And for the love of god, start the p-sets early. You may think, \"No, I'm a pretty good programmer, I can wait until the last week to do this assignment.\" Sorry buddy, but you're wrong. It took me until the end of the semester to realize this, and it made the final p-sets SO much easier and less stressful when I started them the full two weeks in advance. Supposedly I am now a much better programmer for having taken this course (and I believe it) but it was still stressful. Was it worth it? Probably. But it does get frustrating, especially when there's that section of the class made up of very experienced programmers who like to talk about how easy the class is for them. If you fall into that section, don't be a jerk to the people who don't know this stuff already. If you, like me, have very little experience, you're not alone in the class and you can get through it. Talk to the peer tutors and ask questions.",
    "I would take anything by Stan Eisenstat after this class, even if it means I have to get terrible grades. 223 is a course that teaches, challenges, and at the end of it all you can look back and really see how far you've come. I felt that I've become a better coder, and I am much more acquainted with thinking about computational complexity after this class. To the point where anyone tells me an algorithm and the first thing I think of is how long it takes to execute. It almost feels like a transformation.",
    "If you want to learn C, learn C and then take this course, not the other way around. I felt as if there was no real infrastructure for getting help on the problemsets, going to office hours just gave me the impression that Stan wanted me to drop the course. It's easy to spend 15-20 hours a week on this course, which I just didn't have the time for. If you're not planning on majoring in Computer Science, stay away.",
    "I found the programming assignments interesting and the exams\/non-programming assignments relatively straight-forward. The lectures were less inspiring. If the first pset takes you more than 15 or 20 hours, bail out, you'll be miserable. Otherwise, you'll have a decent experience.",
    "This is a rewarding class in that by the end, you will feel that the hours you put into the assignments really have made you a better programmer. I would recommend this class if you are a CS major. That said, I would not recommend this class for non-majors unless you have a ton of time that you want to spend agonizing over a computer screen. Even if you take this class Cr\/D\/Fail, expect to spend many hours on this class.",
    "Its reputation speaks for itself.",
    "(NON CS MAJOR) This is the best class I have taken at yale. you should take it. If you don't take it, it's because you think you have something better to do with your time than program, and you're wrong. There is no class where you learn such beautiful concepts, the syllabus is so organized, what you learn is so useful, and what you learn from psets actually helps you understand the data strctures. Stan is incredibly organized, and goes slowly enough that you can actually follow his work. I only missed one lecture, and dont regret my attendance at all. Some peers were able to do well without attending lecture, which frustrates me, but whatever, I loved it. Also loved the psets! And the Exams! great class. Only small thing is wish we had access to more practice problems. I am so grateful to Stan for making this class such a pleasure. Also, do the PSETS early.",
    "I would definitely recommend CPSC223 to non-majors (and of course majors) with significant interest in practical applications of computer science. The course is very well-taught and the workload is definitely manageable IF YOU START HW EARLY. Some assignments will take you 15 hours over the course of 1.5 weeks which is manageable hour-wise. If you start late, most likely, the assignments will take much longer. Almost all assignments have pseudocode for the algorithm, so difficulty in coding primarily relates to implementation. Overall, the assignments range from 8-15 hours (from the perspective of someone who has only taken CPSC112 and no prior experience in C) and the tests are very manageable. Since you are allowed to resubmit homework, your grade pretty much reflects time invested in this class. Stan is a clear lecturer who covers very important and interesting topics in programming. If you are interested in data structures, you will enjoy this class and\/or learn a lot.",
    "A classic. Probably one of my favorite courses at Yale. You'll learn a lot, code a lot, and have fun while doing it (fair warning: it won't feel like fun when you can't find some minor bug that's destroying your code, but it'll be that much more satisfying when you finally do find it). Expect to spend on average around 12 hrs\/week on this course. The biweekly problem sets took me on average 18-20 hrs to complete, and the 2 non-programming assignments took around 8-10 hrs each. But honestly, even when I did finish a programming assignment I would keep work on debugging and testing it because I didn't want to work on anything else.",
    "If you're a CS major, you have to take it. It's going to be hard and take a lot of time, but it's fine. It's worth it. Honestly, though, if you don't have to take it for a major, you might want to take it credit\/D.",
    "V hard",
    "CPSC 223 was a very challenging course. I didn't have any background in programming in C, and the beginning of the semester had a sharp learning curve. That being said, I learned a ton in this course. It was very well taught and Professor Eisenstat made himself available to his students. The class was worth it.",
    "I recommend this class to anyone.",
    "The course was a fantastic experience. I learned so much about data structures and algorithms and have transformed as a programmer. The workload is very heavy, but, as long as you start early and stay on top of it, it is doable. Be prepared to spend 10-15 hours on each problem set. Professor Eisenstat is a fantastic instructor; he's very accessible and does a great job of explaining complicated topics.",
    "Tough class: you must be willing to put the time in, period. Some people finish p-sets in 10 hours. Other people like me finish in 30 hours. Don't compare yourself to others, just worry about your own learning and you'll get a lot out of it.",
    "If you want to build programming skills you'll have to take it eventually. Don't be intimidated. It's not as bad as people make it out to be (coming from someone with no prior experience in C). The psets took me on average 15 hours (with 2 weeks to do each). Tests are tricky, but not unreasonable. Tend to be very similar to practice tests.",
    "It's a lot of work, but will always be the work that you most enjoy doing.",
    "I think this is a great course and very comprehensive. You learn the important foundational topics of computer science (sorting, algorithms, hashing, heaps, trees). Professor Eisenstat is a genius and also very nice and willing to help, even though he may seem intimidating at first. The problems are a lot of work but I started them all VERY early and so was not as stressed - I always managed to finish them a couple days early. At the latest, try to crank out the whole thing the weekend before it's due, that way any last things needing tidying up can be solved during the week at office hours and you can think of private edge cases.",
    "It's a lot of work but you get a lot out of it. Really teaches you how to be a better programmer and computer scientist.",
    "Need it for your major or want to learn to program then take it! But a lot of work.",
    "Take this course if you want a LOT of programing work or if you are already an experienced programmer. Do not presume you will find just attending lectures and reading the materials required sufficient unless you have a firm grasp on the language in which you will be programing. Utilize open courses online from other universities to supplement your classes unless you already have a baseline understanding of this material going in. The professor explains everything...just not at a pace that those unfamiliar will be able to understand the first time around!",
    "Yes, this is a good course to take. It's also required for CS majors. It is very intense, but perhaps for the wrong reasons. The programs you write will be cool by themselves, were they not presented as dry pieces of meat ready for dissection, as all joy out of programming is sucked out by the specs and similarly not-engrossing lectures.",
    "Yes. One of hardest, most time-consuming classes at Yale. But yes take it. Expect to spend ~12-15 hours per pset, although mileage varies depending on your C programming ability. 6 programming psets, 2 nonprogramming ones, 2 tests. You'll learn a lot and give up a hunk of your soul while you're at it...",
    "If you are a computer science major this is a requirement. Stan has taught this class many times and he usually explains things well. He also does a great job answering emails, especially since this is a huge class. The programming assignments are not necessarily difficult but it is very hard to get all the edge cases right, and there will be quite a few of those in the final testing script.",
    "I came into this class hoping to learn a lot about programming, and I did. Of the classes I have taken at Yale, this is the class that has been the most dedicated to helping, and making, you learn the material. Professor Eisenstat created problem sets that really forced me to thoroughly understand the material. In addition, the lectures were clean, precise, easy to follow, and contained plenty of examples (although they could be dry occasionally). Finally, professor Eisenstat clearly wanted to help people do well in the class and understand the concepts. He immediately responded to e-mails, consistently responded to news-group postings, had tons of TA office hours, and hosted many office hours himself. As I'm sure many people will mention, this class is a ton of work. My workload clearly fluctuated with the problem sets, when I didn't have a problem set due it felt like I didn't even have homework. If you start early and go to office hours, however, the work is manageable. And, I really wanted to learn a lot about programming, so I was willing to dedicate a lot of my schedule to this course.",
    "It's a terribly taught harrowing ordeal if you've never had any experience with this stuff. This course explains why Yale is lagging behind so terribly in STEM. It would be awesome if most Yale students knew this stuff (and went into programming rather than finance), but until this class gets a complete makeover, I don't see that happening.",
    "Very difficult but excellent course.",
    "Definitely take it, but be prepared to put a lot of work in it.",
    "Absolutely take this course if you're interested in computer science. You'll come out of it knowing so much (and probably knowing whether the major\/field is right for you or not).",
    "Take it! You have to if you are a computer science major. If you're not a computer science major, it's still an interesting class and will teach you the basics of C.",
    "A very challenging course that one should take if he\/she is fairly certain to become a CS major.",
    "223 is an amazing class. Challenging but certainly doable--I had not done programming before Yale and found 223 to be a step up from 112 and 201, but definitely manageable. You learn so much, such that the effort you put in becomes well worth it at the end. Learning C\/linux beforehand is helpful for the first assignment, but not at all necessary. The weight of the class was on the programming assignments, so while the exams were difficult they were not overly stressful. Easily one of my favorite Yale classes so far, a definite must-take.",
    "This is a difficult but rewarding class. Sometimes, we glossed over details that made lecture hard to follow, so I'd have to resort to the Internet to catch up. The PSETs were challenging and required lots of thought and time. Starting early was key to doing well. Tests consisted of problem-solving and computations regarding topics covered in lecture. If you want to come out a better computer scientist and programmer, take it. If you plan to not work hard, please don't put yourself through this.",
    "CPSC 223 is a class that covers the basics of data structures and programming in C. If you want to work as a programmer after graduation, I definitely recommend it. It contains a lot of essential material for a programmer to know. I would recommend it if you have the time. It takes about 10 hours a week.",
    "It's a lot of work, but if you're willing to put in the time it's well worth it.",
    "This class really is not overwhelming if you start assignments early. It is a great introduction to c and data structures - you'll know enough for a tech job after taking it. I recommend it highly as long as you make room in your schedule and start assignments early.",
    "CPSC 223 is a good course. While I did not enjoy the lectures, I did enjoy the programming assignments. For non-CS majors like myself, I would recommend this course if you enjoy programming. You will spend a lot of your time this semester working on the programming assignments. I spent more time on this class than any other I have taken before at Yale, but I loved doing it. I probably spent 16-20 hours on average on the 6 programming assignments and 8-10 hours on average on the 2 non-programming assignments. If you have never coded in C before, there is a steep learning curve with the first assignment, but don't get discouraged. Take this class if you want to improve as a programmer and learn C.",
    "Prepare your schedule for this course. It's tough and will consume a lot of your time. However, if you take his tips to heart (START EARLY) and ask lots of questions, in class or at office hours, you will do well. For all of the problem sets I started early, I noticed a marked improvement in my score -- why? Just having the time to think about my current issues while not actively banging my head against the keyboard was helpful, as well as simply not burning myself out in marathon programming sessions. Some people will be naturally smarter than you, but don't be dismayed by that. This is a great class, you'll learn a lot, and don't be scared by Stan. Under the gruff exterior, he just wants you to succeed.",
    "There are only six programming assignments. You only really get a hang of the class by the 3rd one and you already feel like you lost half the semester. Don't do this - no more advice other than to start the programming assignments early. Stan is the most helpful, emails you immediately back, but only when it isn't the night before assignments are due.",
    "Its a lot of work but a very good class. Most of you grade is based on homework assignments, though there are two midterms. They key to succeeding on the homework is to start early and pay close attention to detail. From my experience, the people who struggle the most in class aren't the people with little programming experience (never having coded in C doesn't really put you at a disadvantage) but the people with lots of experience that think they can do the whole assignment in one night.",
    "Leave all assumptions and work habits you developed from CPSC 201 behind. This class is a whole different game. The time commitment is significantly greater, it can at times be much more stressful, but I found the material and problems sets to be far more interesting and worth my time. You also acquire a truly solid understanding of the C language, which I feel is critical for any student of Computer Science. I think this course is double if you find the lectures interesting and are passionate about the subject. There is one bit of advice that I wish had been drilled in my head much earlier this semester: START EARLY. Start every assignment much earlier than you think you should. You\u2019re given two weeks for each programming assignment. If you do half of the work in each of the weeks, instead of having an on week and an off week, this class turns from an insurmountable task to something quite doable. On a closing note, I would like to say that CPSC 223 was the most fulfilling class I took this semester. I recommend it to the right kind of student.",
    "Take CS 223 with Stan if you can. It will be way more work than Aspenes, and you may hate that decision at some point during PSET 2 or 3, but you will get so much more out of it. Try to read some of K&P before the semester starts to learn some C, if you don't know it already (I didn't) and definitely start the PSETs early. Panic mode helps finish assignments in other classes, but it doesn't help with coding. Trust me. You will learn so much in this class, if you're willing to put in 20-30 hours per PSET. Good luck.",
    "CPSC 223 is a great course if you're willing to dedicate a lot of time, and have an interest in computer science. If you don't enjoy writing code, this class will be a real slog. Like others have said, you will spend a lot of time on this course, likely more than any of your other classes, so take it with a not too demanding schedule if possible. Be aware that many people will already know C, the language this course ask you to learn in the first couple of weeks, so many have a leg up to begin with. That said, though I had to learn C from scratch and I was probably among those who took the most time to complete assignments, I enjoyed the class a lot, and learned a ton. I now feel just as, if not more, comfortable with C as any language I'd learned before.",
    "I would recommend it but expect a lot of work.",
    "I learned a lot in this course, so it was very good overall. Of course, it's terrifyingly difficult and requires a ton of work, and that can probably never change. All the topics were interesting enough to stay awake in class for. Expect very long PSETs. There will always be people in the class who get full scores on everything with less than 8 hours of work, but the majority of students spend 15-25 hours on each PSET, sometimes more. If you get a bad grade on the first one and you still want to stay in the class, the only thing you can do is dedicate more time each week to starting the PSET early and to go to the peer tutors for help. Lots of effort and time are expected. Only take this class if you're serious about computer science.",
    "CS 223 is a crash course in C, sprinkled with the basic data structures and algorithms that are most common in practice. I would definitely recommend this class to anyone trying to be a better programmer, or trying to work at a software company.",
    "I would recommend it to a fellow student. It tests your mind and your wit when doing programs and it is a more realistic introduction to computer science than 112.",
    "Take it if you're a CS major since it's required. Also take it if you want to practice programming algorithms. You'll know C decently well after completing it.",
    "It's a huge time suck, but I loved it. I learned a TON, and it was super interesting.",
    "This is a great class if you want to get more into programming as a career\/major in cs. You will learn a lot, and with Stan, this will not bee that easy of a course.",
    "Take it if you like programming. Otherwise, don't *shrugs. The lectures can be a bit slow for students already experienced in comp sci\/programming, but you do get a lot just from doing the programming assignments. If you already know your data structures, you don't need to take this course though (AVL trees, B trees, heaps, hash tables, etc.)",
    "An exceptionally worthwhile class. Stan is a memorable teacher, who has high expectations for you, but definitely gives you the necessary information to succeed. If you haven't programmed much before, this will be challenging. Time taken on a given p-set ranged among students from 4 to 40 hours.",
    "This is a very good, very time intensive course. If you want to know about data structures and programing techniques, you will find this course interesting and get a lot out of it. If you don't, you will find it boring, but why are you looking at this course anyway. For the love of all that you hold dear, start the problem sets early. Like, they day after they are assigned. Running into a problem the week before it's due is a fun little puzzle that gives you rewarding satisfaction when you solve it. The same problem the day before the pset is due is a nightmare of stress, angst, and self-hatred. Be nice to yourself and work ahead.",
    "If you have a head for CS, this class will be satisfying and interesting. If you enjoy programming, AND you enjoy learning how to program, AND you get into good habits at the start of the course, then the assignments will not be too much trouble. The course doesn't exactly teach good habits and good programming practices so much as it heavily rewards them, so if you make the effort to do things right the first time, you'll get a lot out of the class. Stan's lectures can be a little dry, but they are still worth paying attention to, even though the assignments are the bulk of the course. Stan himself is a bit unfriendly as a professor, but he will still answer any questions in a helpful manner.",
    "This is an amazing course. I highly recommend it to anyone who is seriously interested in computer science, even if you do not plan on majoring in it. There is a ton of work, so take it during a semester when you don't have much else on your plate. It's very clear that Prof. Eisenstat cares a lot about making the course both difficult and extremely fulfilling. If you're good at working through things on your own without too much direct help, you should be totally fine. People are not joking when they say that psets take 10-20 hours (there are 6), allow that much time and more to do them well.",
    "Fun. Until the stress overpowers you or you get behind. Then it's still fun, but also terrible. Very good course. Very well structured, I felt like I was learning a lot. Very hard though. Don't take it unless you expect this class to be your life for the semester.",
    "CPSC 223 is a rather frustrating course. Having entered the class already knowing all the algorithms and data structures covered, I still spent a lot of time on and made a lot of mistakes on the assignments. Lessons are of varying quality - some are straightforward, others rather convoluted - but I had trouble being interested in any of them. The programming assignments were useful, but the ambiguity of the specifications made them quite obnoxious to complete. The only valuable information I learned from this class was how to program in C. For a non-CS major, this class was not very rewarding for me and so I would not recommend it.",
    "A huge amount of work, but you learn a ton. Go to office hours, allocate at least a couple days for each pset and get to know the TAs.",
    "I sadistically think that everyone should have to take this class! You will seldom think harder or read more closely.",
    "223 is a challenging but rewarding course.",
    "Yes I would highly recommend 223 to another student. If you have ever liked problem-solving\/programming, you'll mostly enjoy this class. Yes the psets take a LONG time, but start early and they're not terrible. The class is interesting, the psets are engaging, you'll probably be glad you took it at the end.",
    "Learn C the summer beforehand (get yourself familiar with \"Intro to C Programming\". You can't really do anything beforehand to prepare for the course. Start every pset early, cuz then you have more time for edge cases. Also the week there is a pset due office hours is full and you won't get any help. It's good to have a study group to talk about the concepts of the pset and what the best way is to approach it. It's easy to not pay attention in class, but try your best to! It might seem boring and unnecessary but it's important for the two exams.",
    "Do not tread lightly into this course. Only take it if you really know why you are. It is A LOT of work, and it is easy to lose sight of why you have spent the last 8 hours in front of your computer and feel like you've accomplished nothing. I shed tears multiple times over this course, and those were some of the only times I cried all semester. If you really have a knack for quantitative reasoning and\/or have a lot of previous programming experience, you'll be at an advantage. If you're taking it because you were good at high school math and didn't hate 201 and hear that a computer science major will get you a job, please reconsider.",
    "Absolutely take this class, but make time for it. Start your problem sets the day they are assigned. I took this course credit d second semester senior year and it was my absolutely favorite class that I have taken at Yale. It was incredibly challenging, but the amount that I learned with each problem set was incredible. I wish I had another semester so that I could take 323.",
    "I felt the curriculum of this course was well-structured in terms of the progression of topics; I learned a *LOT* over the course of the semester. Each lecture covered a large amount of material, but it wasn't too much. I didn't always understand the more complicated concepts at the time I took notes on them, but re-reading the notes, and especially doing the homework assignments and supplementary readings (definitely do the reading!!), generally made everything clear. Professor Eisenstat is a very good teacher, and of course he really knows his stuff. He doesn't seem to appreciate \"silly\" questions very much, but it certainly teaches students to think a little more about what they are asking. (He's probably heard a lot of the same questions many, many times.) He's also a very fair grader, and generous with partial credit on exams. The peer tutors were also very helpful, and I will be forever grateful for their patience and willingness to help at late hours of the night. I felt I had a slightly stronger grasp on concepts from the first half of the semester than from the second, but that could be just because I had more time to apply them to subsequent topics in the course. If I could change one thing about the course, I would make the (two) exam periods fifteen minutes to half an hour longer, as I and, I felt, many of my classmates were still writing frantically when time was called.",
    "Don't be scared by what you hear. This is a tough, but doable class. Work hard, start early, go to lectures and office hours and you'll be fine.",
    "This is a required course for majors, but even if you are not a major, consider taking it if you want to really understand what computer science is all about or you want to become a much better programmer. That said, it is a very challenging course, make room in your schedule for this to be your most consuming course.",
    "This class is very tough but is a necessary requirement to completing the computer science major. I would definitely find a group of individuals you can bounce ideas off of if you decide to take this class. And go to office hours a lot. The class forces you to learn a lot about data structures and C the language. It will be both stressful and tiring. I was forced to stay up late many a time to finish these problem sets and they make your entire week a lot more hectic. So be ready for that.",
    "I took this CrDF all the way through. Very useful class that basically sets you up for most programming interviews. I had limited formal programming experience coming in so its possible to make it without that beforehand. P-sets are 20 hours a week.",
    "If you want to be a computer science major, you already know you have to take this class. Otherwise, I'm not sure it's worth the work load. It doesn't actually teach any particularly practical skills.",
    "You'll have a great time, provided that you begin the assignments the day they come out and pay attention in lecture. After taking the course, you feel like you really know how to program \u2013 even if you're already experienced.",
    "A great introduction to professional programming. A must take.",
    "I think the difficulty of this class is inversely proportional with your skill as a programmer, and that there's a big gap between \"knowing how to program\" and being \"a programmer\". If you're on one side of the gap, it may be extremely challenging - however, if you're on the other, the class is decently interesting and you get a lot of useful programming practice. Also, starting the assignments early helps a lot, though the office hours are often so crowded that you may get helped little if at all."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "223",
  "section": 1
 }
}