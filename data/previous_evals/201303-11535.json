{
 "crn_code": "11535",
 "season": "201303",
 "legacy_coursetable_course_id": 23705,
 "enrollment": {
  "enrolled": 88,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    1,
    0,
    10,
    57
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    2,
    12,
    28,
    26
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    64,
    3
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "I would recommend CPSC 323 to a fellow student, but I would warn them that it would be an extremely challenging experience. The student would get a nice idea of how computers operate on a very low and fundamental level.",
    "Absolutely take this class. There is a pretty good chance that you don't have a choice about whether to take this class, but the rumors are true: this class is a TON of work, but very rewarding. I learned more in this class than any other at Yale. Professor Eisenstat and the TAs are absolutely incredible and always willing to help you\/look at your code. But take an easier schedule when you take this; it can be a time-sink the week psets are due.",
    "I would only recommend this course to another student if said student had to take it for the CS major, or the CS requirement of the Applied Math major. Otherwise, the workload doesn't really justify it.",
    "Stans the man. You will learn a ton.",
    "This class is not as bad as you think it is. Prof. Eisenstat is one of the best of the bunch and is kind and considerate when you need help. More than any other class at Yale, I walked away from this clsas feeling I learned something important. Take this.",
    "An amazing course, but its reputation is definitely warranted. The class itself is a high-level overview of the lowest-level parts of a computer system. The major topics this year included binary, data compression (of course!), error prevention and checking techniques, RAID, caching, virtual memory, how processes work, concurrency and a few other similar topics.The assignments are the gems of the class though. Each one challenges you and your ability enough that you can still feel yourself getting better and better at C. The second one is, of course, LZW, but the most satisfying and difficult project is the three assignments you spend implementing a Bsh or Csh-like shell.I would recommend taking this course if you are fully prepared for it to be at least two classes worth of work. It's a wild ride.",
    "I got an A in CPSC 223, and the class took me about sixteen hours per week (PSets + going to class + studying for exams). It was the most time-intensive class I have taken at Yale.",
    "Take it!!! Obviously, be ready for a lot of work, but really the 223 to 323 transition is not as big a shock as 112 to 201 or even 201 to 223. It'll be great.",
    "Everyone majoring in CS has to take it, and I think that's a good idea. I would recommend this to people outside CS only if they were really set on learning as much as possible about programming, as the workload is enormous.",
    "Definitely a must take! Very interesting. Challenging but fulfilling.",
    "A lot of work, but rewarding. You get what you put in",
    "If you're thinking about taking 323 you probably know what you're getting into. Its a massive amount of work - by the end you'll be celebrating problem sets that are \"only 20 hours\" - but it's not too much more than 223 so if you made it through that you'll be fine. The material in class is pretty boring, occasionally you will have a moment where you finally understand something about how computers work and that's exciting but besides that it's not very interesting. At the end of the day though, after putting that much work into the problem sets you WILL be a much better programmer and you WILL understand how computers work much better than when you go in.",
    "Yes, take this course if you're serious about Computer Science. You will become extremely good at C programming and will obviously learn a lot of about Systems and Computer Architecture. When you take this course, make sure your other workload is low as this course will take up a bulk of your time.",
    "if you have to take it, do take it. if not, be aware, it's a lot of work",
    "Required for those in the major, not recommended for those outside of the major.",
    "323 is an excellent bread-and-butter course in basic systems programming. If you're thinking about taking this class, you've probably already taken CPSC223- 323 is more of the same, which is good in my opinion. Eisenstat is an excellent teacher and incredibly responsive via email. The problem sets in 323 are perhaps not as inspiring as those in 223, but the class makes up for it by conveying a lot of crucial, fundamental knowledge about computing systems. The two tests are very manageable (and count for very little); the focus of the class is on the problem sets.",
    "CPSC 323 is hard. Know what you are getting yourself into. Plan your course schedule accordingly.",
    "If you're a CS major, you have to take it. If not, ask one of your CS major friends about it. It's very challenging, but provides a great sense of accomplishment to survivors.",
    "CPSC 323 is a great class on system side programming and a good introduction into computer architecture. The class does live up to its reputation so make sure to dedicate enough time and effort to push through the class. If you are considering taking CPSC 323, you are likely trying to be a CS major and this is a class you definitely should take. Although the problem sets are very difficult and time consuming, you end up learning a lot through the process. Lectures are drybut contain interesting material. Exams are all about the lectures and can definitely be a challenge. Make sure you prepare for the exams by making sure all the concepts are clear in your head. Difficult course but worth it. LZW and BSHELL and the assignments to be wary of.",
    "CPSC 323 is a fantastic course. If you're a CS major you have to take it anyway, but if you're a non-CS major and interested in becoming a better programmer or learning how computers work, I would strongly recommend it. It is definitely a lot of work -- I would estimate about 30-40% more than 223 w\/ Eisenstat -- but the assignments are all carefully designed to teach specific skills, and doing them will make you a much better programmer. As long as you start the assignments early, the class is manageable.",
    "CPSC 323 covers some absolutely fascinating material and really develops your understanding of software and basic underlying computer architecture. It also provides you with a jargon with which to understand many more advanced books that discuss advanced computing. The assignments were also fantastic (albeit time consuming) and really ensured a full understanding of some basic concepts that were taught, in particular about processes and data compression. The lectures can be somewhat dull and should be supplemented with online tutorials and additional reading in order to ensure a full grasp on the material. If you find a certain concept confusing in lecture, take advantage of Professor Eisenstat's office hours - in my experience he tends to explain concepts better in a one-on-one environment. If you think computers are awesome and you want to learn about how they really work under the hood, take it. If you are packing a heavy course load this term and-or are not looking for a heavy workload, avoid.",
    "CS 323 has a lot of buzz around it but it was actually my favorite class that I've taken at Yale. Professor Eisenstat is a great lecturer who makes inherently dry material interesting and is extremely helpful on programming assignments if you seek him out early on. The programming assignments were hard and took a lot of time, but I went in prepared with that expectation and in the end I was able to manage it fairly well. It is absolutely crucial that you start the programming assignments early and work on them consistently, because it sucks to lose points for lateness because you tried to do something last minute. This class also taught me a lot about testing. Take the time early on to automate testing your program, submitting your homework, etc. and you will save tons of time and get better grades in the long run.",
    "If you're comp sci, you have to take this class, and if you've chosen the right major for yourself, you'll definitely enjoy it. It's fun programming for school, what's not to like.If you're not a comp sci major, I can't see cr\/d working out because you really have to dedicate a large amount of time to learning the material and becoming a better coder. THe psets are such that you can't even put in 90% of the work to get 90% of the points. Anything less than 100% of your effort will end up backfiring.The feeling of passing all public tests is unrivaled at Yale.",
    "Take it only if you are ready to challenge yourself.",
    "If you're curious about computer architecture and memory, or about the functions in C that run and manage processes, you'll enjoy what you're learning here and will walk out impressed with what you've done.Just start early.",
    "323 is an excellent course. Stan puts in so much effort to making the assignments well thought out and worthwhile. You will come out of 323 a much stronger programmer and you will have a strong understanding of the material. As always with Stan classes, start EXTREMELY early on the psets, it is always better to have a couple days of edge casing, rather than going down to the wire on passing all of the public tests. Don't hesitate to email Stan or go to his office hours; despite being a little intimidating in class (and in person), he truly wants you to do well, and is very nice and helpful when you ask questions, even if they wind up being sort of dumb. He understands that what he is asking of you is difficult, and he is a great resource for help throughout the class.",
    "This is not a class to be taken lightly. The problem sets can be real nightmares, but if you start on them early enough (do NOT make the mistake of waiting until the last minute) you will find them manageably challenging and tremendously rewarding to finish.",
    "If you're a computer science major, I would definitely recommend this class. It's not as bad as everyone says, and I only found it to be slightly more work than 223. That begin said, you should be prepared to spend about 15 to 20 hours a week on the problem sets, and I wouldn't recommend taking it with any other major coding classes. The material is interesting and Stan is a great professor. All around definitely an extremely beneficial class for all CS majors.",
    "If you are a cs major you have to take the course, buckle down its going to be a lot of work. You will learn a lot and spend 10 hours a week on programing assignments. Start assignments early use the debugger and ask for help when you get stuck.",
    "It's a lot of work, but worth it. If you're not a CS major, I'd take it knowing it's going to be a done of work (and that the rest of the major isn't that hard)",
    "A very good class. Lots of work and frustrating at times but definitely worth taking.",
    "An extremely hard class. Get started early on psets and go to office hours. You'll learn that no, you're not actually good at programming.",
    "If you have 30 hours a week and are very interested in the topics from 223, take the course. You will become a C genie and work on scripting programs as well that will allow you to take any job in computer science.",
    "Great class. The C problem sets took 25-35 hours each. The scripting assignments took around 10. Two weeks per longer assignment. The tests are about computer architecture so there's no coding (which I liked). I learned a ton about computers and I learned how to program much better! Totally take it if this is what you want.",
    "Yes! 323 is great class and is honestly not as hard as some people make it out to be. Looking back, here are some of the most important things people should know when considering whether to take it. 223 is a prerequisite for this class in the strictest sense; you know how often 'prereqs' for classes aren't really strict or necessary? LOL. In223 with Eisenstat, you learn how to put on the tutu, bind your little ballet shoes tightly upon your feet, and by the end even rise onto your toes in the practice room. In 323, the velvet curtain swings open, and you must dance- dance freely, gliding across the stage, twirling in a dazzling swan lake that leaves the audience in awe. If you can't tie your ballet shoes, you're in for trouble. However, if you did well in 223 and understood\/remember everything well, you will be fine in 323. The psets are fun, often challenging but you learn a lot from them! If you 1) start early, 2) read and think about the spec carefully before starting, 3) discuss ideas\/approaches with other students, and 4) work in a productive place when you're feeling focused, you can get the assignments done A LOT faster than what people say. Using all 4 of these techniques I finished many of the assignments in around 10 hours, even LZW, and I'm not a crazy programming person who programs outside of class. LZW is not that hard, Bash is much harder (in particular for mathematically minded people; LZW is a fun mathy algorithm, bash is not!!!) Not starting early can be a disaster; never start on the last day, even for the easier scripting assignments (ie the assignments in Python, Perl or Ruby).Lecture varies between interesting and not too interesting; some of the topics are REALLY fun though! (you'll love error correction \/ detection, compression and concurrency! Memory is boring.) Apart from becoming a better programmer \/ learning more about how computers work, the assignments will force you to REALLY understand make files and bash\/shell. If you've taken 223 with Eisenstat then this is rather similar in structure\/style, and honestly about the same difficulty. Take it and you'll be more than ready for higher level CS electives!",
    "Only take if CS major.",
    "If you are planning on majoring in computer science, you have to take it. If you put in the effort you will learn a lot and do well.",
    "a Are you scared that this class will kill you? Well I practically developed acid-reflux disease out of pre-323-induced stress. Scared that you will be wasting most of your semester coding while weeping? In fact, cry-coding was pretty much invented by me. Afraid that everyone else will code faster\/better\/sexier than you and that you will fail? If doubting my ability to program were an Olympic event, I would be sleeping, Smaug-like, in a pile of golden medals.What I want to say is that I was much more scared for this class than you are. And I did awesome in it.It turns out that if you are taking this class, it's because you like programming. The surprise was that I spent so long on the assignments because literally every part of my life is less cool than writing a file compressor. I assure you that each assignment, once you get into it, is absolute puzzle-solving bliss. Yes, your life will be about coding. Free time? Maybe just try to forget that's a real thing. But working this hard on something so interesting will remind you why you chose to spend your life in learning.I came into this class scared and confused, came out a confident awesome programmer. I implemented lzw. I wrote nmake. I made a shell!! I was scared to death of this class and yet I succeeded in making all these great things. If you love to think and puzzle and learn, you will do the same. Work hard, don't be scared, and you can do it!",
    "It's cs323. Hard as hell but you will learn a lot. Stan is awesome.",
    "I enjoyed the material that we learned in CPSC 323. Though the programming assignments that we had (building the LZW compressor algorithm and building the back end of a shell) were challenging, I enjoyed learning more about system level programming. The lectures discussed a variety of topics including computer instruction sets, pipelining, and how to build a shell.The course lived up to its reputation of being time intensive. On average, I spent 20-30 hours per problem set. I highly suggest starting early on LZW. It's difficult to debug; I spent 50 hours total on it.Nevertheless, I love programming, so I highly enjoyed the class. If you plan accordingly, start early, and ask for help when you need it, you will enjoy the class.",
    "I hated 223 with a passion and 323 was SO much better. The material is easier to follow if you're \"techie\" but not necessarily good at abstraction and thinking about space efficiency or whatever the hell 223 was about, I've totally forgotten all of it. 323 is really not as bad as what everyone says. Especially if you're willing to accept a lower grade - I realize that saying this puts me in a tiny minority of Yalies, but hey there are always other guts for pulling up your GPA if you're the sort that cares about grades, no need to kill yourself over this class. Anyway, the material was sufficiently not-boring and with my \"B- is sufficient\" mentality, I didn't have such a terrible time with 323. That said, you will need the discipline to head to the zoo whenever you have free time to work on your code, which I did not have. Don't be like me. The most time I spent on one pset was about 43 hours over almost two weeks. Start your psets early, even if it's just reading the specification. Eisenstat is still terrifying but it's okay. Go to Eisenstat for help whenever you need it, and remember to submit your code before doing so. You will not be a C ninja after finishing this class but you'll probably be shodan or 1st kyu which is pretty neat.",
    "Its one of those classes that are more difficult than others, but they teach so much more valuable skills than any other class that its worth all the time and effort you put into it",
    "This class differs from CS223 in a few ways. First, the problem sets are less about basic and essentially CS topics (i.e. data structures and programming techniques) and more about building more practical and complex programs. For this reason I'd discourage non-majors from taking this class. Second, it's harder. It's not the hardest thing you'll ever do in your life, but it's perhaps harder than any other class you'll take, so don't underestimate it. All your peers are smarter, and all the problem sets will take more effort. This is my one plea to you, future 323 student: don't put stuff off! And if you're in trouble, don't hesitate to talk to Stan.",
    "DO NOT wait to take this as a senior - you'll think nothing but \"I'm too old for this s***\" all semester.DO take this class seriously - if it's not the hardest one you'll take at Yale, it will certainly be the most time consuming.DO NOT be tempted by the class's extremely lenient late policy (5% off every day late) - get things done early because those points add up real quick.DO start the class strong - take the lead while everyone is still trying to get their s*** togetherDO NOT die halfway through - its a marathon, you better be in it for the long haul because ~1\/3 people got less than a Byou'll cry, you'll laugh because you cried, and you'll cry some morethere is no shortcut, only blood and tearsgod speed"
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "323",
  "section": 1
 }
}