{
 "crn_code": "11804",
 "season": "201103",
 "legacy_coursetable_course_id": 13554,
 "enrollment": {
  "enrolled": 10,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    2,
    5,
    3,
    0
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    2,
    6,
    1
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    2,
    8
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "LING 141: The most difficult intro course I've ever seen. Definitely take this course if you're interested in language modeling and tools, but I doubt that it's the best course out there if you're only interested in learning the basics of linguistics. Lots of fun, very useful, but more of a specialized course than the number lets on.",
    "It's pretty much a computer science course, where we solve problems drawn from linguistics. The linguistics is described in plenty of detail, though.",
    "Interesting class. Would definitely recommend having a background in linguistics\/math\/computer science (not just programming). As someone without any of those, a lot of the concepts could be initially confusing. Problem sets are a lot of work but very satisfying to complete, and the 10 extra flex days are a godsend.",
    "This class is pretty programming-heavy. If you don't have a strong cs\/math background (i.e. more than intro programming), expect to struggle. It's doable, but you'll have to spend multiple days on each assignment and probably spend lots of time at section\/office hours. But it is interesting stuff if you're into linguistics, and I think the math\/cs kids were interested too. I would definitely not recommend the class if you have no background in linguistics OR computer science. Just... find a different class.",
    "If you have decent programming experience, the assignments will be straightforward and fun. The material for this class is so interesting but the lectures are extremely boring.",
    "Fun and interesting introduction to computational linguistics! Learn about stuff like spell checkers, random sentence generators, and parsing sentences. Learn about various language models like n-grams, the noisy channel model, and hidden Markov models. Seven programming assignments, your lowest grade is dropped. The programming assignments each involve implementing an algorithm you learn about. This is a great way to really learn how an algorithm works. All programming is done in Python, which is a flexible and intuitive language. I'd recommend at least some prior programming exposure, but you don't need a lot. The lectures can be dull sometimes and can seem to drag on forever. There's a midterm and a final for this class, but they are very reasonable. Prof. Jarosz will not test you on any super-obscure or complicated material. Also, having 10 late days for the whole semester is incredibly generous and helpful. I ended up using 8.5 days for the first six assignments and then not doing the seventh assignment (since your lowest grade is dropped). Grading is very lenient as well. If your code works, you're almost certain to get at least a 95% on the assignment. The best way to tackle the assignments is to do the programming in small chunks over several days.",
    "The subject matter is interesting. Basically, we learn and implement algorithms for language. Among them are syllabification, parsing, and part of speech tagging. It's also cool because it seems to be an active area of research; a lot of the results we discuss are from the last 10 years.If you know how to program, the programming assignments are straightforward and easy. I imagine you if can't, though, they could be quite time consuming.The tests are hard because they involve running nontrivial algorithms by hand. You hope you don't make a mistake early.",
    "This is a good overview of Computational Linguistics. From the perspective of a Computer Science Major: the workload will be less than the average CS class but you will still learn a lot about a bunch of widely used algorithms and techniques. And its a great way to practice Python. You don't learn as much about Linguistics as you would think, which is too bad.",
    "The best thing you will get from this class is a bit of experience programming simple machine learning tasks - studying corpses of texts, learning training sets, etc. If you have little experience, don't be scared - the assignments are reasonable and the language is intuitive, and Jarosz is friendly. You also get a feel for what is being done in comp. linguistics today, which is neat. Lectures are slow and thorough. You definitely gain an appreciation for computers doing some of the stuff out by hand...",
    "I took this class because I am very interested in computational linguistics and natural language processing modeling. If you are similarly interested, I would take this class, but I cannot wholeheartedly recommend it. While the material is very interesting, the coding assignments are challenging and fun but not too terrible, and the exams are not too difficult, lectures are on the dry side. It was sometimes hard to stay awake.Gaja is very nice, and she's helpful in office hours, and great about answering emailed questions. She has difficulty engaging the class in lecture though, she tends to rely very heavily on her powerpoints, but doesn't always seem to know what the answers to her example problems are supposed to be. Also, class always ran over which was inconvenient because I had a class right after and didn't want to miss material.All in all, I enjoyed it, but the course was not stellar."
   ]
  }
 ],
 "extras": {
  "subject": "LING",
  "number": "141",
  "section": 1
 }
}