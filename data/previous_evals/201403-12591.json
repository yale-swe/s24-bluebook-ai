{
 "crn_code": "12591",
 "season": "201403",
 "legacy_coursetable_course_id": 29325,
 "enrollment": {
  "enrolled": 12,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    0,
    0,
    5,
    4
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    0,
    1,
    8
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    7,
    2
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    ".440 is a great introduction to the fundamentals of computational modeling and scientific computing. You will learn things like how to find eigenvalues of large matrices in an efficient manner, how to fit polynomials to data, and how to find the roots of high order polynomials. Prof. Bennett is a fantastic teacher, if a bit stiff. You'll never feel that you have to hunt down information outside of class; the lectures are self-contained. One minor word of caution: you will have to code a lot, although knowledge of mathematical operations, print statements, and plotting will sufficient. MATLAB is a great choice. If you are a engineer with any sort of computational background or interest, you will find this course to be interesting and a fantastic addition to your schedule.",
    "Absolutely. Wonderful teacher and really cool material but it is a fair amount of work.",
    "This class is so flawless. I don't think many undergrads take it, but it is so amazing if you in any way at all into engineering, math, or computer science. The professor is amazing. She is super organized and everything makes sense and has a logical place in the class. She goes really quickly, but in a way that still makes sure the students understand.",
    "You MUST take this course if you're interested in math and computer science\/ coding\/ numerical methods. Do not take this course if you are not interested in math\/ coding, it is heavy in both areas. You will learn a LOT of material but it will be a fair class.",
    "I really enjoyed Applied Numerical Methods I and am looking to take the second semester of the course in the Spring. Professor Bennett was incredibly patient, thorough, and helped me learn from my mistakes. I learned a ton, received an amazing introduction to linear algebra, and am very thankful for having the opportunity to take it my senior year. As an undergraduate engineering major who never really had a background in Matlab or linear algebra, this course was amazing in terms of developing the skills I would need to have developed in the future anyway. Excellent preparation for graduate school and growing your computational\/data analysis skills. The class is very challenging and homework is very demanding, but careful planning, starting on PSETS early, and preparing will help you manage your time.",
    "This review is a bit long. tl;dr version is: take the class because you will learn a lot of important and applicable material and it is taught well. Be warned -- it is tough, psets are very time-consuming, and attendance is vital. I would recommend ENAS440 to another student, particularly when Beth Anne Bennett is teaching it. She is always well prepared, her teaching style is very good and she communicates well with the class. It's very clear that she has been teaching this course for a long time. Every lesson is well timed, and there is a great balance struck between handwritten notes and handouts. She clearly has rehearsed every class and has structured her lesson plans in an easy-to-follow manner. A warning though: this class isn't \"curved\". Truth be told, I am a big fan of the grading system in place in this course. We don't compete with other members of the class; instead we compete with a set grading system with very definite cutoffs. The reason for this, as explained by the professor, is because the course is taught at roughly the same level every year, so in a sense, we are also competing with those students who have come before us. The grade cutoffs at first seem quite low and easily achievable, but the homework is strictly (but fairly) graded, and the exams are pitched at a high enough level to make achieving a good grade an actual achievement, as opposed to the way good grades are usually treated at Yale: an expected result. One of the things I liked the most about the class was the attention to efficiency required by our programs. We have to design programs that not only work, but work efficiently and optimally, which is something that, is often subject to unfortunate de-emphasis, not just in Yale CS courses, but also in the industry. The mentality of \"if it works, it's fine\" doesn't cut it here, and I strongly approve. If you don't enjoy going to class, you should give this class a skip. While attendance isn't strictly mandatory, attendance is forced in a sly way: class notes come from handwritten notes and handouts that are given out during class time, so missing class means missing a chunk of vital material. I personally enjoyed the in-class experience because all the lessons were well prepared, but I also know many people who take pride in their inability to make the excruciatingly long 8min walk to quantitative lectures (smh). The material itself is quite self-explanatory and very applicable to research. Take a look at the syllabus to find out what you'll learn -- a whole bunch of ways find roots of non-analytic functions, ways to solve linear and non-linear systems of equations, ways to approximate eigenvalues and eigenvectors, ways to interpolate functions and ways to numerically integrate. If you wanna solve ODEs and PDEs, take ENAS441 instead.",
    "Absolutely the best class I have taken at Yale. Professor Bennett clearly has a lot of experience teaching this class as everything, the lectures, homeworks, and exams, is very well planned out and structured. I have no complaints and will definitely be taking part 2 of this course in the future."
   ]
  }
 ],
 "extras": {
  "subject": "MENG",
  "number": "440",
  "section": 1
 }
}