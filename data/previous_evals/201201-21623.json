{
 "crn_code": "21623",
 "season": "201201",
 "legacy_coursetable_course_id": 15070,
 "enrollment": {
  "enrolled": 65,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    1,
    12,
    33,
    9
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    1,
    1,
    6,
    25,
    22
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    34,
    20
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "Good class. Take it.",
    "I would definitely recommend it if you have Prof Angluin! I've heard bad things about one of the other profs for this class, but she is really great. It's a lot of work but not unbearable, and the subject matter is really interesting. I always blew off my other homework to work on the problem sets just because I found them so interesting.",
    "Definitely take this if the idea of computer science interests you \u0097 whereas 112 focuses on programming in general and 223 is more advanced programming in C, 201 focuses on computer science in general. Angluin is a good teacher.",
    "If you're interested in getting a broad overview of computer science, definitely go for it. It covers a lot of fascinating concepts (Turing machines, circuits, a simplified assembly language, regular expressions and context free grammars, algorithm run-time), and I certainly came out knowing a lot more about different topics within CS. Dana Angluin is a good lecturer but can be quiet\/difficult to hear.",
    "Boring but necessary.",
    "This course was my favorite course this semester. If you like solving puzzles, then take it. It only has eight problem sets, and although each one is fairly substantial, the TF's were very helpful (one of them even helped me when it wasn't his hours). I wouldn't worry so much about the particular teacher of the course; I think that the course material is fairly standard no matter who's going to teach it.",
    "take it, its in useless scheme but you learn about cool stuff.",
    "If you've been disenchanted with a programming class, don't dismiss this one! This has been one of my favorite classes; you really feel like you learn a lot. Had I taken this earlier, I would definitely have done more comp sci.",
    "CS201 introduces you to broad topics in Computer Science and teaches you to write more complex code than in 112 (with an emphasis on recursion). It does NOT teach you how to write useful programs - Scheme is useful as a teaching tool and little else - so keep that in mind when going into the course. It is a fascinating course, though, with just the right amount of brain exercise: not too easy, but not too stressful, either.Professor Angluin is a great teacher. Just make sure to sit in the front of the class because she is quite soft-spoken.",
    "Weekly problem sets seemed to take students an average of about 8-10 hours.Other than that you just have two tests, a midterm and final. The midterm was pretty rushed and a lot of people didn't finish, but the final was much more manageable, as Prof. Angluin adjusted the length.",
    "201 is hard, but it can also be really interesting and a lot of fun. Start your problem sets on Sundays. Take it with Angluin if you can& sit near the front (she's kinda quiet, but also quirky\/hilarious\/helpful)",
    "Great class. I definitely recommend this class to anyone. Kind of a lot of work but I enjoyed doing to problem sets",
    "You take it if you need to take it, otherwise, probably just take intro programming (although I skipped that course)",
    "If you're going into computer science, I think this class is required. If not, you should still definitely take it. It provides excellent exporsure to various concepts; thus, you're not simply coding the entire time. With that being said, you're still going to be coding A LOT. Expect an average minimum of 5-8 hours a week. Some PSETs can get pretty intense, but don't let that scare you. At the end of the week, you'll get them done. And the struggle would have helped you solidly understand the material.",
    "I am a physics major who wanted to take a \"fun\" class. Having had moderate programming background before, I thought this would be fun. It is not. (CS majors, this review isn't for you).This was one ofthe most frustrating and least gratifying courses I have taken in my 4 years here. Scheme is terrible and the CS department is unreasonably proud of it. I guess it's sort of an ego thing.The problem sets are long but not gratifying because you know that you could have written a similar C++ program in about 1\/4th of the time. I really hated Scheme. I would contest that it has pedagogical value past the first 2 weeks of class.Building the TC-201 was quite interesting and fun. Everything else was pretty frustrating.Don't take it thinking it will be an interesting and fun class.",
    "A lot of work. Problem sets can take between 9-15 hours, especially if you don't quite get all of the material before starting the problem set. They're great in that they make sure you comprehend all the material and prepare you pretty thoroughly for exams, but they are very, very time-consuming. I'm glad I took the course - I feel like I learned a lot of computer science concepts and got better with logic and programming as a nice side benefit - but I'm not sure I would take it again simply because of all the time it ate up. The professor is soft-spoken, but very helpful as long as you seek out the help.",
    "This course is extremely rewarding, albeit difficult. Professor Angluin is very knowledgeable and helpful when you are addressing her one-on-one. However, her lectures are not particularly inspiring and she doesn't make any effort to get your attention. So the onus is on the student to listen and keep up. The problem sets were very time-consuming (around 10 hours of work a week) but worth-while. The midterm and final (midterm especially) were surprisingly difficult. I would not suggest taking this course credit\/D\/fail because the problem sets are so time-consuming.",
    "This class is not supposed to teach you how to code. You will learn Scheme, but this class is about the topics and concepts of computer science. If you're looking to learn how to program, look to 112 or 223.",
    "I would highly recommend CS201 to other students who want to figure out if they are interested in studying computer science, but they should be prepared to put in a fair amount of work to understand the course material. The lectures aren't crucial, but they can be very interesting and helpful. The lecture notes are extremely helpful for p-sets, but they shouldn't be an excuse not to go to lecture. I found the p-sets to be pretty rewarding, and they generally made me understand everything that was talked about in lecture much more clearly. As long as you start the p-sets at least 2 or 3 days before they're due, they shouldn't kill you, and Professor Angluin is generous with extensions. If you find problem solving rewarding, definitely take this course because the p-sets are very satisfying in this way.",
    "TAKE THIS COURSE. This course is not \"learning Scheme\" (although you do learn it), but about understanding the origins and the beauty of computer science. It will make you a better programmer, and it will be fun. Prof. Angluin is great; to mark just one awesome thing, she went through the pains of learning every person's name by second week of classes. Oh, and the feeling when your code runs on a first try? INVALUABLE.",
    "Take this course. Wonderful teacher. Lots of different topics. Nothing is too complicated or in-depth.",
    "This class is a superb introduction to computer science and even includes a bit of interesting stuff about hardware. Though you may not need to go to the lectures to do well in the course, I urge you to do so, since Professor Angluin is really good, and questions in lecture can be intriguing.",
    "I had never before taken any computer science class and had absolutely no experience in programming which definitely made the class more difficult, but it ultimately was manageable, so if you are in a similar situation, know that you'll have to put in more time and work harder than those who have experience.",
    "This class teaches the basics of the programming primarily through ample class participation and programming problem sets. Expect approximately ten hours of homework a week, however the work is not overly tedious, but instead stimulating and satisfying. Professor Angluin is a phenomenal teacher, and I would recommend this class to any student who wishes to take it.",
    "Yes I would. The class offers an interesting overview of many computer science topics, and really gives one a deeper understanding recursion. Although Scheme is useless, it is a fun class.",
    "I would definitely recommend this course to a fellow student. You learn so many cool things about the technology around us!",
    "This is a fun introduction to computer science that's not all too difficult. If you're new to proof-based math or computer science or logic, it may force you to think differently from how you're used to thinking (not that the course contains proofs, but it's the same type of thinking). This is not a class for those looking to learn something useful for web development or iOS apps or anything practical like that. It is a class in computer science, not computer programming. The instructor does not even use a computer in class.",
    "CPSC is a requirement of the Computer Science major that surveys a lot of topics in Computer Science. It will help you gauge whether or not you are interested in pursuing Computer Science as a major. There is a significant amount of work each week because of the problem sets. Be prepared to spend ten hours on average completing the problem sets.",
    "I would definitely recommend it if you are interested in Comp Sci and have 8-10 hours a week to devote to it. It was low stress for me and very enjoyable. But I think problem solving is really fun, you may not.",
    "The class was awesome, and Prof. Angluin is amazing. The amount of work is overwhelming though. Assignments can be fun, but they may take up to 30 hours (not kidding)",
    "YES. Take Comp Sci 201. This is one of the legendary Yale courses that you have to take. Essentially, you learn about all of the important topics in computer science. You come out with an intuitive understanding of how a computer really works. Note: For those of you who are unsure whether or not to take this course based on experience, you do NOT need much (or even any) programming experience to do well. Really. I came in never having programmed before. You are shown how to program, and you can always read the textbook if you're unclear (textbook is online and free). If you have any interest in understanding an essential component of life in our century, take this course.",
    "I took this course as a philosophy major and I loved it. I had never taken a CS course before, but I found this totally manageable. Very interesting material, with a theoretical focus. A fantastic course.",
    "At first, CS 201 is a bit annoying, when you have to start learning to code in Scheme... But once you get used to it, the topics that are presented are actually really interesting, and you get to toy around with some cool concepts in your problem sets. If you start early and utilize the TA office hours, the problem sets are really manageable. The exams were sort of stressful because they're short and count for a large chunk of your grade - working quickly and avoiding careless mistakes is important, though the exam material itself wasn't very challenging. Fun course! Professor Angluin puts a LOT of lectures notes\/extra helpful materials online, it's great.",
    "I took the class without any programming background at all. Ended up doing fine -- the psets take 6-8 hours a week, but nothing is too difficult (just tedious). It's a great but somewhat cursory overview of computer science as an academic discipline, but won't really teach any practical programming skills.",
    "CS major? Take it.",
    "This is a great class. I had more fun on these assignments than any other class at Yale -- you actually get to \"build\" cool things. If you are wondering whether to take this or 223, the answer is take both.",
    "I would definitely recommend this class, it's thought-provoking and a lot of fun. It's definitely a lot of work, but it's really worth it. Even if you're not a compsci major, you should take it if you're interested in logic.",
    "Yes, very good intro course.",
    "Computer Science 201 01 is a good class taught in the Scheme language. Scheme doesn't have much real-world use, but it will definitely expand your thinking and make you approach programming in new ways. It's very worth it just for the enlightenment experience you get from using a Lisp language. The course also does a good job of covering basic computer science concepts. Expect to spend about 9 hours on the pset each week.",
    "YES! It's such a fantastic course, taught extremely well, and it's interesting. The problem sets are challenging, and extremely well made such that after completing the problem set, you will feel like you thoroughly understand the topic. Professor Angluin is fantastic at communicating ideas and topics, and is very approachable.Finally, I took this class without any prior compsci knowledge and did well. So if that's an area concern: it's very doable.",
    "Using Scheme, we learned about basic topics in Computer Science. I would definitely recommend this course to any student who may be interested in the subject.",
    "It's a wonderful course! Not terribly difficult, even if you've never programmed in your life. I feel like I learned a ton about computer science, and it was by far my most enjoyable class this semester.",
    "This class is great if you just want to try out programming\/comp sci\/etc. You do have to devote a significant amount of time throughout the semester to the 8 problem sets, but if you really work at them it can be so rewarding. You get what you put into this class, so if you take it, take it seriously. Or credit\/d it and its super chill.",
    "I would recommend this class. The curve is not too easy, but the workload is definitely manageable and the teacher is really invested in her students!",
    "This is a great course for introductory CompSci, but don't expect to learn too much about actual programming. The problem sets are very creative. They are difficult and lengthy but very enjoyable and rewarding. The range of topics covered is all over the place."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "201",
  "section": 1
 }
}