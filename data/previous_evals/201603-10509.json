{
 "crn_code": "10509",
 "season": "201603",
 "legacy_coursetable_course_id": 39116,
 "enrollment": {
  "enrolled": 113,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC402",
   "question_text": "Your level of engagement with the course was:",
   "options": [
    "very low",
    "low",
    "medium",
    "high",
    "very high"
   ],
   "data": [
    0,
    10,
    37,
    20,
    22
   ]
  },
  {
   "question_id": "YC404",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "fair",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    1,
    10,
    24,
    27,
    26
   ]
  },
  {
   "question_id": "YC405",
   "question_text": "The course was well organized to facilitate student learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    1,
    3,
    8,
    40,
    36
   ]
  },
  {
   "question_id": "YC406",
   "question_text": "I received clear feedback that improved my learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    1,
    8,
    28,
    33,
    17
   ]
  },
  {
   "question_id": "YC407",
   "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    2,
    5,
    20,
    52,
    10
   ]
  },
  {
   "question_id": "YC408",
   "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    6,
    41,
    39,
    3
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC401",
   "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
   "comments": [
    "logic",
    "The course is really as advertised: it teaches mathematical tools for computer science. (Which should be a given, but isn't so in certain other classes...)",
    "You learn a lot about a lot of the theory behind different topics in discrete math, including logic, set theory, the real numbers, induction\/recursion, asymptotic notation, summation notation, number theory, relations, graphs, counting, probability, and linear algebra. Kind of like a intro course that covers many topics in the field, but I feel like we actually went pretty deep into most of them ( I could be wrong though and not no it). While not directly applicable to programming, it does teach you to think in a problem-solving way that is helpful with programming. It also taught me what a lot of the symbols mean that I have seen in my Econ classes for 4 years now. Overall, I didn't need to take it by any means (I'm a senior Economics major) but for some reason I enjoyed it.",
    "I honestly learned so much from this course - so much about math, and how it links to computer science and the interplay between the two. it was absolutely fascinating.",
    "Basically, a ridiculous amount of extremely useful math knowledge -- logic, sets, induction, combinatorics, probability, linear algebra, graphs, trees, etc. The course moves REALLY fast, so if you don't keep up, you will be in trouble. Looking back on the course after taking the final, concepts that were complete nonsense to me at the beginning of the semester make perfect sense now thanks to Dana's incredible teaching and the TAs. You will learn SO MUCH in this course, and it will all blow your mind. I learnt to think more like a mathematician and to reason through proofs step-by-step and logically. I cannot emphasize enough the sheer amount of math I learnt in this course, and how much fun I had doing so.",
    "Math tools for computer science - linear algebra, probability, logic, writing proofs, number theory, etc.",
    "This is a great intro to a lot of higher-level math: graph theory, set theory, probability theory, number theory. Lots of theory. But not too theoretical: 202 gave us a survey of this math without having to get too deep into the specifics.",
    "Definitely a great overview class to get you thinking in a proof based approach towards mathematical concepts.",
    "This class taught me (as the name might suggest) a series of mathematical tools related to computer science.",
    "This class was beautiful in that it expanded my conception of what is possible in math, while solidly reforming my ability to make logical mathematical arguments. By the end, I had discovered a newfound appreciation for math--but getting there was slightly painful. I also developed a better intuition for what constitutes a fantastic teacher here at Yale.",
    "you have to do the practice problems to get better; and i learned everything that was on the syllabus",
    "Mathematical thinking in the context of CS",
    "This class is a very good introduction to a proof based format. Professor Angluin explains things beautifully, and the problem sets, which can sometimes be very hard, are coupled with a lot of available resources to tackle them, making them the foundation of this class.",
    "CPSC 202 gave me literacy in and an overview of a variety of discrete mathematical concepts. Having taken very little logic or proof-based mathematics, this class was somewhat unfamiliar territory, but by the end of the course, I felt much more comfortable with this sort ofl math and actually really enjoyed it.",
    "Skills necessary for CS.",
    "I developed my logic skills and learned how to write casual proofs.",
    "I learned a lot in this class about predicate logic, inductive proofs, asymptotic notation, graph theory, number theory, probability, etc. This is a great class for computer science majors and non-majors alike.",
    "The tools I need to take CS apparently? Discrete math.",
    "You learn pretty basic discrete math and proof techniques, but nothing really difficult. Graphs were cool to learn about.",
    "Self study a lot",
    "Learned about set theory, proof strategies, counting, asymptotic notation, and more topics in discrete math.",
    "This was the most challenging course I've taken at Yale thus far so naturally at first I didn't really enjoy it, but by the end Prof. Angluin made it totally worth it.",
    "Developed a broad base of math skills.",
    "I think the most important part of this course was learning how to do proofs. I think my skills in this area greatly improved; however, I wish I had become more proficient than I did. Other than graph theory, I'm not sure about the relevance of everything else we did. I am not a computer science major, so I cannot speak to how what the course covered will be useful.",
    "CS202 is a fantastic overview of the important math topics relevant to computer science and other fields. I learned the math, and also the ways of thinking about the math, in terms of proof, trial and error, proding at the problem, etc.",
    "I learned a lot about math, and coming from someone without a very substantial math background I learned a huge amount about proofs, proof techniques and more abstract concepts of math!",
    "I learned a lot more about how to write proofs as well as math concepts that can be used in Computer Science.",
    "Various math concepts applicable to computer science Thinking through proofs",
    "This course teaches you the beginning steps to approach proofs and introduces you to a lot of math theory.",
    "A broad introduction to Mathematicals tools required for computer science. Many topics under discrete mathematics was covered",
    "You learn a lot about proof writing and basic math theories that apply to coding.",
    "Basic cursory knowledge in a bunch of topics of cs-related math (e.g. set theory, graph theory, probability...)",
    "Good foundation of discrete math.",
    "I got a brief introduction to most of the applicable mathematics for computer science. I learned to prove things about more abstract ideas than I was previously used to.",
    "A good introduction to more abstract mathematical concepts (sets, number theory, linear algebra, etc.). A relative lack of depth, and covers a wide breadth of material. Generally well taught.",
    "This class taught the skills related to the proofs related to computer science algorithms.",
    "I became a much better problem solver after taking this course. Looking back, I have no idea how I tackled many of the problems in the problem sets. I know pre-Fall2016 me would have just crumple to these questions. But this course taught me to sit down with a problem, break it down, and solve it little by little. Through countless proofs and problems, I have proven to myself that I can solve these problems, which is pretty important for solving these problems in the first place.",
    "This is a math class. The topics are miscellaneous - graph theory, number theory, counting, sets, logic, proofs",
    "You learn a lot in this course, but I think it boils down to induction and a basic knowledge on how to write simple proofs.",
    "I have really learned what it means to write proofs using things like induction and proof by contradiction."
   ]
  },
  {
   "question_id": "YC403",
   "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
   "comments": [
    "make lectures more interesting, make the topics more cohesive as a whole",
    "This course was really informative and I think provided a good mathematics background for students who are (and aren't! I think this class would be useful to anyone) looking to pursue computer science. Classes were really well-catered to the students, and I actually felt like I was learning useful material. (Emphasis on both 'learning' and 'useful'). In many other classes, students are often forced to rely on teaching themselves via textbook or other methods, but Professor Angluin was really amazing at making everything seem intuitive! I do think however that there is a gap between what is taught in class and what is expected for psets, making it almost impossible to do them (thankfully, we were given past psets to reference, so eventually I think everyone got used to what was expected of psets). I think main problem is that we are expected to learn certain things on our own off of the course textbook, but it is written in such a way that it is almost impossible to understand for students who are truly learning the material for the first time. The first few chapters were okay, but began to become less and less comprehensible - either I am simply really bad at math, or the book was not written to teach. (Or maybe both...)",
    "Concepts were never fully explained and the teaching method was difficult to follow",
    "The weaknesses: grading of psets was extremely slow and somewhat arbitrary (forgetting the entire converse of a proof was -5, but forgetting to label a subscript on a constant once was -3; this doesn't really make sense). I think there were only two graders for the entire class. We only got I think 3\/5 psets back before the midterm and 8\/10 psets back before the final, which made the exams more difficult than necessary to study for. I feel like asking for all the relevant psets graded & returned before an exam is a reasonable request, so perhaps the department can hire (a lot) more graders for this course next year. The strengths: literally everything else. This course was a wonderful, wonderful experience.",
    "Strengths: It teaches a lot, and it does it well; I felt like I learned how to do common problems with the tools I learned in this course. Dana is a good professor who explains material well. Weaknesses: I wish we covered less material more in depth; the latter part of the semester felt very rushed, especially linear algebra and probability. I think this class is also tricky, because everyone has a very different background coming in. Some people have taken full linear algebra classes (and find that a breeze) while some have not. I wish the CS department would reconsider how this class is offered and how mathematics is integrated within the major to create a better experience for students, instead of this amalgamation of a class.",
    "Lecture was slightly dry at times, but that happens with math so its ok. The \"textbook\" is a great resource; honestly better than any print textbook I've ever used. Class policies are designed to maximally help you do well and learn the material without having to kill yourself, including ample office hours, and resources from past years (old homeworks\/exams). Problem sessions were offered but at strange hours; it would be best to offer those later in the week such that people could attend after already having began work on that week's homework.",
    "We definitely rushed through the material in the end, so I definitely feel like it is not necessary to include probability and linear algebra because there are other classes that teach this for a full semester.",
    "Comprehensive course that does a good job covering the necessary topics for computer science. I think because it is geared toward computer science, it tends to jump around so that none of the topics covered feel particularly connected, but was well taught and clearly addressed applications for the topics.",
    "I think that the psets were really helpful in teaching us the material and the notes were extremely well organized. That being said, I think class time could be better used teaching these concepts; a lot of the time, it seemed as though we were just doing examples of things in class.",
    "This course has been taught for years, so everything is as expected, quite perfunctory and the materials seem pretty robust.",
    "This course is structured around the problem sets, and Dana does a fantastic job of providing countless opportunities for students to receive help completing this. Unfortunately, this created a dichotomy in the classroom where if you sat at help hours for long enough, you'd get the correct answers to the homework. This is evidenced by the medians posted for homework all being in the high 90s. For those of us who stayed up all night working in groups, as is recommended, we received slightly lower marks because we did not phish for answers at the help hours. I found this to be slightly annoying because when I did attend help hours, the help I received was extremely useful; however, I felt that I was annoying the \"regulars\" there because I was asking a problem out of order, and I was asking about a specific part--probably in the way that they were intended to function. I would much rather a section or something that is a longer version of the problem session, designed to strengthen fundamental skills learned in the class. Because of the issues with help hours, I didn't feel comfortable coming to ask extended questions, like strengthening my ability to formulate proofs using strong induction--but perhaps that's my own fault.",
    "This class was strong in its ability to introduce so many topics and make me feel relatively comfortable with them over the course of the semester. The proofs, though informal, were a good reintroduction since I hadn't done them in quite awhile. By far the greatest strength was the office hours, where a large group of us would talk with the TAs, who were amazing. Dana's love for the topic was clear, and her subtle humor in lecture was greatly appreciated!",
    "the sound of the air conditioning made me really sleepy every class",
    "Major Strength: The resources available for this class (Prof's office hours, Peer Tutors)",
    "I thought that it was a great course overall.",
    "Material and classes very organized.",
    "Great lectures, challenging but interesting problem sets, interesting material in my opinion",
    "Lecture material could be covered in a more engaging and efficient manner.",
    "Strengths: I liked how 2015's homework and solutions were available to students as a resource. Weaknesses: there were too few graders (only two!) for too many students, which resulted in each homework taking an inordinate amount of time to be returned.",
    "Lectures are hard to follow if you haven't covered the material a little bit in past classes, and the problem sets are super challenging, but possible. But, helpful TFs make the experience easier, but they need to hire more.",
    "This class is very well taught, the problem sets are good, the exams are difficult, and the textbook is quite good.",
    "It was a good class. Felt very fair.",
    "I felt like the course was too slow, and the lectures didn't line up with the homework well. In class, we would learn extremely basic things, such as what the summation symbol and combination\/permutation are. Lectures often felt like a waste of time. Then on the psets, there would be much more challenging and interesting problems. If the lectures could talk about the basics much more quickly and then go into the more interesting parts of discrete math, the course would have been much better.",
    "I recognize that this is a problem that affected very few students in the class, but I wish the problem sessions hadn't been held at the same time every week, or that there had been two times, simply because I had an unavoidable conflict at the time, and so never got to attend, However, I know it was impossible to find a time for everyone. I just wish I had been able to see what problem sessions were like. Otherwise, the course had so many help hours, and everything always felt very doable with it.",
    "I never knew if I was doing things correctly till too late. I learn better with the answers in front of me. The test-like homework assignments were not conducive to learning and I only actually learned something in the course when the sample exams were released.",
    "It was good ; I liked how the homework was graded",
    "The course material and lectures were excellent. However, I wish that the professor could have gone over more examples in the textbook rather than just tell us to read them.",
    "This is a really great course! Loved it!",
    "This course is bredth not depth. Psets are challenging but doable.",
    "I think the lectures in the course could have been better. I think Professor Angluin was an excellent lecturer, but I think she moved too slowly. I think it would have been beneficial to have more challenging lectures that better prepared us for the homework and exams.",
    "Dana is such a strength of the course. Also, I liked the amount of time we spent on each topic. If you had a rough week, you weren't lost for the entire course. However, more connections could have been drawn between the topics. For instance, on the exam, there was a great problem about graphs and probability -- combining two distinct units.",
    "Math 202 is extremely breadth heavy, which is how it was advertised, and I generally liked the pacing of the class! I think the class definitely needs more peer tutors, which were essential to solving the problems.",
    "The biggest strength of the course was that we were introduced to a bunch of different topics that were relevant to CS. I also really liked that there was a lot of support available, between the problem session and the numerous office hours. I think the weaknesses in the course was it was hard sometimes to see the direct CS applications of what we were studying. In addition, because we were covering a new topic roughly every week, it sometimes felt like we didn't go in enough depth to really understand the topic.",
    "Strengths: problem sets are very interesting and engaging and make you learn the material without being overwhelming, there are so many resources available to help students, working together is encouraged, Dana is very welcoming Weaknesses: final worth 45% of grade is horrifying",
    "Dana is a really nice teacher, but I often feel like she did not go into the material as deeply as I would have liked. This is probably because there are just so many concepts and too few classes.",
    "Well balanced course in terms of difficulty and content. Able professor. No obvious faults with the course.",
    "Having so many TA help sessions was crucial and the Ta sessions were great.",
    "Strengths: interesting material, good textbook, very good professor who is interested in having students participate Weaknesses: if you do the reading on a topic before lecture, lecture can be not super engaging; I think that a quicker turn-around on problem sets (especially before exams) would be helpful (though I realize this is a staffing related constraint)",
    "Been taught by Dana several times before - she knows where to focus in terms of material.",
    "Lectures got a little long and were almost exactly the same as the readings, so I think the class would be better if it were 50 minutes 3 times a week as opposed to 75 minutes. I thought the tests were very fair and the readings were super helpful.",
    "The lectures are a little bit slow because everything that you need to know is in the text. It could be improved by adding some more interesting topics to lecture that are not found in the text.",
    "The course spends way too much time focused on teaching elementary math as a means of learning proof writing, leaving little to no time to learn graph theory and linear algebra (both essential concepts for a computer scientist) in a proof based manner.",
    "Professor Angluin is one incredible lecturer. Usually I feel a deep sense of despair after a math lecture, but in CPSC 202 with Dana Angluin, I may have felt lost, but I didn't feel hopeless. You could always tell that Professor Angluin knew exactly what was going on in our minds because she always seemed to ask the right questions and explain the right things. You would look at the board an wonder to yourself \"what is that symbol over there?\" and then 2 seconds later she would say, \"oh yeah, by the way that symbol is _____ and you should just treat it like a _______.\" The problem sets were quite hefty but man they were effective. They were only 6 questions a piece, but each question felt like a fantastic Greek Epic, filled with draining losses, glimmers of hope, great sacrifices, and honorable triumph (sometimes). By the end, you were exhausted, but at least you felt like you didn't just waste an entire week. The midterm was much harder than the final, but only because of the time crunch. Overall, this is a very fair class that gives you as much as you put into it.",
    "Dry material with dense, confusing problem sets. But Prof Angluin is a good teacher with helpful office hours.",
    "This course goes over too many topics in too short a time period as such linear algebra and probability were given no love. I understand this is, possible, supposed to be a survey course on math techniques for CS majors, but trying to squeeze in most of linear in two class sessions was a lot.",
    "I don't really like how the course skimmed over linear algebra because let's be honest, a lot of people in the class are going to take linear algebra if they haven't already. It would have been much more beneficial to go in depth in other topics such as graph theory or combinatorics. I wish that we were presented with more material that would be even harder so that we can have the option of exploring what it would be like if we were to have taken 244 or if we were to learn spectral graph theory."
   ]
  },
  {
   "question_id": "YC409",
   "question_text": "Would you recommend this course to another student? Please explain.",
   "comments": [
    "i wouldnt reccomend taking this class if you are not taking it for the cs major. it was really hard to follow and i didnt really understand what we were learning and why all the topics were related",
    "I would definitely recommend this course. Unlike other classes where you question the relevance of the material you learn, I think that every unit in this course was either interesting, useful, or both. Although it is targeted towards computer science majors, I think that anyone interested in developing their mathematical background knowledge should consider this course.",
    "Opt for the pure math class instead -- this course doesn't provide much insight into computer science.",
    "I really liked that the problem sets were challenging, and were where I did most of my learning\/critical thinking, and that the exams were extremely fair (fairest of any class I've taken at Yale). Unlike some STEM classes, they do not make you feel like an utter failure - you are challenged in the homework and in class but on the midterm and final, as long as you're comfortable with the material, you can feel like you've really learned something. I like walking away from a class feeling like I truly did gain something from it, and I can definitely say that about CPSC 202. Dana Angluin is one of the most measured, thoughtful, accessible and caring professors I've had at Yale. This class was a joy. I'd definitely consider it seriously if you're deciding between 202 and MATH 244. Material is interesting, and definitely not easy or trivial.",
    "YES YES YES I HIGHLY recommend this course. I haven't taken math since junior year of high school so I was honestly so nervous for this course, but you are set up for success. Everyone is there to help you - you have problem sessions for every pset where they walk you through similar questions, there are office hours 4 days a week, Dana has her own office hours, and the course assistant had additional office hours you could schedule as well. This was hard, I'm not going to lie - the concepts did not come easily to me, and I was lucky to find people who were willing to sit down with me and explain the concepts to me until I understood them, but you gain so much information. Dana is a fantastic teacher as well - some complain that the lectures were a repeat of the notes, but as someone who found the notes dense, Dana's teaching was absolutely delightful and incredibly helpful. She is there to help you as much (or as little!) as you need it. This course will be tough, especially if math and proofs don't come easily to you, and you might sometimes want to just yell in frustration, but it's worth it in the end. Start psets early, go to the earliest office hours with as much of the pset done as you can - and make friends with others in the class. You will get through this, and it won't be the worst class you take that semester (in terms of work), guaranteed.",
    "YES! Take anything Dana teaches. It is evident that she cares so much about her students -- if you email her with a question, she will email you back with insight quickly. If you can't make her office hours and email her asking to meet at an alternate time, she will squeeze you in. Everything about this course (except the graders, which I mentioned earlier) is wonderful -- the material is relevant, interesting, and mind-blowing; the professor is amazing; and the peer tutors are so helpful and kind. The course itself is incredibly well-organized. Dana's exams are also very fair, and the curve is generous (class median is A-\/B+ breakpoint). Anyways, exams are challenging but by no means include material that is clearly well beyond the scope of the class (although you are definitely pushed to think slightly beyond things explicitly covered in class). Previous years' exams are great indicators of the difficulty of the current year's exams.",
    "It's required for the major, unless you take 244 which has pretty variable reviews year to year. I think this class is underestimated; it's actually quite difficult, and unless you put in the time to understand the material throughout the class, studying for the midterm and the final will be tricky. That said, Dana is always willing to help you out and is very fair, although lectures can get boring at times, since mostly the same people would raise their hand in class.",
    "Really a great math class. If you don't like math, take 202! You won't have to do too much math. It's a math class for engineerings and computer scientists, not the other way around. If you want a pedantic, rigorous introduction to discrete math, the equivalent in the math department (244?) might be a better option. 202 serves as a good introduction to all the theories: graph theory, number theory, probability theory, set theory, etc. Homeworks were challenging at times, but never annoying. There was always a sense of satisfaction after having figured out the proofs or problems we were given. Past homeworks were also given out as a resource which was incredibly helpful (Dana is [as she admitted to us] not very creative about creating new problems each year ;) ). Exams were straightforward and mirrored practice and past exams presented in class.",
    "Perhaps also shop 244 to see before choosing this class.",
    "Great course with a great professor! A must take if you are interested in math, logic or cs.",
    "Worth taking if you're interested at all in computer science; if you're more math friendly, I would recommend taking actual discrete and linear courses, but otherwise I would say take 202.",
    "Definitely recommend it to anyone who wants a survey of mathematical topics.",
    "This course takes all the building blocks you would need to know in Computer Science and wraps it all nice with a little ribbon. It's not difficult, but it can be tedious at times. Overall however, the problem sets and tests were quite fun to work on.",
    "This is an amazing, but challenging class. Many of you are trying to decide between this course and MATH 244, and I'll have to stop you and ask you to consider not just the content but also the professor. I've found Dana to be one of the funniest, most compelling teachers in STEM here at Yale, and you'd be silly not to take this course. At times, the PSETS were long, and often I didn't want to make the trek to Science Hill, but I always did these things because it felt awesome to be a part of Dana's class.",
    "Take this class! This course is a great survey of the various topics in discrete math, and Dana is an amazingly passionate and effective lecturer. Her humor alone is worth coming to lecture for, and the TAs are very helpful in office hours. The psets, while difficult, are fair, and the midterm and final have very helpful practice tests and plenty of sample problems. By FAR my favorite math class I've taken, and the first where I was more excited than relieved when I solved a homework problem. Take it!!",
    "yep! great exposure to a lot of math concepts that i've only heard about",
    "I would recommend because we covered very interesting topics, and the workload is very fair.",
    "Absolutely. This class is hard no doubt, but a very rewarding experience.",
    "I would-- this course is intellectually stimulating, and it's fun to sit around with friends and work on the interesting homework problems. There is SO MUCH HELP with problem sessions-- a few hours almost every night.",
    "Yes, also you need it for CS.",
    "Yes, if you like math, problem solving, or computer science. No if you don't want to put in the work for challenging problem sets",
    "If you want to do computer science and want to learn some computer science math, take the course. Dana is a good professor and there's a nice classroom community for doing psets etc. This is a good class to make you realize you hate computer science if you are someone who doesn't care about any of this stuff.",
    "Yes--it's a pretty straightforward course that's useful for any applied math \/ CS major.",
    "I would only recommend the course if it's required for one's major. So far, I haven't seen any practical applications\/uses for the concepts learned in 202 in the context of programming or CS, but that may be because I've just finished 202.",
    "I would definitely recommend this class. I learned a lot and the class was very enjoyable.",
    "Yeah, if you are in the major.",
    "If you're a CS major, you obviously have to take it. I would not recommend taking it for fun though, unless you like touching subjects and not learning about them in depth.",
    "I really enjoyed 202. I was deciding btwn this and MATH244, but then had a time conflict w\/ 244, so took this instead and am glad I did (although I still may try to take 244 next fall). Professor Angluin is incredibly caring, and there are a lot of resources (help hours nearly every day, she releases prior problem set solutions, lots of practice problems before exams). That being said, the course moves incredibly quickly (for example, we spent two lectures and half of a pset on the entirety of linear algebra). I did learn how to write inductive proofs, and a lot of formal notation (I'm no longer scared of summation notation!). Problem sets are very doable. 6 questions, and the first three are generally straight forward, while the last two make you think (and you may need help from friends\/office hours).",
    "It's required. I didn't find the material fun to learn.",
    "Great course. Not too hard. Angluin is a great professor who is available literally all week for one on one help, and there are help hours with peer tutors to help you through problem sets. All in all a very enjoyable introduction to various topics in discrete math. Be warned - this introduction will only skim most topics. If you are a math person, take 244.",
    "Yes for compsci majors",
    "Definitely take this course if you have no experience with mathematical proofs. Otherwise, you may want to look to math 244, since this course moves a bit slowly at times.",
    "I assume that most people take this course to fulfill a prerequisite, and with that in mind, I say that you don't need to worry about taking this class,, mostly thanks to Dana. She is absolutely amazing and truly cares about her students. The class material became infinitely more understandable and accessible with her help. Looking back, I can honestly say that I enjoyed this course.",
    "I would recommend this course if you want to become better acquainted with the \"language\" of math.",
    "This is a really great survey course! Professor Angluin is an amazing teacher and incredibly approachable. The workload is definitely manageable and there is a great team of peer tutors, TA, and Professor Angluin who are always available to help.",
    "Yes.",
    "Necessary for CS majors but good too.",
    "This is a solid course, especially with Dana Angluin. She is an excellent lecturer, and it is a privilege to take a class with her. The homework and exams were definitely more challenging than the lectures, though. I think I did the minimum amount of work required for the class, and I think I would have gotten more out of it had I been more engaged. Still, as far as required classes go, this is one of the better computer science classes I have taken.",
    "YES! Take this course with Dana Angluin. Freshmen: take this course ahead of math 120 and 225 (I did not do this and regret it). This course teaches you how to poke and prod at tough problems, which is a crucial skill within math and in other fields as well. The material is presented in a logical, fun manner. It lays a foundation for where math fits within other fields, including computer science. You learn the theory, but don't lose site of how to apply it. This is the best of three math courses I've taken at Yale, by a large margin.",
    "I would definitely recommend 202! I learned so much from it, it is absolutely the perfect course for any computer science major who is not as confident in their math skills as other students who have done competition math or the like.",
    "Pretty straightforward course. Workload isn't too heavy. 1 problem set a week that won't take you too long, a midterm, and a final. The tests make up the bulk of your grade and the average will be high so definitely study. That said partial credit is given generously so it's manageable. You won't learn a ton about any one subject, but you'll learn a little bit about a lot of different subjects.",
    "I would recommend this course to those interested in CS; it's a pre-req for many CS courses + required for the CS major, and you do get to learn a lot of useful topics. That being said, I'm not sure how useful or helpful of a course it would be if you weren't interested in taking further CS courses.",
    "Definitely- super interesting, challenging course",
    "Take it if you are interested in math theory or need it for a CS prerequisite.",
    "Yes, course is as advertised. Good understanding will be developed of core concepts mostly thanks to homework.",
    "If you need it for your major, definitely take this class instead of the other one.",
    "Take this course because it's a good introduction to a bunch of interesting topics. More importantly, take it because you have to for the cs major and requires less knowledge going in than math244 (so I hear)",
    "Definitely. If you have never taken a proof-based class, this is a great introduction.",
    "Obviously, this class is required for the CS major, but it is a very good introduction to many math topics that you might not be familiar with. You can get all of the information from the text and the problem sets are relatively straight forward.",
    "Yes. This is a useful course because it encourages you to face your demons (math) and learn to overcome them.",
    "Only take it if you have to for CS.",
    "Yes, I took this course thinking I would be a CS major or a Physics major and have since decided only on physics (not because of this course though). This course was fantastic and Professor Angluin is fantastic. If you are at all interested in learning a lot of different maths or you think you might enjoy the more theoretical side to CS (which is applied math) or you're a CS major I would take the course. The workload will be similar to the rest of your classes, but that doesn't make it a chill course. Nevertheless she is a fun lecturer at times and going to lecture was never a bore. The real thing that made this course phenomenal were the TAs.",
    "Course material is very interesting and offers a good overview of the math foundation for computer science. After taking the class it is much easier to understand topics such as complexity, graph traversal, and probability. Dana is a very nice professor. She explains things really clearly and is always patient to help anyone in need. For people with strong math backgrounds, this class may seem a little bit easy."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "202",
  "section": 1
 }
}