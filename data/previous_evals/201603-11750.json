{
 "crn_code": "11750",
 "season": "201603",
 "legacy_coursetable_course_id": 38603,
 "enrollment": {
  "enrolled": 81,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC402",
   "question_text": "Your level of engagement with the course was:",
   "options": [
    "very low",
    "low",
    "medium",
    "high",
    "very high"
   ],
   "data": [
    1,
    6,
    19,
    17,
    13
   ]
  },
  {
   "question_id": "YC404",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "fair",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    3,
    15,
    12,
    26,
    2
   ]
  },
  {
   "question_id": "YC405",
   "question_text": "The course was well organized to facilitate student learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    2,
    16,
    9,
    23,
    6
   ]
  },
  {
   "question_id": "YC406",
   "question_text": "I received clear feedback that improved my learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    7,
    17,
    19,
    9,
    3
   ]
  },
  {
   "question_id": "YC407",
   "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    1,
    1,
    16,
    23,
    15
   ]
  },
  {
   "question_id": "YC408",
   "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    1,
    24,
    19,
    12
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC401",
   "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
   "comments": [
    "Gradient descent Learned some Python Databricks",
    "I learnt to use computational tools to solve problems with a lot of data. I learnt concepts such as Principal component analysis and independent component analysis. Amazing stuff.",
    "Basic data analysis tools, applications of convex optimization techniques, and Python Notebook",
    "Good intro as to what data science is and how people approach it.",
    "I learned theory and algorithm about dimension reduction for large dataset, a few useful optimization methods, parallel computation of data using Spark, and a couple of other important topics in data science. I enjoyed the design of the course, which combines theory and hands-on programming together in a single curriculum.",
    "I learned how to use Python and got some exposure to some major data science algorithms. That said, I'm a little unclear exactly what I learned in a lot of ways, and what I was supposed to learn.",
    "If before this class I didn't think I could code, I know think I can say that I positively can and that I will survive a data analyst role out in the real world (hopefully). Can't say we covered SQL in too much depth so don't know that, but I'm fairly confident in Pandas now and learnt some cool algorithms.",
    "I learned to use certain data science techniques to gain insights from data.",
    "Learned how to code in python!",
    "Lots of abilities with Python as well as some tools for dealing with data. I also got more a nice refresher of some parts of linear algebra.",
    "I learned essentially everything a person needs to gain a data science internship. Literally. Without this course I probably wouldn't have landed a great internship at a fortune 100 company as a data science intern. I learned plenty more about Python and how computers work in general.",
    "Nothing. This class was very not helpful.",
    "I learned a lot about machine learning, and got some practice programming in python (also spark! that was cool, and went right on my resum)",
    "I got better at python, manipulating matrices, thinking about the mathematical concepts behind data science principles",
    "I learned so much about optimization techniques, how to think algorithmically, how to implement algorithms (specifically in python), and a lot more techniques for analyzing and visualizing data such as SVD, PCA, and ICA.",
    "Lots of information about matrix factorization and more basic data mining problems (regressions, PCA, k- and soft-means).",
    "Well, we learned the basics of data analysis, which is cool, I guess.",
    "I learned a decent amount of python and how to write data analysis functions therein. From basic regressions to modern machine learning techniques and page rank algorithms, I feel like this course provided a broad introduction to the types of analyses I might do in the future as a scientist.",
    "I gained a basic understanding of many machine learning algorithms and matrix factorizations, along with some familiarity with other tools for working with a lot of data.",
    "Learned a lot of useful tools for working with big data and optimization. Very applicable.",
    "Lots and lots. Programming experience in python and spark, lots of statistics ideas and algorithms. Confidence with machine learning style optimization.",
    "I learned a great deal about how to process data computationally! (And I actually mean it--I have already used some of these techniques for other courses and projects). This included an in-depth understanding of how to use numpy to process matrices and vectors, as well as useful knowledge of how to use SQL, Jupyter, Databricks, and other frameworks. On the more theoretical side, I also became familiar with various computational techniques such as gradient descent.",
    "Understand the math behind many of the machine learning algorithms.",
    "There were a couple really cool algorithms that the course taught, such as locality sensitive hashing and PCA. I also learned about working with numbers in Python using numpy and dataframes, which I hadn't been exposed to before.",
    "I learned how to work with large data sets, and I learned the basic statistical approaches to getting useful information out of these data sets.",
    "Python data analysis",
    "I became better at taking gradients of matrices. I also had some practice using Python for data science.",
    "To be fair, I definitely got a lot more comfortable with python, which I had only limited experience with before this course. I also had never used numpy, networkx, or Spark, all of which were used in problem sets. In terms of the math, I cant say that I truly learned very much besides the bare minimum that was required for the problem sets because it was so poorly taught.",
    "I learned several Python skills, how to think about vectorizing computer code, and approach unique data science problems, both on the mathematical side as well as the computer side.",
    "Very useful data science but with a deeply theoretical bent that either you love or you hate. The course was really a mix of two courses: a regular data science course taught my Dan Spielmen, and a graduate level statistics course taught by Sahand. And as yo Could tell, the second part could be quite hard.",
    "The basic theory of data science (data mining and machine learning) How to use Python to solve data science problem",
    "Programming in python Basic machine learning skills",
    "Introduction to the mathematics behind \"data science\" techniques like logistic regression, principal component analysis, clustering, etc. Arguably more of a \"math class with some python\" than a CS class.",
    "Programming in python, using numpy, using iPython All the different regression and matrix factorization techniques, clustering, PCA, streaming, etc. etc.",
    "Through this course I developed an understanding of many computational strategies in data science. In general, I learned how and why various techniques worked and gained some experience implementing and utilizing the techniques through programming in Python (and Spark to a lesser extent). I thought that learning about PCA, hashing, and gradient descent were all very useful, in addition to gaining a crash course in how to manage data in Python."
   ]
  },
  {
   "question_id": "YC403",
   "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
   "comments": [
    "Strengths: Dan, the potential applications Weaknesses: lack of organization, how difficult problem sets were sometimes, that homeworks weren't always planned well, the disconnect between theory and implementation",
    "The class is very challenging. The prerequisites (Math 120 and Math 225) seem to be insufficient to prepare us for the class. The lectures are sometimes poorly structured. But the things that we learnt are amazing and extremely useful. The grading is a bit unclear. We did not receive feedback for our homework. I did not even know why some of my points were deducted. There are only seven psets, an insufficient reflection of our knowledge.",
    "My suggestion is that we make STAT 241 prerequisite. Everything would have made more sense with the statistical language. Also, feedbacks on homework assignments were almost nothing. That should be changed from next year. Having said that, I believe Dan and Sahand were the best qualified teachers for this course at Yale. They had interesting insights from recent development of the fields, which I enjoyed.",
    "Definitely could benefit from additional teaching on matrix calculus. I would have loved to have more illustrative examples (e.g. examples like the ICA demonstration with the soccer audio). Instances when we saw the effect of a technique on a set of randomly generated numbers seemed like a lost opportunity to gain intuitive insight into the method.",
    "It's the first year this is taught, so there are definitely kinks being worked out. I really enjoyed some of the material, especially Dan's last lecture where he went over real world applications. Sahand is definitely a weaker professor than Dan, but I also didn't have as much background for his topics versus Dan's.",
    "Strength: 1) several useful topics that represent the status-quo of data science were covered. 2) combination of theory and hands-on programming practice. 3) introduced the fundamentals on class, and provided a lot of advanced materials for interested students to delve in further. Weakness: 1) The pace of the course and the workload varied throughout the semester. There were a couple of weeks with weekly homework dues and a couple of weeks without any homework. 2) The difficulty of the assignments varied quite a bit. 3) There were not enough feedback on the homework. Most of the graders didn't provide any rubrics or sample solutions.",
    "Dan is a wonderful and clear instructor. Sadly, he barely taught any of this class, and I think many students took it because of their previous experience with him. I think this class was hard for most students because the exact prerequisite skills were unclear. Coding experience was not emphasized, but a lot of students with stronger math backgrounds were ground to a halt by trivial Python bugs. Those with a weaker math background could often figure out mechanically how to make matrix dimensions work, for example, but lacked intuitions why things worked and how to apply that to generating a creative solution for the next problem. There were a lot of cases where it was not too difficult to generate some mechanical solution for a problem while having no idea why it worked, what it did, or what the student was supposed to learn. The month of Sahand writing slightly tweaked alternating minimization algorithm after alternating minimization algorithm with inconsistent notation was rough and felt like it didn't go anywhere or convey anything intuitive or important about the material. Also, problem sets usually had problems when they were posted and had to be updated and compared by students 2 or 3 times. There was often a disconnect between expectations for a complete answer that Sahand would express in office hours and that the TFs grading the problem sets would encourage in office hours. The TFs were much more reasonable for undergraduates.",
    "The course was a little off-balance. It was advertised as a sort of introductory course to Data Science, but don't be fooled - it was way harder than that and my \"fun\" course for the semester took quite a difficult turn. One of the psets literally took me over 50 hours and I was still not finished. The course also failed to really give much background mathematically on matrix calculus so I was rather lost at first, having taken the prerequisites a few years before. Some of the stuff was very cool though and it was great applying it in the homework and seeing how PCA was put to work, for example!",
    "In part because of the attempt to create a new major, this course was targeted at students of a variety of skillsets. Students with a strong background in multivariable calculus and linear algebra were bored by the attempts to simplify the presentation of this material so that it was more accessible, and these attempts caused the presentation of the material to take longer. After discussing the notation used in the course with other students, my strong belief is that non-standard mathematical notation impedes learning. Most students are familiar with standard mathematical notation. Most students also know how to code. Mixing mathematics and python makes it harder to understand the mathematics, which makes it harder to implement the algorithms in python. I would have preferred Matrix algebra to the attempts to write equations using sums. Students who took linear algebra, a prerequisite, should be comfortable doing matrix multiplication.",
    "Lecture and PSETs didn't really have a lot to do with each other sometimes.",
    "I thought the course was interesting and provided useful skills. As it is the first time teaching the course, there were certainly some bumpy patches, but I was overall impressed with how well they were able to provide feedback. In general you were able to check your homework answers instantaneously to see whether the numerical answer you got was correct. Improving feedback like this--and making the grading of each assignment more clear--would be an improvement I expect them to make as they get more experience teaching this course.",
    "Variability in lecture & homework quality depending on which professor was lecturing\/creating the problem sets. Hopefully next year there's more standardization of lectures and homeworks. Very sporadic feedback on problems sets.",
    "I think that it might be better to have the workloads of the problem sets either better balanced or more obvious beforehand. The homework 5 really came out of nowhere in terms of work. Still, this was a fantastic course and I was so happy to have been a part of it.",
    "This is the first time the class is taught, and we covered a variety of different topics in data science. It did feel at times a little disorganized, but all in all, I loved that some of the material was indeed cutting-edge, but yet also simple enough that we could understand it.",
    "This class is all weaknesses. Do not recommend.",
    "Good class, with cool problem sets and good lectures. Sahand's lectures were hard to follow and not as good. Lecture notes were sometimes good and sometimes useless. Some problem sets were awesome some were kind of dumb. Basically, it is a great topic but the execution needs a little work - which is fine for a first-time course.",
    "The two lecturers had very different styles. Dan was very organized and presented information in an understandable way while Sahand's lectures were faster and a bit beyond the scope of the class leaving many confused. It is a good course to practice programming in python and understand more of the principles behind data science. There are only problem sets in this class.",
    "STRENGTHS: good lectures; interesting homework for the most part. WEAKNESSES: not having probability and statistics as prerequisites made doing optimization over and over again throughout the whole course kind of tedious.",
    "The course was pretty interesting; the material could be fairly fascinating at times. Dan and Sahand were pretty good professors, though Dan was probably a bit more clear. Homework was fairly reasonable, though a bit inconsistent; some of the homeworks took barely a couple of hours, while one of them quite memorably took probably more like 25. I think the theory behind the math could be developed a bit better, though.",
    "Strengths: Interesting topics. Spielman was an engaging lecturer. Most PSets provided clear direction and assistance than made the homework modular and doable for someone lacking a strong coding background. Weaknesses: I felt that some of the lectures during the matrix factorization unit were circular and not well clarified. A few of the PSets need to improved such that the goal and the problems associated are more clear. One of the PSets required applied math far beyond the prerequisites.",
    "I thought a great aspect of the course was that it covered a lot of topics, and didn't hold back from going at a quick pace through a lot of cool material. If the goal of the course was to make students want to learn more data science and take more courses, I think it succeeded. Another great strength of the course was how interesting and well constructed most of the problem sets were. They were very fun. One thing I would have changed was that I felt like I missed out on getting a basic understanding of some of the material because the problem sets were so focused on posing interesting problems and going beyond the lectures. It would have been nice to also include some more basic questions to get us to solidify our knowledge of the basics.",
    "Dan's teaching was very strong, but not cohesive with Sahand's part of the course. Would be better if taught just by Dan.",
    "We hit on a lot of topics which were all interesting. We got a fairly high level of math and theory (relative to other applications classes) and didn't really skimp on the applications either. The examples felt like they were very real world, and required very interesting problem solving to deal with. ALSO: The best scaffolding of problem sets with excellent test cases to make sure we're getting it right ever. CONS: Problem set 6. I spent 40 hours on it. I swear, there has got to be a way to make sure that doesn't just crush people. 5 and 7 were way too easy for me, so I don't want to argue the class is too hard. Just that one set. Also, there is a lot of math theory in ways where I didn't feel it was necessary. Possibly the theoretical professors not realizing how hard that stuff is to read, and possibly bad prioritization. Or possibly just me being off. Also, we have to do better about grading problem sets transparently.",
    "One needed to be comfortable with proof based math in order to do the class. The prerequisites listed did not reflect this",
    "Class was pretty unorganized, but that was to be expected as it was the first time it was offered. There was some super good material in there, I definitely would recommend this class in the future as there is probably going to be better organization.",
    "I thought this course was an excellent idea that requires a bit more refinement to be completely solid. That is, I very much approve of the course topic and the overall structure, and I got a lot out of it because of those things. However, as is understandable for a new course, there were a few kinks to work out. The main thing was that the difficulty of the problem sets fluctuated wildly: One took me less than 2 hours, while another took me over 40 hours. Thus, evening that out a bit would be helpful. Also, the problem sets often contained typos (so often that I learned not to start the problem set too early so that I could wait for announcements correcting typos!), so I think it would be useful to make sure to run the code before publishing the assignment. Finally, I think more review early on of linear algebra would be useful; even though I had taken linear algebra, I still struggled with much of the early math. Finally, I would have appreciated more feedback on the problem sets, as for many of them we never learned why we were marked down.",
    "Homeworks were great, I stopped going to lecture pretty soon. Thought the course was too math-y for my taste, wish it had been advertised as such \/ the math in lecture was more approachable for a plain CS major. The course fills a huge need for more ML\/data science classes so really glad it was taught and sure it'll get better next year.",
    "This was a pilot course, and I thought it was very very good for a pilot course. The biggest strength of the course was that problem sets were well designed to teach the material from the course. This was incredible for a pilot course. However, the biggest weakness of the course was that the two lecturers did not seem very well synced on the material they were teaching. This led to a bit of discontinuity with the lectures. I also found the problem sets that were more math oriented and less compute science oriented to be not as well designed.",
    "This course definitely covers very useful material, but I didn't necessarily realize it during the course (only realized it when many of the concepts came up in job interviews). I didn't feel like I learned much from the lectures, possibly because the math was too complicated for me, but I learned a lot from the homework assignments. They used a really good platform called Jupyter to structure the homeworks. Some of the more mathematical homework assignments could have been more clearly explained. Because the course was new this year, and co-taught by two professors, some of the lectures were a little disjointed, but this might be fixed with future planning.",
    "The course gave a great introduction to a plethora of topics, however a lot of the material required understanding beyond the prerequisites.",
    "Good content, lectures sometimes hard to follow",
    "The material was very good. The teaching was good. A weakness is that the homework difficulty varies greatly throughout the course.",
    "This class had the potential to be awesome, and I hope it will be in the future, but I can think of very few strengths for the way it was taught this year. I liked that the class was very applied because I feel like I really did get more comfortable with python and numpy and implementing algorithms. But I had to teach myself how to do a lot of what was necessary for the problem sets because so many of the lectures were poor and unhelpful. I really did get a lot out of Dans lectures, and I think the class would have been a much better experience had he been the only instructor. The main weakness was that Sahands lectures were just poorly organized and impenetrable. I recognize that my linear algebra background was maybe not as strong as it should have been, but I know many people with very strong math backgrounds who had no idea what he was talking about when he tried to present the mathematical foundations for the course and who really struggled with putting it into practice for the problem sets. Another weakness was just the overall poor level of organization. The problem sets were rarely released when promised and the grading was super slow. When the problem sets were released there were almost always significant mistakes that had to be corrected.",
    "Strengths included very well-thought out problem sets. As this was a pilot course, I was extremely impressed with how each problems set covered a wide variety of interesting problems that included both applications and a little theory. It was also strong in that we went through more of the math behind the data science than other basic machine learning\/data science courses do. One weakness, however, was that sometimes doing the math on the board in class became tedious and hard to follow, so class time could have been better spent showing other things.",
    "It covers great topics, but while Dan taught at a level appropriate for a 400-level CS course, Sahand taught a graduate theory course, which made rhen200-level Listing of the course very innacurate. This divide stretched to homeworks as well -- Dan wrote very nice and interesting homeworks, whereas Sahands were generally underspecofied amdnsometimes downright impossible -- on his Multinomial topics model homework, the TAs had no real clue how to help, and very reasonable piazza questions weren't answered for days until Sahand decided to get around to it. At the he end those three this is a new course, still goingnthrough birthing pains, and I expect the next iteratiok to be much better.",
    "strengths: broad topics taught by two professors weaknesses: the theory was not fully explained. Specifically, the instructors taught the theory of machine learning only using linear algebra. It should be taught with statistical explanation\/intuition. This course should list some probability and statistics background as prerequisite. Nevertheless, the materials were very interesting overall.",
    "the psets could have been more rigorous",
    "This course covers a lot of techniques in computer science and data science. It is a good introductory courses. The weakness is : the outline of the course is not very clear. The connection between different parts is not clear to me.",
    "The curriculum was ambitious and fast paced, a lot of material was covered. The homework spec kept changing, but that is hopefully a hiccup associated with this being the first time the class was taught. Support on Piazza was good at times, but sometimes instructors were completely unresponsive for multiple days. Line-by-line rubrics were helpful when available, but sometimes were not made for all assignments. It is good to have homeworks where it is possible to achieve some partial credit even if you don't solve the overall problem, it was very discouraging to have so many \"all or nothing\" problems.",
    "I think on of the strengths of the course was that the material was inherently interesting from both a theoretical and practical perspective. I really liked that the course was built around psets rather than tests or big projects, and I liked doing the psets in jupyter notebooks. The main weakness was the organization of the courseit was sometimes unclear how what we learned in one lecture related to the previous or succeeding lecture.",
    "The key strengths of this course were the excitement and passion of the two instructors and the interesting subject matter. The problem sets were often exceedingly frustrating, but simultaneously rewarding once completed. However, two primary weaknesses of the course stand out in my mind. One was the extremely uneven pacing of the course. Problem sets took anywhere from 10 to 40+ hours to complete and were not spaced evenly throughout the semester. This made planning difficult was a major source of stress on certain weeks. A second weakness was the disconnect between the lecture material and the problem sets. While the problem sets were primarily programming, the lectures were generally much more theoretical. In certain instances this worked well, but at other times, this was a major issue. I think that matching the lecture material more closely with the skills required to complete the problem sets would be one possible way to improve the course. Furthermore, I think that either the difficulty of the class or the prerequisites should be changed. I had previously taken just one programming course and felt completely unprepared for the level of programming skill required to complete the problem sets. The two guest lectures during shopping week about Python were so simple that I thought I would be well prepared, but as the first programming assignment demonstrated, I clearly was not. My math background was much stronger, but I still occasionally needed to draw on more advanced mathematics to follow along in lecture (such as hessian matrices)."
   ]
  },
  {
   "question_id": "YC409",
   "question_text": "Would you recommend this course to another student? Please explain.",
   "comments": [
    "Unless the class becomes a lot more organized and clear, no",
    "Only take it if you are well-prepared - e.g. know how to differentiate functions with respect to vectors and matrix.",
    "As far as I know, Dan and Sahand are definitely two of the few professors at Yale who have been actively contributing to the fields in the past couple of years. (Like, see their publications!) I cannot think of better qualified teachers at Yale to teach this new course, which I believe is intended to be an intense introduction to machine learning and data science and is going to be a core course of the new major of data science and statistics. However, I cannot help thinking that we wasted the great resource. First of all, I personally think a basic understanding of statistics, like the STAT 241 level, is necessary to understand what we were doing. It was a tragedy that we had to even avoid mentioning the concept of maximum likelihood and to reduce everything to merely convex optimization. What does the logistic loss even mean? It would have made so much sense, had we derived it from the log-likelihood. For example, look at Stanford CS 229 by Andrew Ng and John Duchi. http:\/\/cs229.stanford.edu\/. You will see how all the pieces you learn in probability theory come together. Having said that, this was a new course. Again, I do believe Sahand and Dan are great professors. I hope they will make STAT 241 prerequisite from next year on and use a bit more \"natural\" language to teach the materials.",
    "Yes, but have above the pre-reqs, and prepare to be often frustrated. Also, if you're not a CompSci, Applied Math, or Math major, you shouldn't be in this class (and idk why you would be). Dan Spielman is wonderful, Sahand is not, but overall you'll understand a lot of the ideas if not actual implementation of data science basics.",
    "Since this is the first semester that this course is taught, I think it will improve along the way. I will recommend this course to students who are interested in data science and statistics.",
    "There are some major problems with this course, which I know the staff are well-aware of and trying to fix. I might give it a couple semesters to iron out the kinks. Dan is great but he didn't teach that much. Sahand is obviously smart but is still getting the hang of expectations for a large lecture full of diverse undergraduates, not CS and Math grad students. I did learn how to use Python.",
    "Despite all the struggles I had with this course, I still recommend it. This was the first time it was offered so they're learning and its offering can only be improved. Some of the stuff we got exposed to was magical and really cool! It was totally worthwhile learning about minhasing and PCA for example (these topics came up in 2 of my other classes and I'm not even a CS major!). While I really had a lot of difficulty and spent over 50 hours on one nightmarish problem set, I think I learnt a ton and as a non-CS major and kinda amateur programmer I feel confident applying for jobs now saying I can code in Python (not for software engineering, of course, but) to do some data analysis!",
    "I would recommend this course, as the material is extremely interesting. However, there is room for improvement in the lectures. Dr. Spielman is a wonderful instructor.",
    "Data science is cool! But the class was a little confusing.",
    "Yes, I thought this course was very useful for anyone who wants to explore the power of machine learning.",
    "This class has great promise, but I think just succumbed to the typical \"first time\" woes. Some of the psets were nicely broken down and manageable; others told you to implement something without breaking it down or giving you any help. Sometimes it felt like the lectures did not relate to the psets, or the lectures were so hard to comprehend that you didn't even know what they were about. The topics covered are very useful in data science, but they could have been taught better.",
    "AAAA. Okay. Dan 9\/10, Sahand 3\/10",
    "Absolutely take this class if you are interested in data science or statistics and want to work in the field. It teaches you all the relevant skills.",
    "7 problem sets and no exams, the problem sets varied greatly in difficulty, some took 5 hours, some took 25 hours. All in all, a great introduction to data science though, especially for students who are not CS majors, but in related STEM majors (e.g. Econ, Math, Engineering) who are interested in data science. I took the class credit\/D and found the workload manageable, skipping a couple of psets. If you take it for credit, though, you will need to put in more work, but it's still possible to get a good grade, because the class is not graded on a curve (A: >95, A-: 90-95 etc.).",
    "No. DO NOT TAKE THIS CLASS",
    "It's better than the other CS classes I've taken. Light-ish workload (you can skip a pset, and there are only 7 to begin with). No final. I thought the material was cool and relevant to things I might do with my life. Take it.",
    "This course was a bit of an experiment this year as it was the first year it was taught. Hopefully, in future years it will be a bit more organized because this class has a lot of potential. If you are interested in data science and have the right background it's a good class. Dan was much better than Sahand at explaining concepts.",
    "Take this class if you have the opportunity. It involves a lot of work, but it's not unbearable, especially if you start the PSets before the day before they're due. The material is SUPER interesting and applicable. My friend had a job interview, and they asked her all about the concepts we learned in class. Sahand can make things confusing sometimes, so pay special attention when he lectures. Dan usually makes everything clear.",
    "This is a good class and a must-take for future study in data science. It teaches a solid suite of optimization techniques and algorithms, albeit on problems that are relatively easy to formulate without a probability\/statistics prerequisite, which definitely hamstrings the class. Dan and Sahand are both great lecturers, in my opinion. The entire grade is based off homeworks which is nice but these are not trivial problem sets (maybe 6-10 hours each if you're aiming for an A, which required a 95%+ raw score), with a couple of 15+ hour sets. There are good resources for this class in the TA (Natalie is great), ULAs, and professor office hours. Overall, sound class, but don't go into it expecting it to be easy or all that straightforward even if you have a background in data science\/machine learning.",
    "It's a good intro to data science, so yes.",
    "Yes. I feel like I learned a lot of techniques I will use later on. However, I feel that after the course is improved in terms of the quality of lectures and PSets, it could then move slightly faster to cover even more.",
    "I would definitely recommend this course to another student. It seems like it might overlap a lot with other courses, so perhaps it is best as an early introductory class or for someone who does not plan to go much further in studying data science.",
    "This course was interesting, and more or less fair, and will probably get better. Dan's teaching was awesome and understandable, and his assignments were doable and somewhat fun. Sahand's teaching was very hard to follow, and his assignments were impossible. The two teaching styles were very different and did not work super well together. I think they will either be more cohesive next time or separate. The material learned is very useful and will be highly valued during interviews and by employers if you're looking at working with data. It was a pretty good course overall, but it did take up a lot of time, especially during Sahand weeks, where my friends and I spent about 50 hours trying to work out the problem set. Most assignments were more reasonable, at around 12 hours, and you had a week and a half to do most of them. 7 homeworks, no exams. If you put enough time in, you should be able to get a good grade.",
    "Already have. Thinks it's great, but will be much better next time.",
    "I would recommend it. I will say that this course had many kinks to work out; the problem sets were often excessively difficult or had typos that made the code not work, and I sometimes felt like background knowledge was assumed that no one in the room actually had. However, the instructors are very receptive to suggestions, so I expect that by next year most of those kinks will be worked out, so that what was a pretty good course this semester will be a truly great course next year.",
    "Learn the math behind ML techniques. Homeworks were very interesting and useful to learn pandas+numpy+spark etc. As a plain CS major who hasn't taken too much math, I found it to be a little too math-y and not applied enough.",
    "I would recommend this course, though beware that this course did not feel like an intro course. I have a pretty strong math background, and I struggled with some of the math in the course. I really enjoyed most of the problem sets, and the workload is not heavy at all. The course is only going to get better as it develops.",
    "This course might be the right fit for you based on what you're looking for. As someone interested in bioinformatics, this course was a little too mathematical and not programming-intensive enough for me, but I still learned useful skills. A lot of people are probably attracted to the course because it is \"data science,\" which is a new and growing field, but make sure you know exactly how this relates to your interests.",
    "This class was very challenging, however it was the first year it was offered and I think despite the challenges there was a lot of good material covered. I think as the course matures over the years this class will become even better.",
    "Good, marketable skills.",
    "Yes, this class is a great introduction to data science.",
    "Hands down the worst class Ive taken at Yale. The course either needed different mathematical prerequisites, a better instructor to cover the mathematical parts of the class, or both. By the end of the semester, I didnt even go to class when Sahand was lecturing because learning it on my own from a combination of notes and the internet was a more effective use of my time. Sahands lectures were also awkward because Dan would often catch mistakes or ask annoyed questions in the middle of them, which just highlighted the fact that he didnt really know what Sahand was planning to lecture about and hadnt thought about how to integrate it into the syllabus. The problem sets were hard and took a ton of time. That would have been fine if I felt like the instructors were putting in the same level of work that we were. But the whole class was an organizational disaster that seemed to stem mainly from laziness. The schedule they announced for releasing problem sets was never followed and the grading was super slow so you never really knew where you stood. They always said they were going to release sample solutions, but rarely did, so you never really knew what you did wrong either. By the end of the class, the instructors just stopped answering questions on Piazza and via email, which was pretty stressful. It would have been one thing to just say that they wouldnt be able to answer questions for the last couple of days before the problem set was due, but just dropping off the face of the earth didnt feel fair. This class had two saving graces: 1) Dans lectures and problem sets which were actually pretty interesting. 2) The fact that there was no final, because I definitely would have failed and I dont think I would have been alone.",
    "I would absolutely recommend this course to another student. Professor Spielman and Professor Negahban are fantastic, data science is really fascinating and useful, and the structure of the class makes grading transparent and fair.",
    "It covers great topics, but while Dan taught at a level appropriate for a 400-level CS course, Sahand taught a graduate theory course, which made rhen200-level Listing of the course very innacurate. This divide stretched to homeworks as well -- Dan wrote very nice and interesting homeworks, whereas Sahands were generally underspecofied amdnsometimes downright impossible -- on his Multinomial topics model homework, the TAs had no real clue how to help, and very reasonable piazza questions weren't answered for days until Sahand decided to get around to it. At the he end those three this is a new course, still goingnthrough birthing pains, and I expect the next iteratiok to be much better.",
    "Yes, this is a pretty good introduction to data science. I became more and more interested in this field of study thanks to this class. Some of the psets were quite hard and time consuming, but looking back, they really helped me to improve my understanding of the materials and my programming skills. This class is worth taking.",
    "Yes. I would recommend this course for any one who is interested in data science.",
    "This is the first year the class was taught, so it had a lot of growing pains. I think that with some polish, this will be a very fun class to take to get a good survey of the theoretical basis for your favorite ML packages. Hopefully there will be a textbook too so that people can look things up as necessary.",
    "Yes I'd recommend it but obviously only to someone with the right math and programming background.",
    "If the course was unchanged from this year, I would not recommend the course. It was too disorganized, too much work, and too frustratingly difficult to suggest that someone else take the course. That being said, this was the first year this course was offered, the material was fascinating, and the professors were passionate and genuinely excited about the course material. Thus, I believe this course will be much better when it is taught again and thus could likely be worth taking. Before committing to the class, I suggest getting two assurances from the professors. One, that the course will be better organized and the work spread more evenly throughout the semester and secondly that either a stronger programming prerequisite has been implemented or that the professors are committed to spending more time teaching Python, or that the problem sets will require less technical knowledge of Python."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "262",
  "section": 1
 }
}