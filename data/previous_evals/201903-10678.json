{
 "crn_code": "10678",
 "season": "201903",
 "legacy_coursetable_course_id": 52929,
 "enrollment": {
  "enrolled": 252,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC402",
   "question_text": "Your level of engagement with the course was:",
   "options": [
    "very low",
    "low",
    "medium",
    "high",
    "very high"
   ],
   "data": [
    1,
    5,
    11,
    65,
    111
   ]
  },
  {
   "question_id": "YC404",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "fair",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    0,
    8,
    29,
    70,
    86
   ]
  },
  {
   "question_id": "YC405",
   "question_text": "The course was well organized to facilitate student learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    1,
    6,
    15,
    63,
    108
   ]
  },
  {
   "question_id": "YC406",
   "question_text": "I received clear feedback that improved my learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    3,
    13,
    46,
    69,
    60
   ]
  },
  {
   "question_id": "YC407",
   "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    3,
    27,
    75,
    88
   ]
  },
  {
   "question_id": "YC408",
   "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    0,
    17,
    66,
    111
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC401",
   "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
   "comments": [
    "C, Python, SQL, Lua",
    "CS50 taught me so much. I learned how to think and apply logic like a computer to solve unique problems. Each week had a new learning curve that I had to master, but ultimately it was such a rewarding experience. I learned programming, web development, and debugging in the course.",
    "Basic coding skills in a variety of computer languages; how to debug and trouble-shoot in coding.",
    "This gave me a very strong foundation in computer science. I can confidently code in multiple languages and produce personal projects without anyone's help.",
    "general coding, but no real knowledge of languages or in depth",
    "A really good introduction to coding in several languages and for several purposes. Also a good course in logical and algorithmic thinking. Also a great understanding of how computers and common digital systems work.",
    "Programming skills",
    "Understanding of how computer works, programming languages.",
    "I learned C, Python, SQL, swift all in one course. it is a great opportunity to explore new things",
    "CS50 (CSPC 100) was my first programming class outside of short efforts via online learning resources (e.g. Code Academy). In that respect I gained a whole new set of knowledge and skills that I didn't have from the onset. I didn't know basic programming concepts nor did I really understand how computers\/technology actually works. I'm leaving the class with an even greater appreciation for computer science, programming, and those who devote their careers to the field.",
    "Foundational coding skills, this class was absolutely critical to my understanding of computers and programming.",
    "some coding skills",
    "Programming in Python, C, HTML, CSS, SQL, and Javascript.",
    "I audit this class and it turned out to be a wrong decision. Self-control is more difficult than time management.",
    "I learned the basics of computer science which has changed the way I look at the internet and other electronics.",
    "I learned how to think like a computer science nerd. I am now the epitome of a nerd. I speak in binary.",
    "Coding and overcame my fear of computers",
    "I learned how to approach computer science problems, as well as the practical knowledge of multiple coding languages such as C, CSS, HTML, Python, Javascript, and SQL.",
    "I have learned a lot about the basics of computer science. We have accomplished useful problem sets and projects with many programming languages. It is a useful introduction to construct the entire picture of cs.",
    "How to think about coding and how to code",
    "I learned tons about programming bith in C and in Python. Most notably, I now feel comfortable developing basic web applications in Python using Flask.",
    "This class taught me how to think like a programmer. I learned to approach problems in new and innovative ways and came out of the class so much more knowledgable than when I entered. It takes persistence and is frustrating at times, but it only makes the course more worthwhile in the end. Don't be intimidated by the reviews. It seems as if the workload has decreased significantly in recent years. Definitely a must-take course at Yale!",
    "Basic knowledge of programming and pretty comprehensive overview of all the programming languages like C, Python, Javascript.",
    "Critical thinking, programming in C, Python, and other web programs (HTML, JavaScript, etc).",
    "I learned basic programming knowledge, and I more importantly learned how to think like a programmer.",
    "Learned how to code in C, Python, and lua (specific to the game track). Learned the fundamentals of computer science and the logical thinking behind it. It required a lot of problem solving and analytical thinking. The problem sets covered a lot of different subject matter. At the end of the class, students were able to choose between three different tracks: web, mobile, and game.",
    "Basic programming, modular\/logical thinking, also creative problem-solving skills",
    "Learned basic coding.",
    "Heavy emphasis on C in the beginning then transition to python with a week of sql and ending with a project of either a game, website, or app.",
    "I learned so much. Literally so much. How to code, what coding is, how to make websites, concepts like algorithms, arrays, run-time notation, and so much more.",
    "I learned so much about computer science in a variety of different programming languages from a very practical point of view.",
    "I not only learned how to code in multiple different computer languages (Python, C, HTML, Javascript, etc), but also how to learn new computer languages effectively and efficiently. I developed skills in debugging code, writing concise code, and even simply solving problems. I also strengthened my time management skills and found that I love computer science.",
    "How to code, CS concepts.",
    "Basic competency in programming with C, Python, and Lua, as well as a glimpse into SQL. Furthermore, the class heightened my problem-solving abilities through challenging PSets.",
    "Introduction to the ways that computers work, problem solving skills, introductory programming skills in C, Python, Scratch, SQL, HTML, CSS.",
    "A ridiculous amount of computer science, both programming (C, Python, Javascript, HTML, CSS) and problem solving algorithms",
    "I learned how to think more logically and how programming fundamentally works. It seemed like this mysterious box before I took the course and now I know its much more open to anyone interested in using computer science in their lives. I learned so many languages and the process of solving a problem through coding",
    "Quite frankly, I learned the basics of coding. In class, we first programmed in C, then transitioned to Python. We also worked with SQL. The last several weeks of the course split into three \"tracks:\" web, mobile (iOS and Android), and games. Students could choose which to pursue. In our C classes, we learned about algorithms, data structures, arrays, and more. During our time in Python, we learned about learning a new programming language once you know the computer science basics. In the web track, I learned Javascript, HTML, CSS, and about HTTP. Through the final project I learned how to work with Google API. Beyond the coding itself, this class also taught me a systematic way to approach tackling problems.",
    "I learnt the basics of how to think about how to code in C and python. Was further given the tools to go on and learn other languages by myself to complete my final project and website track. Overall a class that teaches you about problem solving with a thinking that can be applied to many other fields",
    "I learned some basic groundwork for coding and the world of computer science.",
    "I learned so so much: coding in Python, C, SQL, and learning the functionalities of HTML, Flask, CSS, and so many other things. Beyond those practical skills, I really feel like I learned the basis of what computer science and coding is.",
    "So many -- basic proficiency with C, Python, SQL, HTML, JavaScript, Flask, CSS, and I'm probably forgetting a few. General skills on how to approach problem solving while coding. The ability to teach myself a new language from scratch based on the skills gained from learning others.",
    "I learned how to code from scratch. We learned C, SQL, Python, and I learned Swift for my final track.",
    "I gained basic knowledge in C, Python, and CSS\/HTML\/javascript. This course also taught me about how computers work on a basic level (ex. how computer programs compile, the logic behind systems that we use, and why certain programs have been optimized in different ways than others).",
    "Learned a lot about coding.",
    "I learned how to program in several languages (C, Python, SQL, HTML, etc.) and I developed a new way of thinking and addressing problems methodically.",
    "I learned C, Python, html, SQL, and css. I learned how to think logically and attempt to solve problems when they arose.",
    "I learned what programming is, and the basics of programming in C and Python, as well as some web development.",
    "I learned how to code, pick up computing languages quickly, understand low-level computer architecture.",
    "I learned how to code in C, Python, HTML, CSS, Javascript, SQL",
    "Basic programming and computer science skills, understanding of how CS works, confidence in problem solving.",
    "I learned a lot about programming.",
    "I learned a great deal of both theoretical computer programming concepts and practical skills, including practice in C, SQL, Python, and from the web track, HTML, CSS, and Javascript.",
    "I learned the basics of C, Python, SQL, HTML, CSS, and JavaScript. I am less intimidated by coding now.",
    "I learned how to proficiently code in C, Python, and SQL. I gained a lot of general coding and quantitative intuition that I think will come in handy in later years. I also think that I pushed myself in a way I've never done before, and I've gained the insight of knowing when to ask for help and when to take some time to figure out an issue on my own.",
    "Lots of coding! Website building, C, python, HTML, etc.",
    "-think more methodically; -program procedurally; -represent and process information; -communicate succinctly and precisely; -solve problems efficiently; -recognize patterns among problems; -decompose problems into parts and compose solutions thereto; -operate at multiple levels of abstraction; -separate design from implementation details; -infer from first principles how systems work; -assess the correctness, design, and style of code; -teach themselves new languages; -identify threats to privacy and security; -read documentation, drawing conclusions from specifications; -test solutions to problems, find faults, and identify corner cases; -describe symptoms of problems precisely and ask questions clearly; and -identify and quantify tradeoffs among resources, particularly time and space.",
    "I learned about how to program and how to learn programming languages quickly.",
    "I got an overview of computer science and a few of the key languages! I learned how computer scientists think, and covered A LOT of breadth and surprisingly a decent amount of depth.",
    "I learned how to code in Python, C, HTML, SQL, and Javascript. I learned how think \"algorithmically\" and critically about how to break down a problem or procedure into many smaller \"actionable\" blocks of code. I learned how to break down something big into smaller things.",
    "I developed a lot of computer programming skills and also learned how to follow what is basically an online class.",
    "I went from absolutely no knowledge of computer science to a partial knowledge of a range of topics and a proficiency in several languages.",
    "Fundamentals of computer science and computer programming, as well as the importance of both in our increasingly technology-driven society",
    "I came in not knowing ANYTHING about Computer Science. I came out wishing I had taken this course as a freshman so I could have double majored with my current major and CS. I learned a lot about coding and the logic behind it, as well as various languages like C, Python, SQL, and HTML.",
    "basic programming skills, rough understanding of how computers work & how the internet works, how to build a website",
    "Basic programming skills, logical thinking mindset and how to tackle a seemingly complex problem from scratch",
    "A LOT of coding experience, heavy workload coping, deeper understanding of how computers work \"uNdEr ThE hOoD\"",
    "Basic insight into computer science",
    "This course taught me how to break a problem down into separate parts and figure out the solutions to those individual parts. I learned valuable lessons about solving complex problems with well-thought-out algorithms that take specified inputs and give the desired output. I believe that this course is an excellent foundational course for CS, and I am glad that I took it.",
    "I learned the principles of computer science and how to think about creating software. I learned C, python, SQL and HTML\/javascript.",
    "I developed so many skills. I started this course with no computer science background and ended being able to code websites myself!",
    "I gained a solid foundation of basic programming skills",
    "Basics of Computer science and coding. C, Html, Java, python. Potential to prepare you for an entry level job in the field.",
    "I am now able to code a fully functional website using multiple languages.",
    "A ton. Very good intro to CS.",
    "I acquainted myself with several programming languages and gained a rough understanding of what computer science as a field is all about.",
    "I really think I learned how to code.",
    "I gained a greater understanding of computational thought.",
    "Basic computer programming skills and creative problem solving.",
    "I learned a variety of programming languages.",
    "Learned a wide set of computing skills in a variety of languages including C, Python, SQL, and HTML",
    "A lot",
    "I learned a wide array of basic coding skills",
    "basic computer programming knowledge",
    "Learned how to code\/program with no prior background in the subject. Teaches analytical thinking.",
    "So many. How to manage my time, how to ask others for help, the importance of working together, etc",
    "Basic programming with C, Python, and SQL. I also learned how to teach myself more languages.",
    "Think in a way that dissect processes down to step by step coding",
    "Programming in C, python, Lua, and the game engine Love.",
    "I learned how to program and think about complicated cs problems. I also learned multiple programming languages.",
    "I became more familiar with programming language in C and python",
    "Through CPSC 100 (aka CS50), I became comfortable with C, Python, and Lua, and learned how to start thinking like a programmer when approaching new problems.",
    "I learned how to program in multiple languages.",
    "Learned to do basic programming in C, Python, and a little Javascript\/HTML\/CSS. Maybe I'm just imagining it but I feel like I became more logical too.",
    "I learned a wide breath of knowledge and skills in various areas of computer science: learning many different languages and their applications.",
    "Learned about python, sql, c and swift.",
    "By taking this course, I learned the basics of computer science. I now have a basic understanding of how computer science works, and I have briefly learned several languages that I feel comfortable using moving forward with computer science.",
    "A general computer science problem solving mindset, some c, python, and a little of other languages",
    "As a graduate student in the arts, this class helped me redevelop long-latent skills in logical and mathematical thinking - a welcome opportunity to use the other half of my brain, so to speak! I learned a lot about problem solving, algorithmic thinking, and how to be creative within the confines of even highly structured domains like programming.",
    "I learned a strong basis of c, python, JavaScript, and html.",
    "I developed coding skills as well as project management skills",
    "C, Python, Java, SQL, HTML",
    "I learned how to code.",
    "We covered a broad range of languages and developed some concrete problem solving skills with respects to computer science.",
    "Learning to program, understanding how the languages and how to problem solve.",
    "I learned how to program in C, python, SQL, HTML, and JavaScript and feel comfortable with certain computer science subjects (such as recursion, big O notation, memory management), after not knowing anything and having little experience programming.",
    "The basic ability to code! We learned C, python, SQL, and I learned swift for the iOS track. CS50 does a really good job at teaching you how to code not how to learn ____ program. I gained a huge appreciation for how complex technology is, and a working understanding of how computers turn ones and zeros into what we want them to do. This class also taught me that coding is much more open-ended and designed based than I had previously thought. Theres never just one right way to do things!",
    "A great course for learning about various fundamental concepts in computer science, I had some previous experience but I still found the course intriguing and interesting.",
    "I learned some basic programming.",
    "I developed my problem solving skills, and went from knowing nothing about coding to knowing a variety of languages and designing my own app. I also got a lot better at working with others to solve problems.",
    "I gained so much from taking this course. To state the obvious, I learned new programming languages that I was unfamiliar with, but I also gained the great work ethic that came along with it. I learned the eventually rewarding process of debugging, and the most efficient ways to go about that. I learned how to use my resources and be self-sufficient when programming by collaborating with peers or by going down a road of numerous google searches.",
    "How to think like a coder How to be patient.",
    "I learned the basics of all sorts of computer science languages, including C, Python, HTML, SQL and JavaScript. This course covers a lot in these languages, but is really good to get a baseline of programming knowledge and have the ultimate ability to engage in future computer science-related projects.",
    "I learned C, SQL, Python, which are all languages that are useful. I learned how to program and have a developed a good understanding of how to code.",
    "I developed proficiency in Python, SQL, HTML, CSS and JavaScript which I did not when I started",
    "This course was very helpful teaching me how to code",
    "I learned and developed many introductory computing skills - variables, abstraction, iteration, efficiency, security, tradeoffs, etc. I was also introduced to many different languages, including C, Python, SQL, and HTML. Lots of content covered in a way that emphasizes application to problems.",
    "Critical thinking skills, how to find, learn, and teach yourself new information, problem solving, debugging",
    "Learned how to code and how to think down to a fundamental level. We touched on programming languages such as C, Python, SQL, Scratch etc.",
    "broad, practical knowledge of a range of programming languages; overall, a solid foundation for future explorations of computer science",
    "I learned the basic fundamentals of programming and got to do both back end and front end development. By the end of the course, I had built a web application.",
    "I learned the fundamentals of CS50 and how to debug (use google).",
    "Coding in multiple languages",
    "Learnt new programming languages.",
    "I went from no coding abilities to feeling confident about fundamental skills! Great class!",
    "Use of C, Python, SQL, HTML and Javascript to create new things and solve problems Logical thinking and problem solving How not to panic at the face of completely new information",
    "The course has far exceeded my expectations. I went in thinking that it would be an intro class repeating many concepts I already knew, but this was not the case. I am at once humbled and newly confident in the skills that I've developed over the course of this course. The workload was immense, but every single part of it was conducive and necessary to my learning. I totally see why people who took the class before were so obsessed with it, and I hope to become a TF next semester.",
    "Thinking programmatically, learning basic coding",
    "This is a great class to take if you're looking to learn a lot of coding skills in a short amount of time. You learn how to teach yourself how to code also so you can continue to advance your skills far outside of what is taught in lectures.",
    "Basics for computing and programming",
    "How to learn different languages, solve problems",
    "I learned a ton about general computer science and then 5 programming languages",
    "This course helped me refresh my general programming knowledge. It also taught me HTML and related languages.",
    "coding skills and computational thinking",
    "I gained a solid understanding of computer science basics.",
    "I learned a lot about programming, especially in C, and a bit about how computers actually work. I also feel that I've gained at least a reasonable ability to think like a programmer. After taking this course, I definitely feel up to the challenge to pursue more advanced topics in computer science. The instructors for the course also seem to truly understand that the way to learn programming is by doing it, and doing a lot of it. As a result, I now feel that, if I were asked to write a program to solve a simple problem, I would be able to do so, which is a lovely feeling to have. David, the lecturer, also did a wonderful job of motivating all of the things he was teaching us, and as such, I now not only understand how to write basic code, but I also understand why I should write the code in a particular way, and when I might wish to write it differently. I've also gained a lot of experience in debugging code, which is perhaps the most important skill for a programmer to develop, as it is surprisingly not the case that the most difficult part of coding is coming up with what you need to write; rather, the most difficult part is getting what you've written to work exactly as it's supposed to, one hundred percent of the time. Since I had to do exactly that for each problem set, I feel that I've already come a long way as a beginning programmer. All in all, I think this course served as an excellent introduction to the world of computer science.",
    "Having come into the class with significant computer science knowledge, I still learned a lot about algorithms, data structures, databases, and web development, as well as learning C, Python, SQL, and Flask from scratch. I feel like I not only learned a large number of useful languages and frameworks but also learned a lot about problem solving and debugging code. Furthermore, being someone more prepared for the course, I learned how to help my peers a bit, a skill that will hopefully help if I want to be a teaching assistant for classes in the future.",
    "I not only learned computer languages such as C, Python, SQL, and HTML\/CSS\/JavaScript but also the mindset with which computer science majors solve problems.",
    "I was introduced to a couple different computing languages and developed my ability to solve computer science problem",
    "a lot",
    "I learned how to make programs and debug codes.",
    "From knowing absolutely nothing, learned how to program using C, python, and other web-based coding programs such as HTML,CSS, Javascript, SQL.",
    "leaned some C learned some python leaned some lua leaned some SQL learned a lot back-end coding and got accustomed to solving problems in a systematic way that was easier to translate into code.",
    "Basic programming skills",
    "I develop numerous skills in programming languages such as c++, python, SQL, and others. I learned how to think more like a programmer in solving hard coding puzzles. This course held, by far, the most knowledge I've gained in a single semester."
   ]
  },
  {
   "question_id": "YC403",
   "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
   "comments": [
    "Overall good class Weakness the tracks of this class were just wildly unprepared for the new ones specifically games tracks and from what i have observed similarly for android or ios. Lack of availability of TFs during the final weeks for this was a bit concerning especially due to the high engagement and level of quality form the course for the rest of the year.",
    "The course is incredibly well-structured and taught. The only weakness is a shortage of TAs during office hours.",
    "The staff help during office hours is a wonderful resource, one that is absolutely necessary for success in the course. The nature of programming is such that it is hard to get a unified perspective on a problem when working with various TA's.",
    "the lectures were pretty fire hose and unguided and half the time i felt like i had no clue what was going on",
    "A super strong course! Only weakness I can think of is that it sometimes takes a bit of wait to get help from a TA at office hours.",
    "Great lecturer and well designed problem sets. Covered many useful materials.",
    "Terrific class - highly engaging and one of the best classes I have taken. I wish there could be more office hours though.",
    "strength: clear structure with tons to learn weakness: too fast for learning coding.",
    "Strengths: incredible teaching team staff, well-organized course website, helpful tutorial videos, fun events (this felt like more than a course) Weaknesses: high demand on time, went through certain languages very briefly (e.g. just one week of learning SQL and Python basics), course set-up assumed that students may have time to devote to further work over breaks, would be helpful to include lessons on git for working on development teams",
    "Class is structured in a fantastic way to allow students to learn very complex skills.",
    "strengths: well orgnized course and everyweek's TA section and office hours are quite helpful. weaknesses: The workload is toooo much! I spend at 10 - 15 hours per week.",
    "The learning curve this course was a bit steep for students with no coding background.",
    "Strengths include a broad set of information learned, most of which is very useful in this age. Weaknesses include an extremely high workload for an intro class.",
    "Strength: in a short time, you can learn a lot Weakness: it is moving so fast",
    "Strengths: the class psets are incredibly practical and fun. Weaknesses: the computer grader can be unfairly strict if you forget a little thing that it looks for that most human graders would overlook or at least not doc you full points for",
    "Strengths: Fun to figure out problems. Helpful office hours. Weakness: Needs more personal touch.",
    "Office hours are really helpful.",
    "Great teaching, but heavy workload",
    "This is truly an amazing course. The only downside for me personally was the long wait time at office hours. Perhaps it would help to have slightly more course assistants or to encourage them to move between students more frequently.",
    "The course's strengths are the wide resources students have at their disposal: office hours, section TAs, special \"supersections\" to review the lecture material. It is quite hard to do poorly in the class if you take advantage of these opportunities. The weakness of this course is that it was very poorly organized towards the end, especially for the final project and tracks. The guidelines for the final project were confusing and released just prior to due dates and its whole orchestration was rushed. Other than that, this was a fantastic course.",
    "Lots of office hours, but they're not always staffed. Toward the end of the semester, TF to student ratio around 1:15. Definitely understaffed department and course. Section was kind of useless; I wish they were organized more effectively to internalize information from online lectures, because it's easily forgettable.",
    "I think the course could do a better job of ensuring that all TA's are equally equipped to answer questions and by providing even more office hours. Furthermore, the test could be improved by ensuring that it isn't all about teaching oneself something new.",
    "The class was a big time commitment, as it required students to watch a two-hour long livestream and finish a quiz before an hour and fifty minute long section. I had section the same day as lecture, which was very stressful and a big time crunch. The class was taught well and both the professors and student teaching assistants were very helpful. The class could have more TAs at office hours because students may have to wait up to an hour just to speak with a TA.",
    "You learn a TON and the TFs are amazing. Definitely a lot of time (I generally went to office hours like 10-15 hours a week depending on the p-set) but every second was worth it. I finished each assignment feeling proud and accomplished, which is rare at yale.",
    "Shorter test!",
    "PSETs took 4-14 hours every week. Not a difficult class to do well in, just be ready to put in some time.",
    "Strengths are how much you learn and the online structure of the class. Grading structure is also really nice. Weaknesses are maybe just a lack of office hours on Tuesdays and Fridays, since psets are released Monday and due Sunday at midnight. The number of resources and help we are offered is really nice.",
    "It's phenomenal, but the office hour queues get really messy and out of order at times.",
    "I loved that this course was taught online-- it gave the course a level of flexibility and novelty. I thought the problem sets were phenomenal; they were incredibly interesting, challenging, and fun to work on. I absolutely loved the events CS50 hosted and the fact that we could split into different tracks at the end of the day. The largest weakness of the course in my mind was the lack of mentor availability (an issue that comes with an online course). Despite having office hours and discussion sections, it was difficult to get help or find a mentor. I think that CS50 does a relatively good job at combatting this with amazing TAs and CAs, discussion sections, and Ed, but I think office hours need to be better staffed and organized.",
    "Forces you to go through and understand many computer science concepts quickly, which is both an upside and a downside. Workload was well paced and balanced each week. The due date for the quizzes was a bit early, as I understand that many students take the course specifically because the lecture time is flexible, and the fact that the quiz due date is so early (the day after) makes it harder for people who used the slot as a flexible lecture slot. Sections also weren't terribly helpful, and mandatory attendance was a bit of a waste of time.",
    "The strengths of the class include the sheer amount of relevant programming knowledge it dumps on students, and how it forces students to think logically. However one major weakness is how difficult the class is to new programmers, and the class may serve as a deterrent.",
    "Weaknesses: More TAs for office hours. Although there were many TAs, it still felt like there weren't enough for office hours. Many times there would be 30 minute queues just to ask for help on one question. Problem sets felt like they were difficult to accomplish on your own. Almost like you had to go to office hours if you wanted to complete them. Lectures were much longer than they had to be and section was way longer than it had to be Strengths: Fostering genuine excitement for the field of Computer Science through the Hack a thon, puzzle day, presentation day. TAs were incredibly helpful, smart, and kind.",
    "No weaknesses except it's a ton (a TON) of work. But who takes CS50 if they don't already expect that! Seriously, it seems like David Malan has it down to a science. I certainly can't think of any ways to improve it off the top of my head.",
    "I thought that they cram too much content into the course so I didnt fully grasp some of the material in the class even at the very end. I think that it was a very shallow overview of a lot of things. I also wish that they had implemented the office hours waitlist earlier into the semester because I would have my hand raised for an hour and then get passed over as they helped someone who just walked in",
    "Strengths: This class is incredibly well-resourced. As a joint class taught with Harvard (and with a high profile), there is ample help. The TA's are in general pretty helpful (though this varies person to person). Weaknesses: It's pretty easy to rely on the TA's and not internalize and solidify what we did in lecture.",
    "A strength is that it exposes you to many different aspects of computer science. A weakness is that the course loses a lot of structure after the midterm.",
    "Strengths: it is very engaging and creative. The Psets feel more like fun puzzles to crack than boring problems. Also, the office hours for this class are very, very useful. Weaknesses: None for me. I loved it!",
    "Incredible! A ton of work, but the work is necessary in order to learn as much as you do. I really appreciated having so many office hours, TAs, and resources for learning and getting help.",
    "Very well taught, all of the information taught seems relevant. Volume of information taught and workload is often overwhelming -- but for me, it only got to be like that during the last few weeks of the course. Those last few weeks, though... X( . Office hours were plentiful and usually helpful, but they often needed to be better staffed.",
    "The fact that the lecture was filmed was great and the office hours were integral to my experience in this course.",
    "Strengths: I would list an enthusiastic teaching environment as one of the main strengths of this course. Staff make an effort to be available to you at all times, and Professor Malan is so positive and excited about computer science that it almost becomes infectious. After all, there is a reason why this class is kind of considered a cult. Weakness: This class markets itself as a beginner class. In my experience, it is absolutely not fit for students (like myself) who have little to no background in math\/logic in general I found myself struggling to grasp concepts that were deemed simple and as much as the course's staff tries to be helpful, there is only so far you can go when you lack experience or natural talent (or time to dedicate to this class alone).",
    "It was hard.",
    "I loved CS 50. The lectures, while remote, were well put together and each one was like a TED talk. There is a strong support system in terms of getting help from TAs and getting other resources (i.e. class notes) and walkthroughs. Problem sets varied from week to week but were overall challenging but engaging. The test could have been made easier, as I felt it was overly hard and different than what we were learning in the class. The weekly quizzes after lecture were annoying because they had to be completed in a day and I did not feel like I benefitted from them. Office hours were plentiful and generally well-staffed, although I think they could benefit from a queue system so that people don't hog TAs or cut in line.",
    "Strengths - really loved the PSets, definitely my favorite homework to do because it was so interesting and we were working towards an actual goal of making something, lectures were easy to follow, learned so much in a short amount of time Weaknesses - would have liked to learn a little more about the theory of computer science, it was in the lectures but up until the test we never explored it more than we had in the lectures and I feel like having to answer questions about it before the test on PSets may have helped",
    "One of the best classes I've taken at Yale. Very insightful class, with well-taught online classes and discussion sections.",
    "There are so many resources for the course but due to the size of the class, office hours could still be very busy. Once they implemented the queue, it was much better.",
    "One of the best classes I've taken at Yale.",
    "I would personally have liked the class even more if we had only learned more about python in depth instead of tracks.",
    "Strengths: This course is the best I've taken at Yale. Despite the fact that you learn so much in one semester, the problem sets are fun and engaging. The online lectures are fantastic. There is also a ton of infrastructure in place to support students. Weaknesses: None.",
    "I believe less time could be focused on C and more on Python and SQL, since those are used frequently in the real world. I think the TAs were all well-picked, though, and were very knowledgeable.",
    "Strengths: Strong office hours community, get to meet lots of cool students and TAs, TAs actually want to help you, and you learn a lot of coding! Weaknesses: CRAZY HARD TEST, DO NOT DO THE IOS TRACK THERE ISNT ENOUGH HELP, understaffed class w\/ overworked TAs",
    "Strengths is that there is a lot of support built around the course. So many TAs and office hours. Section really did not need to be mandatory. Weaknesses are that in lecture you are bombarded with information that is sometimes unnecessary for what we are learning. Weaknesses is that a computer grades your code so if there's a typo you get a 0 even if everything works well. i wish grading wasn't so automated.",
    "Strengths: Organized, have a lot of hours was great, Ed, nice having classes streamed, section was helpful to reinforce the information learned in class Weaknesses: Emphasizing more how much work the last pset and final project is and how much time it would take",
    "This course has great lectures and office hours. It is very well organized. Sometimes the homework assignments require to0 much knowledge that we don't learn in class. The test, too, was testing knowledge that was not directly taught in class.",
    "Strengths: the infrastructure that is in place (both in TAs, and digital resources) to support this course is pretty incredible. the IDE (where you do all of your coding) to the check50 and style50 functions that check your code for you before submitting, so the walkthrough videos for the problem sets -- CS50 makes it really hard for you to claim \"I didn't know how to do ___\" because there is so much in place to help you. Also, David Malen is a really great lecturer. Weaknesses: I found it to be a pretty solitary and un-engaging learning environment -- for me. Watching digital and sped up recordings of a weekly lecture and then rushing over to a 2 hour section was not an ideal learning environment for me.",
    "I think a weakness is that the class is an online class - I don't need to come to Yale to take an online class at Harvard, some live lectures would have been nice. A strength is that it was useful to have the recorded lectures to reference after watching them.",
    "The course is well adapted to digital learning. I have several friends in other online or attendance-optional recorded lectures, and this course is significantly better designed to facilitate learning and engagement. The number of TAs and quantity of academic resources was very helpful.",
    "Wonderful breadth, well-organized, and great support network of TAs Having lectures, lecture notes, and links to relevant youtube videos all on one website made reviewing material easy and fun - through all of these resources, CS50 made challenging CS and programming concepts both relatable and easy to understand.",
    "Strengths: Pretty fun course, psets are interesting, good at facilitating information, good TAs Weakness: Having the quizzes due before section makes sense, but I don't think it is a good idea because sometimes it is really hard to understand the lecture, particularly when watching it online, as Yale students do. Also, sometimes a bit disorganized.",
    "strengths: availability of TAs, frequent office hours",
    "Strength: very strong online resources and helpful seminars Weakness: in my personal POV, the problem sets tend to be more difficult than the programming techniques taught during lectures",
    "Good God it is an extremely well-done, polished course, which makes me feel pretty entitled and demanding to ask for more from it. I guess coming from somebody who gradually fell behind and eventually ended up failing the class, adding some mentor-like responsibilities to the TA's duties might help. Most important of all though would be emphasizing how damn essential OFFICE HOURS are- they should be described as \"near-mandatory\" for any students who aren't immediately keeping up",
    "Weakness would be the menial tasks can be quite frustrating",
    "This course was amazing because of all the help that was offered for the course. Without all of the online and in-person help, I don't think that I could have done the best job possible in this course.",
    "I loved how the course was a mix of online and in person. I felt like Learned so much.",
    "Strengths of this course include office hours. Without office hours I wouldn't have learned half as much as I did and I most definitely would not have passed the course",
    "The workload is very high but worth the time.",
    "Steep learning curve, but clear and well-though instruction.",
    "There should to be a lot more clarity on final grades.",
    "More TA's; office hours were often overrun. Maybe stop taking McKinsey money and converting what should be, simply, a learning experience into a recruiting pipeline for sinister, global corporations to cherry pick our best and brightest, thereby not only assuming direct complicity in perpetuating an existing world-order but also abusing the intellectual and moral authority of the Yale brand to confer legitimacy on such nefarious actors? Idk. https:\/\/en.wikipedia.org\/wiki\/McKinsey_%26_Company#Scandals_and_criticism",
    "The best part of this course was the peer-tutor network, which was extremely helpful during hard psets. The free food and general lively atmosphere created around the course was very much appreciated, and I enjoyed learning to code through this course.",
    "Too much work. But very interesting and taught me a lot",
    "I believe that the course was very well structured, but it couldve been benefitted by having a little less breadth because it felt like we glossed over certain things.",
    "(Already answered on CS50 final survey)",
    "I think that we spent too much time on C, and could have moved onto Python a week earlier. Additionally, I think that not enough support was offered for certain tracks, like Android. It seemed like only 2 people on the CS50 staff knew how to help with Java, and it became very difficult for those of us doing Android to seek help for psets and the final project.",
    "I felt that the online lectures were good, but made it difficult to learn a great deal from the course.",
    "The strength of this course was definitely the well designed psets and the events such as the Hackathon and the fair. The course could be improved with greater engagement within the Yale community",
    "More TFs who know android",
    "Grading of midterm is very strict.",
    "The course is a lot of work, problem sets take many hours and you have to visit office hours, and the test was very hard... but the course is extremely valuable and you learn a lot.",
    "Extremely well-taught. Some pSets, particularly towards the middle of the class, were gratuitously difficult, but other than this, the course was incredibly well-taught.",
    "Honestly an amazing course. Really difficult but worth it. Only thing I disliked was the test. There was too much information on it we hadnt learned",
    "The lectures werent that helpful, I learned the most from psets. Also, there are way too many students at office hours and sometimes Ill sit through the entire block of office hour and no one was able to come to me and help me, especially when theres no queue on a board",
    "Structure was good. I think the biggest area where the course failed is when problems required lots of supplied code that was never thoroughly explained. As soon as we started working with files, we were often asked to work with code we didn't understand. It felt like I was tinkering with code hoping for something to work without really understanding what was going on from the ground up. I spent way more time trying to figure out how to read through files, something that seemed to me was never properly explained, than actually figuring out the logic of the code \/ the assignment. The same problem happened during the game track. Lua was never taught. LOVE was never taught. They showed us some guy program a game and for the pset we had to tinker with his code with almost no understanding of what was going on. Then when it was our turn to actually write the game, we knew nothing.",
    "The course is challenging, but the lectures are very well organized. The PSETs really creat growth and advance your skills.",
    "Generally good material design Poor reaction in reviewing test result",
    "The lectures and problem sets are huge strengths. Section was not. I think standardized slide shows for section would be a great help, as ours was often full of typos and the section leaders seemed to have very little preparation and often struggled to answer questions from students.",
    "This is by far the best course I have taken at Yale.",
    "Strengths: actually interesting and generally achievable psets. Malan is a pretty engaging lecturer. TAs are very helpful. Weaknesses: sometimes material is too much (I think they could prioritize a bit better) \/ confusing (mostly pointers). Office hours with the heads isn't the most productive just bc there's only a couple of them and tons of us. I don't think the exam corresponded very well to what we learned.",
    "Office hours were something that I think this course did really well. On the other hand, I do think that sections were less helpful.",
    "I like how flexible the last few assignments were, as I had a lot of fun choosing how to do my work. A weakness can be how alone I felt doing the test, it was very hard.",
    "I had a hard time engaging with the lecture given that it was online. TAs are super supportive.",
    "Strengths: the vast amounts of resources available to students-- especially the office hours. Weaknesses: the weeklong test we were given felt out of place and a bit unfair given what we were taught.",
    "This is the most well organized course I have ever taken, in regards to homework, resources. The main weakness of the course is that it is very uneven (from week to week, you could go from a 4 hour homework to a 24 hour)",
    "The courses strengths include: 1) The breadth of disciplines and coding languages covered by the problem sets. I loved that we weren't just taught how to do one thing in one language, but instead were exposed to the ways that CS is applicable to so many fields. Making voting tally programs one week, Instagram filters the next, assigning reading levels to texts for schoolchildren, etc. was so fun and kept the coursework fruitful and engaging! I also appreciated learning at least parts of half a dozen programming languages! Some intro to CS classes, as you all know, just teach you how to do a thing or two in Python and call it a day. The breadth of languages and pset fields\/disciplines covered are one of the most attractive things about CS50. 2) The TAs are AWESOME and very well-trained. Their advice and walkthroughs at office hours, and the proliferation of office hour days and times, were invaluable. 3) The course has a \"sense of humor,\" both in the way the pset spec is written and in the personal attitudes of the staff and TAs. This is such a welcome bit of humanity when graduate school sometimes feels so abstract and heady. 4) Shoutout to my section TA Reese Wynn for being a thorough, thoughtful, and encouraging section teacher! To David, Benedict, Cody, and all the heads and TAs: thank you! This was my first foray into CS, a field I knew nothing about coming in, and now I feel so much more confident about computers in particular and my ability to think programmatically\/algorithmically and to solve problems in general. Keep up the great work! - A grateful graduate student",
    "Lots of help from TAs was key.",
    "Strength- high pace, great teachers, great office hours opportunities. Weaknesses - easy to lose the pace. Requires more than 20 hours a week",
    "Great that the lectures were online as it helped me schedule. The applications in the psets that werent explained in the videos should be in the videos. Office hours were kind of hectic because there were so many students and so little TAs that it took a long time to get a TAs attention.",
    "Taught in a pretty easy to follow manner. The exam was extremely difficult and time consuming.",
    "Strengths - content, engagement with students, access to TAs and resources, problem set difficulty Weaknesses - not really, just some problem sets took way too long",
    "Easy introduction to programming. Some problem sets were quite challenging.",
    "It is one of the most useful courses you can take at Yale and it teaches you so much. However, the automated grading system results in you not getting clear feedback and might cause some issues.",
    "Strengths: 1) Office hours were usually well-staffed with a great set of ULAs, and they made the problem sets very doable. It also fostered a collaborative environment. 2) Special CS50 events such as Puzzle Day and the Hackathon were very fun! I enjoyed the CS50 Fair as well. Lots of good food, candy, and free shirts! 3) The problem sets were usually the right difficulty, and they were on interesting topics. For example, in one of the earlier weeks we wrote a program that could assess the grade level of any given text. That was awesome. 4) The flipped classroom setting is well-managed with the quiz that is due Tuesday night, so that you have the flexibility to watch the lecture (2hrs!) on your own time, but you dont put it off for too long because of the quiz. 5) Lots of fun little things make you feel spoiled in this class, which is pretty atypical of a large introductory course. This is probably the most glamorous introduction to computer science youll ever get. Weaknesses: 1) Section could be made more engaging (in my section I never got to know the other students, so it was hard to make friends in the course). 2) I would opt not to do the tracks next year, or staff the less popular tracks like iOS and Android better. 3) The one test was horrible. It was made much too difficult, and since it was take-home, people were limited by how available they were that week. It was meant to be non-collaborative, but as with any take-home test I am skeptical of how this could be enforced.",
    "Strengths: Organization, thorough explanations of p-sets and lecture notes, pacing. Weaknesses: Not many, a great introduction to computer science.",
    "This course could benefit from lectures that are more based upon the coding itself and less on conceptual topics.",
    "Natalie was a very bad TA who often confused students because she was shaky with the material. I once heard her say quietly to Mat, I dont even remember how to code in this language haha. Section often seemed like a waste of time because of this, and the vast majority of the class always looked very confused. At office hours, she helped my friend, and then my friend want to another TA because she was confused, and the other TA told her that what she had (from Natalie) was wrong.",
    "I think the strength of the course is office hours and the way the course forces you to work with TAs, and the greatest weakness of the course is the limited number of teaching assistants. It is great when you work it through with a TA, but horrible when you have to attend a walk through to complete the problem set.",
    "Despite how I may have felt at the time, I think each PSET was a good level of difficulty. They were great for teaching problem solving and important CS concepts. However, this is coming from a projected CS major, and I have always enjoyed a good CS puzzle. I don't know if this sentiment would hold the same for non-majors taking this as their first peek into CS. One thing I struggled with during this course was hash tables. I still don't fully understand how they work in C; I only vaguely understood it to the extent of the PSET. I would have liked to spend more time on that. Another issue I experienced was the lack of TAs at office hours. CS50 definitely already has one of the biggest staff groups, comprised of great staff, but the queues for help were sometimes unreasonable. Thankfully I had 1-2 hours to wait to ask my question most times, but it was frustrating to be stuck on something that didn't allow you to proceed, and have to wait so long to ask a question. This seemed to be more of an issue during the tracks weeks. Overall though, I give high praise to the TAs and all the staff, they did a great job and I am very grateful to have had their support throughout this course.",
    "Strengths: the scale and organization Weaknesses: huge learning curve, not too much support for it.",
    "The class structure is well defined, but the fact that the check50 system (which you can use to check your homework before submitting) is taken away just after the credit\/d\/fail deadline seems a bit unfair. If I knew that was going to be taken away, I would have credit\/d\/failed the class. In addition, it would be easier to teach students simple tips to help with the problem sets before they are due, instead of right after (which is infuriating). Finally, the fact that sets were due on Sunday nights was not great. I think it would be better to have them due Monday nights and have the lectures released on Tuesdays.",
    "I think that the course was great. However; the final exam was terribly difficult and I spent way too much time on it.",
    "The course does really well to explain complex concepts in very simple ways and ramps up well. I do wish we had more time to be able to create more complex applications.",
    "I think its strong as an intro to learning coding. I also think that its a little harsh to kids trying to first begin learning though since all HW assignments cant be late and the homework checker will make work wrong when a little flaw is there.",
    "Strengths: lots of important content covered, asks a lot of its students even though it's an introductory course, lots of help offered, david j. malan is great Weaknesses: huge workload",
    "I enjoyed the online lecture format, office hours were extremely helpful, if crowded, there were many resources to help if you got stuck. Some weaknesses are that at the busiest or hardest points in the class it can be hard to get one on one assistance and you get little design feedback on psets.",
    "Weaknesses: The test was absolutely horrible. We were given only a few weekdays to work on it during a tough week of the semester for everyone. The length of the test was said to be a certain number, but in reality, it really felt like double or triple that amount. Section times were not organized properly because they occurred on Monday or Tuesday while the 2hr lectures at Harvard happened Monday; the turnaround time was too cramped, especially since there was a quiz after every lecture that had to be handed in BEFORE section. It was a good idea to get people to watch the lectures but in execution, cause some unnecessary stress. Additionally, because this is such a huge class, getting help at office hours was tough because there are a limited number of TAs and it is easy for people to get stuck writing code. However, I really enjoyed splitting off into different tracks for the last problem set though I wish there was more support. You are really learning most things on your own, but it was gratifying being able to complete the challenge. Of course, we also all love David J. Malan.",
    "strengths: the course was intense, and i learned & grew a lot as a result computer science-wise, as well critical thinking-\/problem-solving-wise weaknesses: during the 'C' unit, i felt that the the course would move on before i understood the concepts i was able to complete the psets successfully (with a lot of help from the TA's), but never felt that confident in my 'C' abilities",
    "strength, the class is not really grade focused even tho I will admit being highly stressed by grades, ahah. Office hours is great. Please go to them. Every week. Early. Weakness, I simply do not enjoy being in a class setting learning these for grades. Even if I said grades aren't that important as CS50 staff stress. I still felt like I was going to office hours to get my psets done. That was the number one goal, and learning unfortunately was secondary",
    "The course covered a wide range of topics and was a great introduction for those who have no or little experience with coding. While the majority of the course was online, the sections helped further concepts taught through online lectures and were a great opportunity to ask questions. A weakness of the course was that there weren't many instructors or teaching assistants at office hours and usually there would be a lot of students, so if you have a very specific question it took a while before you had the opportunity to ask it.",
    "Strengths - the psets help us learn a lot Weaknesses - the course is very stressful at the end especially for the final test, the last pset, and the final project",
    "Strengths: Very well thought of course structure and course material Weakness: Feedback on improvement and following bet coding practice could be made better since all grading is automated",
    "Best CS course. The structure of the course was amazing.",
    "Strengths - TAs! And the resources available at office hours, step by step guide and so on Weaknesses - It was sometimes hard without a professor on campus (online lectures)",
    "Strengths - great resources to learn, video lectures, course takes into consideration your personal learning curve and starting point Weaknesses - it's easy to get overwhelmed \/ lost if you slip up on one pset or lecture How to improve - set up virtual \/ screen share 1-on-1 TA office hours for people that can't make it physically to office hours",
    "Truly an incredible class. The lectures are very well filmed, and the infrastructure of the class (CS50 IDE, Submit50, Dash50) is extremely user-friendly and thoughtfully designed. The entire course is so meticulously put-together and has a very high production value. I really liked how CS50 has kept track of so much data regarding the workload of PSETs, grades, and other statistics over the years. In general, it reflects a motif of constant self-evaluation and incremental improvement that I wish other classes also had. Additionally, the seamless integration of technology made it so easy to be well-organized. There are some technical suggestions that I've submitted through the internal course feedback, but otherwise, this course is perfect.",
    "too much workload, otherwise fine",
    "This class has a ridiculous work load and should be 1.5 credits because of that but the amount of resources available to help students is really great.",
    "The difficulty increases sharply in the middle of the whole course.",
    "Lots of support, all the problem sets and even the test problems were very engaging",
    "Online lectures are tough to watch, I would prefer to be there in person",
    "The entire course was very engaging and the tutorials are super helpful. I felt that we needed more time for the final tracks - the learning curve at the end was very steep.",
    "great professors and TAs; very heavy work load",
    "This was a very fast-paced course. We learn a lot but the workload can be more well-balanced.",
    "I think the structure of the course, which involved watching a lecture on Monday, attending a section on Tuesday or Wednesday to ask questions and expand upon what was taught during lecture, and then working on a problem set for the remainder of the week to turn in on Sunday, was very good. The lecture set the baseline, section (in theory) expanded and elaborated on the important bits, and then we were off to try our best at solving the programming challenge for that week. I say \"in theory\" with regard to section because I feel that it was the weakest part of the course, and I don't feel that I got that much out of it, though this will surely vary from person to person and section to section. However, in my own case, I felt that section was little else than the combination of an exact repeat of what we had already seen during lecture and some structured time to work on the problem set for that week, neither of which I felt was necessary. I think a better use for section would be to go into lots of detail about the most complicated bits from lecture, and work through lots of examples. In terms of the support systems for the course, I found office hours to be helpful, but they often involved waiting for extremely long periods of time, because there were just too many students and too few TA's. More helpful in my opinion was Ed, which is a forum where you can ask a question and get an answer usually within an hour, without having to leave your study space. The deficiencies of office hours were certainly made up for by Ed, and I would strongly recommend making good use of it to anyone taking the course. Overall, though, the course was very strong: I learned what I wanted to learn, and I got the help that I needed when I needed it.",
    "The main strengths of the course were the overall curriculum, the interesting problem sets, the excellent instruction, and the overall atmosphere of fun. I thought the course covered an amazing breadth of material that provided a thorough yet unified view of computer science. I came into the class with a fair amount of experience, and I am shocked at how much I still learned. I can only imagine how much you would learn if this was your first exposure to computer science. For me, it was the perfect balance of a challenging yet reasonable workload. Furthermore, the problem sets always addressed interesting real-world problems, such as election vote counting or image filtering. This made it easy to stay engaged and want to learn the concepts from class, as you could see fun applications right away. And even when things got challenging or frustrating, the strong teaching by everyone involved made it possible to persevere. Every week I looked forward to learning from Davids video lectures, and Brians walkthroughs were essential to completing the problem sets. Additionally, everyone at office hours were generally very helpful, especially Reese Wynn and my TA Jack Adam. Finally, the most amazing part of CS50 was the overall environment, between the huge enrollment, fun events like Puzzle Day and the Hackathon, and social interaction at the CS50 lunches and office hours. It really is a community (cult) that everyone enjoys being a part of. The main weaknesses of the class was the structure of sections. My TA did a good job maximizing its potential, but I think the basic structure should be made more interactive and collaborative, since we get enough pure lecture with the weekly videos. That is the only \"wasted\" time I felt I had in CS50.",
    "Strengths were the 2 hour theory classes every Monday and the final project at the end. Weaknesses were the mandatory class sections where TAs need to provide more exercises to enable students to complete the psets.",
    "One of the strengths of this course is its flexibility given that the lectures are taped and viewable online. Another strength of this course is the availability of so many TFs. One of the weaknesses of the course is that many of the problem sets required outside knowledge of CS and were nearly impossible without the help of a TF.",
    "a lot",
    "This course is very structured and comprehensive in introductory programming. It, however, lacks in feedback systems, and I felt somewhat stranded sometimes during problem sets when I didn't really know what things I had to do.",
    "The greatest strength was the large amount of support that was offered; This course had notably superior office hours than any others I had taken this term due to the amount of staff and inviting nature of the sessions. The greatest weakness of the course likely lay in the fact that due to the great variation in Computer Science background regarding those who took the course, many of the time predictions given out by staff regarding workload often seemed to be gross underestimations for many students. Basically, this is not a course one should even consider procrastinating in, things can very easily take much longer than expected.",
    "Less C, more work on tracks",
    "Strengths: Various programming languages to learn. PSETS that directly improve thinking and problem-solving. A class with an entire gravity of its own to learn and explore. Weaknesses: At the beginning of the class I felt very isolated from the rest of my peers due to it being mainly online. Because of such, I performed less than wanted on the first couple PSETS until I learned of the necessary importance of office hours. A large weakness of this class is that there is much that is not told to the student taking it in the beginning, so they have to find out how best to maneuver the class themselves."
   ]
  },
  {
   "question_id": "YC409",
   "question_text": "Would you recommend this course to another student? Please explain.",
   "comments": [
    "Yes - budget time for it.",
    "Anyone who is honestly interested in pursuing coding is absolutely justified in taking the class. If it is only a passing curiosity, the best approach is taking the course credit\/d.",
    "Yes. Coding is an integral part of today's world. This course will take one semester of dedication and persistence and take you from 0 to 100 in computer science.",
    "only if they're looking to see if they're interested in cs and not to learn an actual langauge",
    "Yes. Would highly recommend. Course is excellently structured and is super cool. Lessons can be watched on your own time and are great for understanding the material--can be sped up, slowed down, rewound, etc. as needed. PSets are super cool and fun (genuinely enjoyable most weeks). Course isn't too hard but is a really strong intro to coding and also really helps develop your logical thinking skills. Even if not a \"STEMy\" person, take for a workout in problem-solving!",
    "Yes, but the workload is crazy.",
    "Definitely. Everyone should learn programming and this is the best class out there.",
    "Yes.",
    "I would recommend to people who want deep dive in coding.",
    "Absolutely, especially to those students who have any inkling of interest in programming. That said, for graduate and professional school students, I would caution that the amount of time this class demands is high. On top of all other graduate student commitments, this may be a good class to take Pass\/Fail. The class is one of the absolute best taught classes I've experienced while at Yale - hands down. There are many resources made available to the intellectually curious and time rich (really, I strongly advise students to consider the time demands of their overall schedule before enrolling).",
    "Absolutely must take this class, it changed my life.",
    "Think carefully why do you want to take CS50, especcially if you will not use any coding in your future careeer. This course is really a tons of homework and if you miss any one week's video, it can be very diffcult to catch up.",
    "Yes but if they have not had prior programming experience, I would recommend they Credit\/D\/Fail the course. I believe nearly everyone should take this course because of the important knowledge learned. However, for an intro class, the workload is much greater than expected especially for someone with no prior experience.",
    "Yes. Take the only chance",
    "Absolutely! It is such a fun way to dive into the subject, even if you are a complete beginner",
    "Yes. I think it is necessary to learn basic programming in the 21st century.",
    "Be aware that the course is a TON of work, but you will get a lot out of it and feel proud of the final project you created at the end of the term.",
    "Yes! The course builds the entire picture of CS and is a helpful intro.",
    "Yes but considerable workload",
    "Yes, I would strongly recommend this course to any student who is interested in building a firm foundational knowledge in computer science.",
    "Take CS50! I know if you're reading this you're probably wondering if the 4+ workload rating on CourseTable is worth it. The workload has been significantly reduced in recent years, and I did not find it more time-consuming than the rest of my classes. If you are on top of the assignments (the course is structured to be largely self-paced), you will do fine. The instructors and TA's genuinely want to see you succeed.",
    "Yes. It definitely ignited an interest in CS that I plan on pursuing. Also for non-CS majors, it teaches you the fundamentals of computer programming which is a rising industry as the world grows exponentially digital.",
    "Yes! I learned so much, even though it was difficult.",
    "Yes. Whether they were interested in computer science, or just in learning some useful skills and problem solving, this course is very enjoyable and I would recommend it to others.",
    "Yes, if you want to learn about programming principles.",
    "absolutely. in august, i realized that when i thought about any of my friends taking a CS class i imagined them succeeding but when I imagined myself doing it, I could only see myself failing. I decided that wasn't a way to live (or learn), so I committed to taking CS50. Genuinely one of the most valuable experiences I've had at yale and I wish I had done it earlier. If you're on the fence, take this as a sign to take the course! you will not regret it!! also, if you do the work, grading won't be an issue. you get out what you put in so just put in the work !",
    "Yes! I really enjoyed CS50. Even though the workload was very high, I thoroughly enjoyed it and would recommend. As long as you start on psets early, it really isn't too bad!",
    "Take CS50!",
    "Yes, but only if you plan to actually put in the time and effort to watch the 2h online lecture, properly do the quizzes, and attend office hours to finish the psets. If you don't, your grade will suffer, but that being said, if you do put in time and effort you can easily get an A or A-. TAs will help a lot for psets, DO ATTEND OFFICE HOURS. You learn very valuable skills and in such an organized format.",
    "Absolutely!",
    "Yes, I definitely would. I think every student at Yale (even if not a computer science major) should have the opportunity to take this class. The computer science field is growing exponentially and expanding into so many sectors of life-- being able to code and think like a coder are important skills to have. This course does an outstanding job at introducing computer science to beginners, making it interesting and palatable, while still developing a very very strong foundation in computer science over the course of a single semester. It's a time-intensive class, but I believe it's worth the effort.",
    "Absolutely. Even though it wasn't a class I'd take again, I'm glad I got the opportunity to learn how to code and how computers work. This knowledge will only be exponentially more valuable as time goes on!",
    "Yes. It gives you free reign to, on a rail, learn CS at your own pace and finally learn how to code.",
    "If you are a STEM student looking to improve logical thinking abilities, yes. Otherwise, the class is extremely difficult for beginners and will take a lot of dedication in that case. If you are up for the work, I recommend it.",
    "Yes, had an amazing experience with the course that has left me wanting to continue my CS career with CS 201. I feel like I have a much better understanding of what goes on under the hood of many of the products that we use in our daily lives.",
    "Yes! It is a whirlwind course, a ton of work and a ton of learning. Look at the CS50 website for more in-depth information on workload and stuff, it's super helpful!",
    "Absolutely. I didn't really have any coding experience prior to this course (I think all I did was an hour-of-code once in high school, so yeah, not much). However, after this course, I feel so much more comfortable and actually EXCITED to code again. Honestly, I will probably be taking more CS courses solely because of my positive experience in this course. Before taking the class, I had heard a lot of stories about how much work the course is, but honestly, it is pretty manageable if you plan ahead. I definitely began needing office hours after the first one or two problem sets. The queue at the first office hours of the week is pretty short and ensures you get help quickly. However, if you wait until the end of the week to work on the problem set, this is where the class can become stressful. For context, I took the class as a sophomore (because it is an Applied Math requirement), but ended up liking it so much I'm hoping to take more CS! I am so, so, SO glad I took this course over 112 in the spring. There was a lot of variety in what we learned, and I really appreciated being able to do a final project. It felt like a great capstone to a wonderful semester.",
    "Yes I would. Even though this course was challenging, it was all very rewarding in the end.",
    "Yes! If you have never coded before in your life, take this course! It takes you from ground zero to being able to code your own website, app, or game. You feel super accomplished by the end of the course.",
    "10\/10 would recommend. TAKE THIS COURSE. Learn these skills: they are essential. It is a lot of work, yes, but it is worth it, ten times over.",
    "Absolutely -- just be ready to put in the effort\/time that the course says you'll need to, or else it won't be worth it.",
    "Yes. This course has a reputation for being very difficult, and it is, but it is doable when you take advantage of the resources they work tirelessly to provide. I felt like I was a part of something bigger than just a class.",
    "I would be weary of recommending this class to anyone who has no background in computer science and who is not comfortable with logic. Sadly, this is arguably the better option compared to CS112, but in short, there is no good beginner option for computer science at Yale. The CS department would honestly do well to add an additional course in programming targeted and designed for beginners, rather than \"hose them down with knowledge\" as CS50 does. It's overwhelming and frankly discouraging. If you are one of those people (like I was) with weak logical skills, then Credit\/D this class. If you're confident in your logical reasoning abilities and want a challenge (and are fine with living at office hours), then this is the class for you. The free merch and gear is also enticing.",
    "yeah i would recommend this course to another student.",
    "Yes, I would strongly recommend CS50! I learned so much during the semester, becoming fairly proficient in programming languages such as C, Python and SQL, and generally developing a new way of addressing problems. I loved the class so much that I am strongly considering double majoring in CS. Warning: this course is a lot of work. Problem sets are weekly and can take up to 20 hours to complete towards the end, but they challenge you and are actually applicable to real life. There is plenty of support at office hours and section is a good way to review concepts from lecture and get started on the pset. Overall it was an amazing experience, and if you have the time and motivation, take CS50.",
    "Yes, I would. Despite the large workload, I do feel comfortable with the languages that we learned by the end of it, and was able to apply what I had learned over the semester in an implementation of my own project.",
    "Yes!!! take this class if you want to learn about computer science in a really fun, engaging way. I knew literally nothing about CS coming into this class, and I made a photo editing website for my final project - I learned so much in this one semester.",
    "Yes, definitely. It is a great class to get a headstart to coding, and the way that it is taught ensures that most types of students are interested in the class. The problem Sets are very interesting to solve as well.",
    "Yes!!! You will learn how to code and program!",
    "Yes 100%! This is a must take course for all Yale students in the world we live in. Incredibly well designed and executed class, I was a huge fan of it in just about every way.",
    "Definately",
    "I would recommend this course to any student remotely interested in computer science.",
    "I would recommend it to other students interested in coding, but scared of how hard it might be. It is a good gateway class. I had no knowledge going in and came out better than I thought.",
    "Yes if you have the time and energy, this class is really rewarding and you'll be able to say with confidence you're proficient in 3 coding languages which is CRAZY for 4 months!",
    "Yes! please don't be intimidated by the reputation it is really NOT THAT MUCH WORK",
    "Definitely if you want to have a comprehensive introduction to computer science. You learn a lot but as a result it does take a lot of time",
    "I recommend this course to any student who wants to learn about programming quickly. You will learn everything you will need to know about programming, whether or not you plan to major in CS.",
    "I would definitely recommend this course to someone who either wants 1) a baseline of CS knowledge so that they are not \"out of the loop\" in future careers\/life or 2) people who know they want to major in CS, as CS50 can be counted as a prerequisite for a lot of subsequent CS classes.",
    "I would recommend this course since it is the only intro programming course in the fall, but it would be nice to have one at Yale.",
    "Yes. This course is an excellent introduction to computer science and would be great for anyone who enjoys problem solving. However, it is a lot of work. Easily ten hours of work a week if not fifteen or sometimes twenty or even more. CS50 is not for the faint of heart.",
    "Absolutely, 100% yes, regardless of your academic background and your desired academic future. This course surveys the basics of CS in a way that makes daunting concepts easy to understand, providing a solid foundation to take more CS classes or learn more on your own. If you're not planning on taking more CS, I still would highly recommend CS50, as the course helps you appreciate both the applications and limitations of computer programming that help one build an appreciation and understanding of the ways in which technology influences our lives. Above all, CS50 teaches how to distill complex problems into logical, manageable steps - and this skill is surely useful for everyone.",
    "Yes. It will teach you so much about CS.",
    "Yes, if you've never had programming experience. The course really gives you a taste of what programming is all about & how to code.",
    "I would like to recommend the course who have a serious interest in computing and programming, but beware of the workload.",
    "Yes, 100%. It's challenging but just so well-done, useful, and amazing.",
    "Yes.",
    "I would recommend this course to any student who is curious about computer science because it is set up so that learning is the most important aspect of the course.",
    "Yes! the skills learned are so valuable.",
    "I would definitely recommend this course to another student. I've learned so much from this course and plan on perusing computer science.",
    "Yes, if they are looking to develop a strong programming skill base",
    "Yes, only if you have a light semester. It takes A LOT of time; unless youre good at coding already. You learn a lot. Good peek into the world of CS.",
    "Yes, definitely. I'm very glad I took it.",
    "I would definitely recommend this course. While not necessarily a must-take, this course is carefully calibrated to be as efficient as possible in teaching students how to think like a programmer. Each pset builds on the prior pset, and although they can take up a lot of time, if you go to office hours several peer-tutors will be sure to help you and point you in the right direction. This is one of the few Yale College Courses where most of your final grade is within your complete control, as only 10% of your grade depends on the final exam (which is take-home, and open-book). The final project was difficult but graded generously, and I found myself learning a lot of material but enjoying the process of doing so.",
    "It's a hit or miss, to be honest. Some people love it, but personally I hated it",
    "Yes it's very useful knowledge.",
    "Would definitely recommend this course to people interested in gaining an understanding of computer science and a general introduction to it.",
    "(Already answered on CS50 final survey)",
    "I would definitely to many students, at least credit D option if they are nervous. If you could be doing anything in your career CS related, then it helps to have at least this basic level of understanding. If you have taken any cs at all, even if its a free online class etc..., this course is a great way to relearn and firm solid fundamentals(also makes it easier). Definitely go to pset office hours on Thursday for walkthroughs of the harder psets.",
    "Yes! I would as I learned a great deal.",
    "Yes I would! Its a fun class where youll learn a lot. Well worth the work, which is a lot but honestly overhyped",
    "Yes! If youre at all interested in CS or want to gain skills. Credit\/D if you dont want to be a CS major",
    "If you really interested in coding then yes! This class is very time consuming and stressful at time. But the reward paid off",
    "Yes - good, but hard, introduction to programming",
    "Yes, as long as they're willing to allow the course to take over their academic life for a semester.",
    "Absolutely. It will make history. Theres just no better computer science course that exists anywhere in my opinion.",
    "Yes, it taught me so much and I feel that I was so ignorant before taking the course",
    "Yea",
    "I would recommend this course to any student interested in trying to learn computer science and gain exposure to the field.",
    "Yes defintely",
    "I would give this course a glowing recommendation! I came to Yale thinking \"CS is just for these kids who've done it their whole lives; it's too late for me to start now... Oh well...\" and after taking CS50, I'm considering double-majoring with Computer Science. It teaches you the real stuff, it gets you up to speed, and it breaks whatever barrier you might be imagining between CS and yourself.",
    "I would 100% recommend this course to another student. Professor Malan is a great lecturer. I had no coding experience going into this course and got so much out of it because I put in the work.",
    "Yeah definitely, as long as your other courses aren't super tough. I'm not a CS major but I thought these psets were genuinely fun to think through. And I feel like I got a pretty decent foundation in programming. You've gotta put in work but people exaggerate how much. If you start psets fairly early and go to the TA office hours, they'll basically always work you through it and you'll get full marks.",
    "Absolutely! It's a great introduction to coding.",
    "I would recommend this course, as one walks away with a lot of knowledge of computer science, despite walking into the course with very little.",
    "I would recommend this course to another student. While the workload is very high, I felt like the workload went very well with facilitating my learning. I'm leaving the class with a greater understanding of computer science.",
    "This is great if you want an intro to the world of computers, but it doesnt offer much more than a taste of lots of things. You cant immediately do something practical after this course",
    "Yes, and I already have! I recommend CS50 to practically every student I come into contact with. I took it myself because it was recommended so highly by my friend (and long-time-ago CS50 student then TA at Harvard) Peter Lifland. Word of mouth is powerful, and I am proud to now count myself among the people who have benefitted from having been recommended to take CS50 and now to do the recommending!",
    "Yes I found it really fun and an effective class.",
    "Great course! I would definitely recommend it!",
    "Id recommend it to someone with a little bit of cs background because it can be a bit overwhelming.",
    "Yes, even for business school students. Great to understand a business from the engineers perspective.",
    "Yes - you learn a great deal about what computer science entails, and the practical skill of coding is a huge plus, especially for those not majoring in CS",
    "Yes",
    "This is an absolute Rockstar course for anyone interested in coding. I took this class with zero knowledge about computer science, and while there are several students in the class that come in with background knowledge, they do a fantastic job in making this course accessible to all. This class gives you just enough broad knowledge to be able to understand most things in computer science. I took it as a senior majoring in something completely different than computer science. While this class is mostly geared toward first years and sophomores, I had a ton of fun.",
    "Yes, I think everyone, regardless of major, can learn a lot from this course and find it intellectually rewarding.",
    "I would only recommend it if this student is a computer science major. Otherwise, you're better off learning somewhere else. But if you really want to learn some cs, I would say go for it if your schedule is empty that semester and you're taking easy classes.",
    "Yes, I think everyone at Yale should take CS50 so they know a decent amount conceptually and literally about coding. I think in the future especially everyone will need some type of coding knowledge in their line of work.",
    "I definitely already do and will continue to do so! However, I am almost alway met with a hard noespecially from my suite-mates, who have seen me struggle with the workload.",
    "Yes, if they want an intro to coding. This is a huge course, and it's really helpful to know at least something about coding.",
    "I would only recommend this class to another student if they either had computer science experience OR they were willing to take the class credit\/d\/fail. I would warn students that the class gets significantly harder just after the credit\/d\/fail deadline, so I'd tell people to watch out for that.",
    "Definitely. Computer science is so important, and this is best class you can take to learn how to code.",
    "Definitely Everybody should take this course as it demystifies programming and puts solution for everyday problems within reach.",
    "Only if the student likes computer science. Otherwise, this isnt a fun course to the average yale student.",
    "Yes! It is a wonderful introduction to computer science, and is great for students who have little or much experience with computer science. Super fun course that emphasizes learning (of course) but also creativity. Each pset is like a new puzzle.",
    "Absolutely. You learn a ton and get a chance to build things that are not only interesting but interesting to you personally as well",
    "I had experience in R after taking S&DS230 and dabbled in Python a bit on Codeacademy. This course was a challenge at times but it is definitely doable, had more fun than anger overall. Keep in mind the workload for this course-the amount of time that CS50 says people usually allot for the psets is pretty accurate. If you're looking for a survey course of CS, I would definitely take this. If you're a humanities major and this is the only CS course you're going to take, you might want to rethink. You'll come out with a lot of knowledge but I don't think there is enough support in terms of staff manpower to have a fun and enjoyable semester.",
    "yes; as i stated above, i grew & learned a lot throughout the course of CS50. computer science knowledge is becoming more and more important in our technological age, and CS50 helps students build a solid programming \/ coding foundation. even though the course has hundreds of students & lectures are online, the many special events not only help students meet & connect with their CS50 classmates, but also create a collaborative learning environment.",
    "I would definitely recommend this course as a great introduction to computer science. For students with both no experience or have had experience, you will learn a lot if you put in the effort and time to engage with the lectures and problem sets.",
    "Yes",
    "Yes, would definitely recommend regardless of major.",
    "Yes! It is a great course for students interested in the CS major or people who just want to learn to code in general",
    "Yes. This is the best course I've taken at Yale so far. It's super challenging but very rewarding in terms of learning.",
    "Yes - I was once a skeptic too, but now I see why it lives up to the hype. You should find out yourself - especially if you don't think you're interested in computer science. You don't even realize how useful it is.",
    "yes",
    "Yes, this is a super great intro coding class.",
    "Yes, they teach most of what you would need if you are not in computer science major but want to learn the basics of programming.",
    "Yes, it's a great introduction to CS",
    "Yes I would. It is a great gateway to programming.",
    "Yes. Great course to start learning computer science.",
    "Yes! This was a great introductory course to computer science.",
    "I would recommend it, but I think anyone who wishes to take it ought to have a clear reason in mind for why they want to take it. The course can be a lot of work for those who are totally unacquainted with computer science, and in order to get something out of the course, you do have to put a lot of effort into it. I think ideally, a student who wants to take this course should have some interest in doing programming of some sort outside of school. Perhaps they might be interested in creating a website, or an app, or a game, or simply in finding work related to computer science somewhere, or something else entirely, as long as there's some kind of programming involved. Otherwise, they might find themselves wanting to drop this course because of its high level of intensity.",
    "I would definitely recommend this course to any student who wants to try computer science and is willing to work hard to learn it. After having taken the class, I think CS50 is a perfect introduction to computer science and should serve as the basis for other computer science courses (they would be much more popular\/fun). By the end of the course, you have learned so many concepts and languages, especially if you are entirely new to the field. And the learning process is a lot of fun. However, I would not recommend the class to someone not willing or able to put a fair amount of work into the class. It is definitely not as difficult as it is hyped up to be (problems sets can definitely be done in a day or two of hard work and grading is quite generous), but you do have to be willing to put in a good amount of work to get the maximum out of the class. I would advise next year's students to go to office hours whenever possible and attend CS50 lunches, puzzle day, the hackathon, etc. to get the full experience and utilize all the resources available. Additionally, I would recommend choosing a final project that you can really fall in love with.",
    "Yes",
    "I would recommend this course to another student because you it is flexible course that introduces students to very practical problem solving skills and computing languages.",
    "definitely!",
    "Of course. This, from what I've heard and from personal experience, is the best introductory CS class offered at Yale; plus, you get to go to a cool hackathon and present an awesome project.",
    "YES! It's very fun in terms of how the course is designed like some brand with merchandise and a sense of togetherness with other cs50 students and is organized very well to give an exciting start on learning coding languages and plenty of office hours to help you through the workload (which is honestly not as bad as it is hyped up to be, you just have to dedicated 1-2 days of the week to the Psets).",
    "Yes. This course is indeed quite a time sink but if you're unsure about CS or just want to get a ton of background on it in a short amount of time, this course will surely meet (and likely surpass) your expectations. To put it simply, this course gives you an insane amount of bang for your buck.",
    "Yes, it is a great introduction",
    "I would recommend this course to students who have the space to invest a large majority of their energy into this class. This is the main entree, you cannot take this class as a side course because it will take so much intellectual and creative energy out of you. So make sure that you plan to put your all into this course because it require it."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "100",
  "section": 1
 }
}