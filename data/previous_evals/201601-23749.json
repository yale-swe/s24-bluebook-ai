{
 "crn_code": "23749",
 "season": "201601",
 "legacy_coursetable_course_id": 38233,
 "enrollment": {
  "enrolled": 8,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC305",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    0,
    2,
    2,
    3
   ]
  },
  {
   "question_id": "YC306",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    0,
    3,
    1,
    3
   ]
  },
  {
   "question_id": "YC307",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    6,
    1
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC304",
   "question_text": "How would you summarize ECON 111 01 for a fellow student? Would you recommend ECON 111 01 to another student? Why or why not?",
   "comments": [
    "Good class, not super exciting but you really do learn how to code. You just sorta reach the end of the semester and are like \"oh shit, I actually know how to program in c++; that's weird\".",
    "This course is good, but only a very specific person would take this course. As an undergraduate you would almost certainly be better served by taking one of the standard intro CS courses.",
    "You will learn a lot from this course, but it is a ton of work. For some of the later problem sets, I was easily spending 10-15 hours per week on them. I took this as a non-physics major and was fine, although there were points at which I had to seek out extra help due to my lack of physics knowledge. Overall, I would recommend this to anyone interested in learning to code in Python and C++.",
    "This is a very difficult but rewarding Python and C++ class with emphasis on techniques useful in scientific research. Take it if you are interested in developing those skills. Some background is good to have.",
    "I would recommend that you take this course if you are interested in getting to know various practices in the field of scientific computing. The course starts of with python so that implementing the algorithms are easier and you can focus on the algorithm rather than the programming. When you move on to C++, you also learn more about good programming practices, how a computer manages memory and learn to write efficient code. The course provides a good general exposure and you can also go into implementation details and work through making an N-Body simulator to get a better grasp of projects with complexities.",
    "A wonderful introductory to programming course that goes over a lot of material in an easy to approach manner. Covering the basics of shell scripting, python, and C++ is a lot to do, but Professor Nagai does it in a very understandable way. The last few weeks regarding C++ and the final project are much more difficult than the first few weeks. I believe that this course is taught in a way that is much more approachable and cohesive than most of the other introductory programming courses at Yale. It doesn't try to do too much within the language, but it does go into some depth when it comes to computational optimized algorithms. The problem sets can take quite a bit of time, especially towards the end, but they are rather rewarding and do not feel like busy work at all."
   ]
  }
 ],
 "extras": {
  "subject": "PHYS",
  "number": "478L",
  "section": 1
 }
}