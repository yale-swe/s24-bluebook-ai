{
 "crn_code": "22563",
 "season": "201301",
 "legacy_coursetable_course_id": 20858,
 "enrollment": {
  "enrolled": 93,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    1,
    2,
    25,
    31,
    16
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    2,
    13,
    19,
    41
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    63,
    11
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "If you have a good math background (through, say, math 230) and know anything about graphs, skip this class. Most of the algorithms are either graph algorithms or possess a very natural interpretation as a graph algorithm, and those are good to know, sure, but if you can reason about graphs you won't learn a lot. If you're that person, most of the information can be gleaned by reading the Wikipedia pages and course notes from other colleges correspond to the material. The material is interesting, yes, but this course didn't go into enough depth to be very interesting. For instance, while proving that certain problems were NP-hard was cool, I came away with the sense that there is only one NP-hard problem and that other problems are all some degree of generalization of it. It didn't really feel natural. There was one really cool moment: we did some randomized algorithms at the end and some of those were essentially magic. So take randomized algorithms instead.",
    "This is a required course, so instead of answering this question, I'll offer you a quote from Dan Spielman about the P = NP problem: \"If you can solve this problem, you'll get $1 million, but there are better ways to make $1 million, like raking leaves. [...]I've never had an idea about this problem that I could convince myself is true for more than 30 minutes, even while blindingly drunk.\" Get ready for a fun class.",
    "Computer Science 365 is required for the CS major, but if you can make it count for anything else, absolutely do! I might not get the best grade in the class (the midterms are very difficult, since the material is difficult to work with without references), but having the chance to talk with Dan (this is what he likes us to call him) makes the possible GPA hit worthwhile.Even if it doesn't pertain to your major, andyou like math, take this class Credit\/D. That way, you have nothing to lose and you get the chance to interact with Dan. If you can take this course, do. I can't stress this enough.",
    "I took it as a second semester sophomore. It was the 3rd best class I took at Yale, only beaten by Math 300 with Fresen and English 114 with Komorowski. Spielman is a fantastic professor. Just shop one class and you'll see what I mean.",
    "yes",
    "It's definitely a very interesting class for CS\/Math students who love solving puzzles. You learn a lot about designing algorithms for a variety of problems just as the title promises. Beware of the problems sets though! They can excruciating if you don't get started on them early. On a bright note, you learn a LOT just by doing the problem sets which sometimes had fun problems. There were 9 weekly problem sets and two in-class midterms. The mid-terms were difficult too especially under the time constraint. Overall, a great class but you have to put in a lot of work to succeed.",
    "Highly recommend taking the class. The size seems to have burgeoned which led to rushed grading and a very skewed grading curve, but the material is interesting. Very proof-based, prereqs are totally unnecessary, math majors will have an easier time than cs majors.",
    "Good class. First 5 weeks are extremely applicable and interesting. Last 5 are interesting but more theoretical.",
    "This is a phenomenal class. I would recommend taking it even if you aren't a computer science major.",
    "One of the best courses I've taken in the CS department at Yale. Problem sets were interesting, if a little inconsistent in difficulty.",
    "Definitely take it!",
    "Algorithms is a really interesting class and Spielman is a great lecturer.",
    "Algorithms was one of those classes that I went into thinking it was just another class that I had to get through to get the CS major, and I came out with a serious appreciation for the theoretical underpinnings of problem solving and complexity. I really liked most of the topics taught, and the problem sets were challenging and extremely satisfying.By far my favorite part of the course was that Spielman believed in every one of his questions requiring an \"Aha!\" moment. Indeed, to reinforce this he banned collaboration, in case someone else steals our \"Aha!\" moment. The four problems on most problem sets were just out of reach, so you puzzle and puzzle and then, \"Aha!\"",
    "Take 365. It's not too much work, the material is interesting, and Spielman is one of the best professors at Yale.",
    "This is a great course that covers all the major types of algorithms one might encounter. It's well-taught and thorough. If you enjoyed discrete math and, in general, puzzle solving, this is a great class whether or not you're a CS major. If you've covered a lot of graph theory (trees, etc.), then the first couple problem sets will be pretty easy.",
    "Definitely take it if you are at all quantitatively inclined.",
    "If you're a comp sci major, you have to take it. If you're not, take it for fun\/if you enjoy graph theory and combo.",
    "I would recommend CS 365 to any computer science major (it's required). For non-CS majors interested and taking a lot of classes in CS, I'd definitely also recommend it.",
    "I took the class credit\/D\/fail, and it was alright. The ban on collaboration is a huge detriment to the class. There are tons of problem sets where the questions are more of riddles than questions and you essentially need to know the answer to be able to respond in a timely manner. Otherwise you can just spend tens of hours banging your head against a wall until you can come up with something else. Being able to briefly discuss the problems with others would be extraordinarily helpful.",
    "You probably have to take it.",
    "This course is fantastic, changes the way that you think about algorithms and really your approach to doing anything at all. Spielman is truly a genius and cares about his students. Take this course.",
    "Yes take it. If you have any interest in algorithms and discrete math, there's no class better than this at Yale. You learn a lot of material and also learn how to approach problems in different ways.",
    "YES!!! Best course ever.",
    "I would highly recommend this class to another student. The problem sets are challenging. The professor is great. As a math and computer science major this is exactly the type of course that I was looking for. In addition the grading is extremely fair. Problem sets count for the majority of your grade which means that the work you put in day to day will ultimately count significantly towards your grade. This is probably one of my favorite classes so far at Yale.",
    "This is a theoretical class about analyzing algorithms, i.e. proving things about them. You basically prove that algorithms are correct or fast or that they exist in the first place. It's a well-taught huge lecture class. Shop it and take it if you want, but know that the pace picks up toward the end of the semester! (It's never unmanageable, but shopping period gives the impression that the course is slower \/ easier than it is.)",
    "A good introduction to proof-based thinking about algorithms, particularly proving their correctness and demonstrating their complexity. You really learn to think and have ideas yourself about algorithms\u00e2\u0080\u0094it's not just memorizing things other people already figured out.",
    "Problem sets take as long as it takes for you to find a solution to the problem, so it is unpredictable how long you will take to finish.",
    "Definitely recommend it. Really good course that covers a lot of different topics in algorithms. The level of rigor is higher than other comp sci classes, but lower than most math classes. I came into the class as a math major and found the problem sets extremely interesting and reasonable in terms of difficulty. Shop it and try a problem set if you're curious!",
    "Take it. If you are interested in math, cs, or are just curious, you should take this course!",
    "Yes. Great course to get an introduction on fascinating fields in computer science.",
    "A very well designed course. There is nothing special about the lectures but Spielman puts a lot of effort in the problem sets as will you.",
    "Ah... Definitely the best class I've taken at Yale so far. HIGHLY recommended to everyone, not just CS majors. I came in withjust introductory discrete math (CPSC 202) and no proof-based math background besides that. I didn't think the class was prohibitively difficult despite this. CPSC 223 should definitely NOT be a pre-req. Didn't learn much in 223, which I took concurrently, that would help in 365. If you are debating taking them both at the same time, DO IT (as long as the rest of your schedule is light or if Eisenstat is NOT teaching 223). Learned so much. Got better at tackling algorithmic problems. Lectures were engaging and fun. Problem sets were difficult but not bad in the end. Spielman is an amazing teacher. He is so passionate about this stuff. TA's are also pretty good at their job. They'll help you think about problems but will not give away answers, which is an admirable balance to strike.",
    "Absolutely take this course. It was my favorite of the whole semester and I had anticipated that it would be my least favorite. I had missed a lot of background in computer science and did not feel comfortable with basic algorithms entering the course. But the class worked at a good pace and reviewed a lot of material that I was worried would be expected knowledge and I feel so much more confident now.",
    "PSETS are hard but very worthwhile. Take this course.",
    "Most CS students at Yale have a solid advanced math background so this problem is easily overlooked, but the prerequisites for this class do not cover what we're expected to know. Professor Spielman gives very math-heavy, proof-driven explanations before showing us the concepts behind them, and I had a much easier time learning the material by watching the corresponding animated gifs on Wikipedia. The problems on exams and assignments are basically in binary: either you figured it out, or you didn't. Fortunately you can figure them out if you experiment with them for enough hours, but in the end the course feels more like a test of raw problem solving skills than actually learning fundamental algorithms. Regardless, it is required for the CS major and most other students seem to really like it, so you might as well take it.",
    "Great course. Recommend for both CS and non CS majors",
    "Design and Analysis of Algorithms is a great course. You learn a lot of really useful information. Doing the problem sets by yourself is really rewarding, but this class will take a lot of time. If you put in the work, it will be worth it.",
    "Challenging but awesome class. You learn a lot of cool stuff, and Dan is a great professor. Problem sets were sometimes tough but you get a lot out of doing it. This is definitely one of those classes you walk away from feeling like you learned something important. Be ready to put in the work. I highly recommend.",
    "I would definitely recommend taking the class.",
    "TAKE THIS CLASS!! This was one of the two best classes I've taken at Yale. Obvious caveat: this is a math\/logic class, not a cs class. You will not be doing any coding. But it taught me at least to think in new ways and was genuinely worthwhile in every possible way.You will spend a lot of time on homework. A lot of time. But I, at least, found it very very enjoyable :) If you have a chance to read ahead in the textbook, your life will get much easier.Also, YOU SHOULD TAKE THIS EVEN IF YOU'RE NOT IN THE MAJOR OR DON'T HAVE THE PREREQS. I didn't have one of the prereqs and it totally didn't matter. Great class, and I'm not even a CS major :)",
    "I started the semester with a sense of impending doom. I am one of those CS majors who hasn't done math in years, and got annihilated by 202. I was bracing myself for another C+. But to my surprise, the problems in this course were at their worst, pleasant puzzles to think about, and at their best incredibly exciting and fun. Best problem sets in the computer science department. This course was exceptionally well prepared. Spielman is not only an algorithms genius, but also a talented professor. Take this course!",
    "Extraordinarily well taught! Spielman is a joy to listen to and the textbook is excellent as well.HOWEVER, the no collaboration policy is draconian while at the same time cheating by giving a friend a hint gives an enormous advantage and would be impossible to detect (because you would still do all the proving and reasoning yourself, like in any other collaboration class). Some psets I had inspiration and answered all the questions easily. Others I didn't, and after many hours I had gotten nowhere. The stress this causes is terrifying. The in-class exams are also far too short, and you really need to be quick.",
    "Cool class, especially considering that algorithms research is an active area. If you have a strong background in math, the proofs will be fun and interesting. If you've struggled with math before, then this class will likely involve a lot of staring at the chalkboard\/paper. Really, you should think of it as a math class. Professor Spielman is a bo$$, but even so, lectures can get a bit dry. Many of the algorithms prove counterintuitive and surprising results. Highlights of the class for a math-y brain are NP-completeness, approximation algorithms, and dynamic programming, which is kind of like magic. Workload is manageable. Also, if you're like me, you'll never have the willpower or skill to work through this stuff on your own (which you might be able to do with things like learning a programming language). So it's good to have someone to teach it to you. Recommend.",
    "I would totally recommend this course.",
    "A great course to learn algorithms with an amazing professor.",
    "a must-take. its hard, but changes your way of seeing problems.",
    "Great class to develop your algorithmic skills. Looking back, I am glad I took this course before taking other higher level CS courses as now I have a deeper understanding of algorithmic design and how to analyze them",
    "The course was a great survey of methods in programming. I would recommend to anyone interested in programming or just fun, challenging problem solving.",
    "I would definitely recommend CS365, but only to someone willing to put in work on the problem sets. You need to start them early and put time into them - doing them the day of or close to that will only end badly.",
    "If you're interested in the more theoretical side of computer science, definitely take this course."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "365",
  "section": 1
 }
}