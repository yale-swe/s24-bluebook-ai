{
 "crn_code": "21624",
 "season": "201201",
 "legacy_coursetable_course_id": 15071,
 "enrollment": {
  "enrolled": 93,
  "responses": null,
  "declined": null,
  "no response": null
 },
 "ratings": [
  {
   "question_id": "YC005",
   "question_text": "Overall, how would you rate the workload of this course in comparison to other Yale courses you have taken?",
   "options": [
    "Much Less",
    "Less",
    "Same",
    "Greater",
    "Much Greater"
   ],
   "data": [
    0,
    2,
    19,
    43,
    15
   ]
  },
  {
   "question_id": "YC006",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "Poor",
    "Below Average",
    "Good",
    "Very Good",
    "Excellent"
   ],
   "data": [
    0,
    4,
    18,
    35,
    22
   ]
  },
  {
   "question_id": "YC007",
   "question_text": "Do you expect to use this class for credit toward your major, or toward a pre-professional program?",
   "options": [
    "Yes",
    "No"
   ],
   "data": [
    55,
    24
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC004",
   "question_text": "How would you summarize ECON 110 05 for a fellow student? Would you recommend ECON 110 05 to another student? Why or why not?",
   "comments": [
    "yes take it was soooo easy but there was alot of computer nerds...:(",
    "Definitely a lot of work, but very rewarding. You come out of it and you feel like \"wow I actually learned something.\" I am a CS major, and I think that this class was very formative in that respect, but it can be useful for non-CS as long as they're conscious of the fact that this class is gonna take most of their time for the semester. Definitely not a fifth class or anywhere near that.",
    "Great class. Great professor. Even if you don't expect to major in CS, take it and let it show you that you do, in fact, want to be a CS major. I'm a little worried that the problem sets were so easy with Aspnes that 323 will beat me down, but having not taken 323 yet, I don't know if there's any truth to that worry.",
    "Professor Aspnes is an incredible teacher. He certainly knows his stuff; he responds nearly instantly to students' questions via email; and he engages with students very well.Some people (mostly older students) have commented that based off of our problem sets, we might not be fully prepared for 323, but I guess we'll just have to wait and see",
    "The material in 223 is very similar to the material you use to prepare for CS technical interviews. If you do one, you can do the other. The problem sets with Aspnes were easier than in previous years, and he is an interesting lecturer. Sometimes he would digress in class, and seeing code written on the board is not super helpful, which explains why attendance dropped throughout the semester. You probably have to take this, and if you are confident in your problem-solving\/programming abilities, I wouldn't worry about not having taken 201.",
    "Definite good stuff to know even if you're not planning to be a CS major.",
    "Recommend it. It is what it is, do it if you want to learn how to program.",
    "If you want to learn to program in C, or just get better at programming in general, this is a great class.",
    "CPSC 223 is a great class to take; solving the weekly psets is what makes this class worthwhile. Professor Aspnes is an entertaining lecturer (and artist). Whether you're a CS major or just interested in programming, this is a good course to take.",
    "Tough psets, but would definitely recommend if you enjoy programming.",
    "You will get a 100 on every problem set. The tests will determine your grade, and they are not formatted very well at all. 4 points, 20 points per question. Some questions are something like \"find the one line that produces an error\" - not a very good judge of what you've learned in the class. That said, I learned a lot. Take this class.",
    "Taking this course with Aspnes was a very difference experience than taking it with Eisenstat. With Aspnes, you will do a lot of programming in C, and you will have a lot of long nights trying to figure out what happened to your allocated memory. Nevertheless, I think that this class was worth it because it allow you to understand how memory works along with implementing data structures.",
    "Great class. It made me the programmer that I am and built the foundation for future progress. The assignments are fun (except the grueling last 10% on any test for any assignment, except the ones you ace first try) and generally understandable. The knowledge imparted is indispensable for any class after this. The curve would have been harsh because almost everyone did well on almost every assignment, but the last assignment thankfully fixed that. For those of you looking for applicable experience, I know someone who got a Microsoft position off of this class and I got a research positon because of my low-level (read: not Python or whatever) skills. Overall take it if you are considering it; computer science classes are arguably the most practically applicable of any class and this is no exception.",
    "Definitely a good experience, makes you very conscious of your memory usage.",
    "If you love programming, and are even slightly considering the CS major, then definitely take this class. Aspnes is a very entertaining yet knowledgeable professor. Yes, the homeworks in this class are quite time consuming, but most of them are actually fun to do, and really rewarding once they finally work.",
    "This is a great intro to C and to basic data structures. I enjoyed it a lot, and I'd definitely recommend it. I know that Eisenstat usually teaches it, so I can't speak generally, but Aspnes was a fun teacher. The exams were also very fair and straightforward.",
    "The class itself is a must-take. It is the precursor and necessary requirement for any job or class. Data structures and Algorithms are the two fundamental classes for anyone looking to major in CS or to develop a strong programming background. At this same time, this class with algorithms is sufficient to ace any technical interview. I had no problem interviewing at startups such as Rapleaf, and corporations such as Microsoft. But if Aspnes is teaching this again next year, be prepared to self-study. He is definitely very intelligent and knows how to program, but his lectures are terrible (he just write code on the board and attempts to explain it, but ends up just mumbling and following with some joke and a drawing of an angry robot). On the bright side, his notes are excellent and easy to follow. If you are looking to major in CS, you'll probably have to take this class anyhow. If you are looking for some more in-depth programming knowledge besides the basics you learn in 112 or 201, this is a must-take.",
    "I would recommend this class because it helps get a working knowledge of computer systems.",
    "I would recommend the class if you have to take it for the CS major. The information it has is good to know, but a lot of it could be learned with some quick self-study.",
    "Fun and easy problem sets.Exams have some stupid questions with pointers and crazy loops that are completely irrelevant to the course. Also, if you just want a good grade, don't bother learning about hash tables or balanced trees or anything remotely complicated - they will always ask about basic stacks or linked lists or something.",
    "If you are anything like I was before starting this class, you are pretty new to computer science. You are starting the semester wondering if you can really make it as a CS major, especially around all these crazy coding geniuses who could finish the 201 homework in 40 minutes flat. You love coding, but you really are not fluent yet. 223 will change this. I entered loving the idea of computers and coding, and left with knowledge of how to code competently and well in C. If you are not a super genius who has programmed since preschool, you will have a hard time, and spend more time on the psets than any other hw ever. But it's all worth it to learn C in a rigorous and insightful way.",
    "This is a very important class to take for understanding computers and programming at the lower level -- memory allocation, addresses, etc.",
    "This course provides a solid introduction to programming in C and to computer science. It goes into more depth than AP Computer Science, although there is some repeated material. The programming assignments were doable and the tests were fair. Overall, I'd definitely recommend the course!",
    "recommended. its required comp sci but i know some non-compscis who took it as well and they liked it.",
    "CS223 is a great class. Aspnes explains everything in simple terms and draws pictures on the board to help students understand potentially confusing concepts. I would definitely recommend this class.",
    "I think 223 is immensely helpful especially given the ever-increasing role of computers, but only take it if you're a CS major, extremely good at the C programming language, or want to have no social life.",
    "For most value, take this concurrently with 365. 365 will seem tougher at first, but then the end of 223 should be trivial (actually implementing the algorithms you learn in 365).",
    "Take this if you want to start becoming a real programmer. Learning C is a totally different experience than learning a higher-level language like Java. It's harder, and you get more out of it. The psets are challenging but not too bad.",
    "I'm a non-CS major and loved this class. Be prepared to spend a while on each problem set, and don't flirt with the late deadlines. Take it if you feel like CS concepts come fairly naturally to you, and if you felt like you completed the problem sets for CPSC 201 faster or with greater ease than half the class.",
    "CPSC 223 is a good course, you'll learn a lot. The workload is pretty reasonable. I thought the assignments and lectures were great, but the exams were terrible. They were very short, asked obscure questions, and didn't really correspond well to what we learned in class\/for homework.",
    "take it",
    "Well, it's a required course for the computer science major so you know if you have to take it. If you're not a computer science major, you probably have better classes to take.",
    "Difficult class, only take if you are serious about being a CS major",
    "This course gives you an introduction into the amazing yet terrible language of C. Aspnes is a great teacher even if the material occasionally gets dry. It has a moderately large workload of about 7 hours per week. I would highly recommend this class for anyone who enjoyed 201.",
    "CPSC 223 is solidly covers many data structures and useful tools for programming. I would definitely recommend it; it gave me a great appreciation for the lower level programming and tweaking for efficiency that all other programming depends on.",
    "Yes, great introduction to C programming and data structures.",
    "YES! definitely, it just deepens your understanding and appreciation for computer science, and offers really helpful tools for computer science program design. It is interesting and engaging!",
    "I would definitely recommend this course with Professor Aspnes. The problem sets were quite reasonable and I feel I got a ton out of the course.",
    "Essential class for the CS major. Not the weed out course it used to be, but a fabulous course.",
    "CS223 is a course for anyone who wants to have a general knowledge of CS and basic programming, even if you are not planning to be a CS major. Although it is not an easy course, the material that you learn there will surely be applicable to many of your other classes, especially if you are in the math and sciences.",
    "This is a class that's all about programming in C so if you've had experience with programming with similar languages like Java, you should have a pretty easy time with the syntax. The main challenges of the course are optimization of code and good programming practices which are essential to any serious programmer.The ten weekly problem sets are worth about two thirds of your grade and the two in-class midterms account for the rest. Beware of the midterms though because it is really easy to screw up on them because of the time constraint imposed during the exams. It is really easy to do well on the problem sets and mess up your grade due to the midterms.Overall, the course was easier than I expected it to be. The past evaluations of this course (especially the sections taught by Eisenstat) misled me into thinking that it would be the most difficult course for me this semester. So I think that the level of its difficulty depends on the professor that you get.",
    "Definitely recommend. I recommend all comp sci classes (well, most) to anyone, and this is the best one I've had to date. It's a bit of a time suck though, so allocate as necessary.",
    "good fundamental course required for cs",
    "A great course to learn C and data structures. Professor Aspnes is fun, and you will enjoy going to class. Problem sets are hard but with so much help at the zoo, they are easily do-able.",
    "If you want to learn C, definitely the class to take! Hard but rewarding problem sets. I learned a lot and feel very proficient in C.Just be warned that the problem sets do take a lot of time and require a good amount of thinking. As long as you don't start the night before you should be fine! Also, make sure to discuss ideas with classmates as a way to sort out the thoughts in your head.",
    "Not easy, but you will learn a lot. Very useful for those wanting to gain a solid CS foundation.",
    "You probably don't have much of a choice I'm guessing. Don't worry, its not too bad. Some PSETs took< 3 hours, others more than 20. One a week, 10 for the semester. There are 2 exams (no final) each worth 3 homeworks. Be prepared for the exams, they will make or break you. 4 questions, one where you have to find the error in the code, one where you have to write the code yourself, one where you must write about data structures, and another where you have to give the output of a certain program. My advice: Quality> Quantity. Tests will not be a rush like in 201, take your time and make sure your answer to an easy question is Perfect before pouring all your time into a more difficult one.",
    "Yes I will if you want to learn some solid computer science stuff.",
    "Yes.",
    "Yes, but mainly because it's required for the compsci major, and being in a class helps me learn things. If you can self-study C programming and don't need to take the class, then it's probably not the best investment of time.",
    "Take this course if you want to become a better programmer and understand the inner workings of programming languages. C is tough but a great learning experience."
   ]
  }
 ],
 "extras": {
  "subject": "CPSC",
  "number": "223",
  "section": 1
 }
}