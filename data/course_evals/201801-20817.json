{
 "crn_code": "20817",
 "season": "201801",
 "enrollment": {
  "enrolled": 22,
  "responses": 19,
  "declined": 0,
  "no response": 3
 },
 "ratings": [
  {
   "question_id": "YC402",
   "question_text": "Your level of engagement with the course was:",
   "options": [
    "very low",
    "low",
    "medium",
    "high",
    "very high"
   ],
   "data": [
    0,
    1,
    2,
    2,
    2
   ]
  },
  {
   "question_id": "YC404",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "fair",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    0,
    1,
    2,
    2,
    2
   ]
  },
  {
   "question_id": "YC405",
   "question_text": "The course was well organized to facilitate student learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    0,
    0,
    3,
    2,
    2
   ]
  },
  {
   "question_id": "YC406",
   "question_text": "I received clear feedback that improved my learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    1,
    1,
    2,
    2,
    1
   ]
  },
  {
   "question_id": "YC407",
   "question_text": "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge<\/u> of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    0,
    2,
    3,
    2
   ]
  },
  {
   "question_id": "YC408",
   "question_text": "Relative to other courses you have taken at Yale, the <u>workload<\/u> of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    1,
    4,
    2,
    0
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC401",
   "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
   "comments": [
    "learnt many numerical methods to solve various math\/econ problems, and how to code in fortran (somewhat)",
    "Learned all about optimization methods, computational economics, and dynamic programming.",
    "We covered the basics of a variety of computational methods used to solve numerical economic problems, including root-finding, differentiation, integration, cubic spline interpolation, minimization, and dynamic programming models. We also learned how to solve these problems in Fortran, an old but fast programming language. \r\n\r\nWhat I took away most from the course was a greater intuition for reframing economic problems recursively as dynamic programming problems.",
    "Optimization techniques for economics!",
    "I learned how to apply certain computational methods and dynamic programming techniques to the field of economics."
   ]
  },
  {
   "question_id": "YC403",
   "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
   "comments": [
    "there could perhaps be a session \/ class devoted to fortran itself and understanding how it works  would probably have saved us a lot of trouble when trying to write up code for the problem sets",
    "I loved it. Yale needs to step up the mathematical and quantitative rigor of its undergraduate economics classes and this does precisely that.",
    "It was a great class.  I learned all sorts of techniques for optimization and computation, but I wish there were a little more proof involved.  I like math, so having a short sketch of the proofs behind convergence, etc. would have been nice.",
    "Strengths: Tony Smith is a great person and has a lot of knowledge in solving computational economic models.\r\nWeaknesses: Some lectures seemed not very prepared. No feedback on the PSETs until the very end.",
    "Strengths: I liked that we covered a wide range of economic applications for the methods we learned. The final project was also a great way to explore an additional topic of my interest, and I appreciated that the difficulty\/complexity of the project could be tailored to be appropriate for undergraduates vs. graduate students. Prof. Smith was also very willing to help during office hours and meet outside of class. Weaknesses: This class should not be advertised as appropriate for people with no programming experience. Writing good code requires a solid foundation -- either this class needs to contain a more comprehensive crash course on programming, or there should be a programming prerequisite. I also wish the course had been better organized; for example, we did not receive any grades or feedback on our problem sets, so it was difficult to tell where I stood."
   ]
  },
  {
   "question_id": "YC409",
   "question_text": "Would you recommend this course to another student? Please explain.",
   "comments": [
    "meh. interesting class and material, but the focus is more on what these various computational methods are, as opposed to how to implement them and so all the coding in fortran was a pain.",
    "I highly recommend to anyone who likes programming and has a solid math background. The course mixes undergraduates and PhD's and you choose to explore any topic that interests you and write a final paper on it for the second half of the course after building your modeling toolkit in the first half.",
    "Yes, this is a great senior econ seminar! I was a little intimidated at first, and I would recommend that you come in with at least some experience coding. But the professor is really approachable and does a good job of explaining the concepts we learn plainly so everyone can understand. He's also pretty chill and probably won't grade that harshly. He cares more that you're engaging with the concepts from the class and applying them in a meaningful way.",
    "Yes!  It was a great class that crosses over from Applied math and Econ, counting for both.  Prof. Smith is wonderful and willing to meet with students about psets and projects.  I would highly recommend.",
    "Would recommend if you want to learn numerical methods in how to estimate derivatives, etc. If you're an ECON major that has no experience in programming this would be pretty difficult.",
    "This is a good class if you are already well-versed in economic theories, have a decent background in programming, and want to learn how to use computational methods for various economic applications. Even though Prof. Smith provides a lot of reference textbooks and is very helpful during office hours, I think this class would be very difficult and unproductive with zero programming experience. The lectures were casual and often went off on tangents, which made it hard for me to see the bigger picture of what we were learning. This, along with the lack of feedback on homework assignments. made the class somewhat frustrating, but as an undergrad, I did appreciate that Prof. Smith had realistically different expectations for undergrads and grad students."
   ]
  }
 ],
 "extras": {
  "title": " ECON 561 01\/ECON 417 01\n        Computational Methods for Econ\/Computational Methods "
 }
}