{
    "crn_code": "20826",
    "season": "202301",
    "enrollment": {
        "enrolled": 47,
        "responses": 46,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                1,
                1,
                4,
                11,
                22
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                1,
                1,
                8,
                13,
                17
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                1,
                0,
                3,
                20,
                16
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                1,
                4,
                9,
                21,
                5
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                4,
                7,
                29
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                1,
                4,
                35
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "I learned a ton about computer systems and how they work. I now have a much better understanding of operating systems, processes, memory, and assembly programming.",
                "I learned all about systems programming (memory management, Operating systems, compilers, assembly code, etc.). In general, I learned how a computer actually works from the lowest level to how a user actually works with a computer, and I also learned how to be a better programmer.",
                "I learned so much about computer science and computer architecture which I had never thought about before. I also learned good time management and how to effectively ask for help when I needed it on psets.",
                "information about systems: assembly, processes, virtual memory, cache, machine architecture, etc.",
                "There's a lot to say here. I learned about how to structure large programs, how computer memory is managed, how compilers work and are implemented, tons about operating systems and related hardware like caches and memory, assembly language, and so many more things along the way that I am sure I'm not recalling right now. This was certainly the most informative course I have ever taken and I felt like I was learning new things every class.",
                "I learned how basic operating systems work which taught me how to write more efficient code. It was a fun but grindy class. You learn about basic computer architecture, assembly language, compilers, floating point, system and processes, how memory and cache work, how address lookups work (page table), etc etc. I also wrote lots of code in C and learned that before you code, you should plan out your steps first.",
                "Systems programming, operating systems, assembly, etc",
                "This course was a complete overview of computer systems at their lowest level. I know have a much more fundamental understanding of how computer systems function and how to interact with them at a very low level. My skills as a programmer have improved tremendously by taking this course.",
                "A LOT. This course does not disappoint in actually teaching you the topics it mentions.",
                "systems programming theory and experience in programming large, kernel-level programming projects. Can learn good time management if you choose to handle the course this way",
                "- learned much more about computer systems and how exactly some computer hardware works in order to compile and execute computer programs\r\n- learned about how to manage big projects and my personal strengths and weaknesses\r\n- learned about how to study for a large volume of very difficult material",
                "I learned a lot from this course about computer systems at a high level, including transistors and adders, CPUs, compilers, OS, memory management, shell. This course taught me how these different parts of a computer work together to make it work. I gained a lot of insight into the kinds of optimizations that go on in the background, and the knowledge I've learned is very helpful for understanding computers and becoming a better programmer.",
                "Computer architecture, ability to work on projects for a long time",
                "Learned about computer systems and how code works from language down to machine.",
                "Memory management, compilers, assembly language, floating point representation, processes, threads, cache memory, etc.",
                "A base understanding of computer architecture and how a computer works.",
                "Low-level understanding of computer architecture from basic circuits to assembly to basic OS organization, virtual memory management, caches, improved understanding of C and standard POSIX syscalls",
                "Much improved C skills. Understanding of compilers, system architecture, and memory.",
                "I gained extensive knowledge of the inner workings of computers down to the transistor level, and now have a much better idea of how computer, optimizations, and operating systems work and why they were designed the way they are.",
                "Better programming techniques (know all of the intricacies of C). Inner workings of the computer/computer architecture, logic gates, rudimentary circuits. Error checking, overflow, and dynamic memory allocation with malloc and free. The workings of the UNIX Bash shell - pipelines, signals, backgrounding, zombie and orphan processes. Knowledge of UNIX System Calls. Virtual page allocation, the structure of the main memory, knowledge of the cache. Compilers and optimization problems."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "The course is very well taught. The lectures focus on more theoretical concepts and then the psets require you to implement these concepts and get actual programming experience. However, the homework assignments are incredibly long and time-consuming: in my opinion way more than is necessary.",
                "Strengths: well-organized and lots of support from TAs and ULAs. The material is very interesting and Professor Lim did a great job making it somewhat approachable. The problem sets are very tough but they do teach you a lot of information about how computers actually work and help to reinforce concepts in lectures.\r\nWeaknesses: the problem sets are every 2 weeks, so typically you have one week that's manageable and the next week is very time-consuming, but that's not an issue with the course and more an issue with students. I think that review sessions before the midterms would be very helpful. I also think it could be helpful to explain to students after the problem sets are graded how and why their code could be improved for the future because sometimes a grade was given with no explanation as to which tests were passed vs. failed.",
                "Strengths:\r\n- The problem sets --> each problem set felt very well curated to teach the concept at hand\r\n\r\nWeaknesses:\r\n- The slides felt disorganized and very difficult to review off of",
                "difficult - definitely takes a lot of time pset-wise, and the concepts are not easy to grasp either. But the course it set up in a way that you are able to get support. I do think the class covers a lot and it's hard to fully grasp everything, but the ULAs are great and the community is great as well. I wish there was more preparation or materials to help get ready for exams.",
                "Strengths: Depth at which material is covered - each subject is covered enough to feel satisfied without going into so much depth that it overtakes the rest of the course. Quality of assignments - each assignment is so well made and is perfect for solidifying and furthering my learning of the material in class. Grading - This course is weighted in what I feel to be a very fair and supporting manner; there are plenty of opportunities to boost your grade, the structure of the psets and tests are layed out clearly beforehand, a relatively fair amount of the course is weighted towards psets vs. tests, etc. Teaching staff - both Jay and the supporting ULAs were great for this course, office hours were helpful and lectures were very engaging.\r\nWeaknesses: I don't have any real gripes with this course. Some of the pset can be particularly frustrating, but I think that is the nature of computer science. I would have really appreciated it if the WeenzyOS and the final project had more convenient ways to debug in the user space but I don't think that is something that is easy to change.",
                "The course is modularized well. Each unit you have something to learn, and each unit minimally relies on previous units (except for 2 of them). It was really fun doing a coding pset in each unit to practice the material and grasp a better understanding of how everything works. The office hours are AMAZING!!!! They helped me so much throughout the course. You can never fail to learn something; it just depends on the amount of time you put in. The contents are easy to understand but pretty procedural, unlike high level math. I don't see weaknesses as I resolved all my confusions through online searches and office hours. This is an intro class, so the knowledge are not that in depth. But there is one weakness I just noticed: I HATE the test cases in pset. These cases are literally randomized so sometimes you get bad public cases and it takes 324q89p5170598345234 times to figure out all the private cases. Although it's a good practice to write private cases and understand the materials better, but l'm too lazy to be wanting to do that ;-;",
                "The psets are very difficult, but ULAs are very helpful. Lectures are similar to 223 in terms of other cs classes in terms of style.",
                "Give feedback on projects, more exam practice, and put an updated syllabus on the Canvas page.",
                "I wish that the lectures prepared us better for the problem sets. At times it felt like that the lectures had very little to do with the knowledge required to do the problem sets. I wish the lectures focused more on practical code examples rather than just theory.",
                "I think more detailed slides would be helpful but the material was very clear and assignments were too.",
                "great course, very rewarding. Sometimes wish that test cases (or at least descriptions of test cases) were provided so we knew what we were missing points on. Grading on project 5 seemed especially toughdespite programming the entire project, I must have had a mistake in the very last step, causing me to fail the 5 private test cases, and I only got a 55%. \r\n\r\nI *very* much appreciated the grading policy, curve, and extra credit opportunities in the courseif you feel that you are not a good test-taker, do not worry because the two exams will NOT tank your grade",
                "It's a very hard course! I can't think of apparent weaknesses in this course's design; the volume and difficulty of the material and problem sets just seem to make this a hard course. I liked the pace of lectures, and I thought Prof. Lim was a pretty good lecturer.",
                "The psets are designed to help you learn the material. The later psets are outlined in a way to facilitate your progress. Overall the lectures cover a good amount of material, but what we cover is not always relevant to the psets.",
                "I think the course had good projects and definitely forced you to get familiar with the material, however I think the test structure is very feast or famine, and not necessarily indicative of genuine knowledge.",
                "Strengths: Great professor, plenty of opportunities for extra credit, manageable workload \r\n\r\nWeaknesses: Only weakness I can think of is the time allotted for the exams. 30 more minutes would have been helpful.",
                "It is extremely rich with material, but also takes a ton of time and effort. I wish the PSETs were more related to the lectures and I wish the PSETs had a drop or some late days to provide some leeway in the already extremely difficult curriculum.",
                "Strengths: Covers lots of useful interesting concepts with systems programming and computer architecture. Good pacing for coverage of the concepts. Strong support system. Very in-depth and engaging psets. Weaknesses: Somewhat of a disconnect between the lectures and the story of what the slides are trying to tell sometimes, sometimes questions about concepts are answered with a very \"hand-wavy\" or vague answer.\r\n\r\nMy largest quip is that the midterm exams are quick sprints for computation and recall with very limited time rather than testing for deep conceptual understanding. I think it would be much more useful to pick a few topics for long written response-type questions to encourage deep understanding of the material, which I've seen with previously posted content for the course. Anecdotally, the midterm exams are so surface level and dependent on easy computation that I've seen someone get by with an A in the course by beginning to watch lectures a few days before each exam without a deep understanding of the content.",
                "For all the time the course takes, it is well run with incredible office hours and ULAs. Professor Lim is a great and engaging lecturer as well and psets are interesting albeit absurdly long.",
                "I think that the difficulty of this course was just right for me, and the content was taught in a way that made it pretty easily understandable. The PSets were graded very efficiently and quickly, although I sometimes wish that the grading system was better explained.",
                "Strengths - the lecture quality at the beginning was exceptional. The quizzes were well organized to make it so that we could learn on our own succinctly. PSETS were well spaced out and with office hours aplenty to keep us from falling behind. The course was also quite nicely paced overall; did not feel too fast or slow. \r\n\r\nWeaknesses - towards the end the lectures got a bit more sporadic in terms of quality."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "I would recommend this course to anyone with pretty significant programming experience who's interested in learning more about computer systems.",
                "You're probably taking this course because you're a CS major and it's part of the core. I honestly got so much out of it and am glad to have taken the course. Clear your schedule because it's definitely true that the course takes up a large chunk of time; however, it wasn't as stressful/demanding as I had anticipated. Professor Lim did a great job of making the material as approachable as possible, and I think the course will make you a better, more knowledgeable, programmer.",
                "This course is not for the faint of heart. I don't even want to think about how many hours I spent in office hours or my own time completing the psets every week because I think that would be too depressing. However, I think that I am undeniably a better programmer than when I started this course, and it is a necessity for any CS major (literally, as the course is a requirement). I can't honestly recommend this course for anyone who isn't majoring in computer science because I don't see how this level of difficulty would be relevant or necessary. For any computer science students who are taking this course, I would recommend designing the rest of your course schedule carefully around it. Be prepared to reschedule your life around office hours.",
                "If you need it for CS or if you really like the topic -- if you get through the first week/pset, you'll probably be fine, but keep in mind the high workload and commitment",
                "I would easily recommend this course to anyone that has the prereqs and is willing to dedicate a good bit of time to it. If you are prepared for what 323 will be (like any CS/CS-adjacent major that has spent time around similar people will be), and you have the time to dedicate to it, it is one of the most stimulating, rewarding, and interesting experiences you can have in the subject. This course has made me so much more interested in systems and makes me so excited for future courses like compilers and operating systems. I gained so much from this course and I am sure that you will too if you can healthily dedicate the 10-20 hours per week that it requires.",
                "This course is a required course for CS majors anyway. But if you are not a CS major, then taking this course has minimal benefit (unless you are interested in computer architecture and EE). But I would still recommend it. I would say this is a weed out class because it focuses more on you thinking about proficient solutions rather than coding out hard syntaxes. So as long as you understand the materials conceptually, you'll do great on the psets. However it is a weed out class in a sense that if you can't code decently, then you'll struggle a lot. But DON'T BE AFRAID to visit office hours frequently. The staffs were super nice and friendly, and these office hours are literally life savers that carried me throughout the course. So yeah, good luck with it!",
                "I would only take this class if I had to for my major, or don't mind having a lot of extra work every two weeks.",
                "It's required, but I would recommend anyway for how much you learn and grow - the material isn't the hard part of this class. You hear a lot of scary things about this course, but the only thing that was genuinely tough was the feeling of knowing so little in comparison to my classmates and what it felt like the course expected you to. Every lecture was like a club meeting between the professor and a bunch of overeager freshmen who set the curve. I think the course itself is quite good and interesting, except for the lack of feedback on projects, but the environment as a whole can be very discouraging. Many people work together, some more dishonestly than others, which at times made me feel left out or like I was doing the work but others were unfairly getting through the course. Some more positives are Jay's teaching, how engaging the projects are, and the extra credit opportunities. Overall, just prepare yourself to focus on your own work because comparing yourself to the other people in the class will ruin your experience.",
                "Yes definitely. It is a lot of work but not always. Some weeks are bad but the majority of the semester is enjoyable.",
                "yes! Even if you're just taking the programming certificate and don't have to take 323, if you think you might want to take the course, then you should. It's very rewarding and will probably take you up several levels in programming skill+thinking and overall understanding of compilers and OSes, no matter how experienced you think you are. \r\n\r\nin-person ULA/TA office hours are notably useful, but to take advantage of them, you HAVE to start early\r\n\r\nOn workload: Towards the end of the semester I got burnt out and started procrastinating, and ended up pulling 3 all-nighters (one each on the last 3 projects). If you handle 323 this way, you won't feel like it's such a time-sink, but this is also Not Good for your health. You can get ~70%s on the exams and ~90-95% on the programming projects and end with a great grade (which are doable with either all-nighters or being on top of things)",
                "I would. Albeit a difficult experience, I've learned a lot from it and feel that I have grown from the experience. I'm more interested in systems now.",
                "Yes. I learned a lot from this course, and even if you don't go into computer systems in the future, the knowledge and skills you gain from this course are invaluable as a programmer. It is a lot of work, but the TAs and ULAs are there to support you, and the instructor also wants to help you succeed.",
                "If you are majoring in computer science, yes",
                "Yes, it teaches the core of what computer science is, and I think it does a pretty good job.",
                "Yes, if you want a high-level view of computer systems. I dont know if this is because the instructor has changed or because of a recent push to make the core courses easier, but I do not think this class is objectively hard. If you have a good understanding of C programming, I can guarantee that you will not have difficulty with this course. The class really does not go into any depth with the topics covered and is more of a survey of topics in systems programming. Sure, you touch on a lot of major topics like compilers, virtual memory, memory allocation, and more, but you only end up programming simple (and rather inefficient) implementations of them. Quite honestly, I wish there had been more freedom in the programming assignments because for a lot of them youre basically just given a bunch of starter code, and its pretty clear what to do from there. Its definitely more work than 223, but I genuinely think that if youre coming into the class with experience in C programming, the hardest assignments should take at most 15 to 20 hours. The exams were a time crunch and probably the most difficult part of the class, but they dont make up much of your grade anyway (at least relative to other courses). If youre genuinely interested in systems programming, I would suggest taking more related classes after 323 because ultimately, the programming projects for this class are not very intense and will cover only cover the basics. Its still a great class, however, and its pretty fascinating how different techniques, hardware, and data structures are used to make computers more efficient and faster. Professor Lim is also very knowledgable, so if you want to learn more, he has the answers to your questions.",
                "Yes, every CS major needs to understand the ground level of a computer, and CS323 gives you an in depth survey of that.",
                "Yes, one likely has to take it for the major but it's useful to gain a basic understanding of the low-level workings of a computer and the organization of Linux-like OSes.",
                "You will learn a ton. Problem sets are brutally long and I think the 20-40 hour estimates are accurate; however, they are interesting and ultimately very doable albeit time intensive. Prepare to sign away your semester to 323 but you will be rewarded.",
                "I would recommend this course to anyone that wants a deeper understanding of why computers work and why computers are set the way they are. The class has helped me make optimizations in my code that I never would thought would do anything.",
                "Yes. Taught me to be a much better programmer overall and is a fascinating look inside the computer!"
            ]
        }
    ],
    "extras": {
        "title": "CPSC 323 01 - SystemsProgramng&ComputerOrgzn"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9987492561340332,
                0.9988480806350708,
                0.9988512992858887,
                0.9972374439239502,
                0.9988794922828674,
                0.9984130859375,
                0.9920024871826172,
                0.998887836933136,
                0.9988816380500793,
                0.9965846538543701,
                0.9987003803253174,
                0.9989086389541626,
                0.9986532926559448,
                0.9986469149589539,
                0.992520809173584,
                0.9984484910964966,
                0.9805485010147095,
                0.998765230178833,
                0.9987894892692566,
                0.9980068802833557
            ],
            "sentiment_counts": {
                "POSITIVE": 20,
                "NEGATIVE": 0
            },
            "sentiment_distribution": {
                "POSITIVE": 1.0,
                "NEGATIVE": 0.0
            },
            "sentiment_overall": [
                "POSITIVE",
                1.0
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.996254563331604,
                0.9988154172897339,
                0.9974551796913147,
                0.9972370862960815,
                0.9989339709281921,
                0.9988204836845398,
                0.9969249367713928,
                0.9980760812759399,
                0.9993405938148499,
                0.9988886713981628,
                0.997655987739563,
                0.9988057613372803,
                0.9985054731369019,
                0.9837028980255127,
                0.9988952875137329,
                0.9679122567176819,
                0.9988771080970764,
                0.9987862706184387,
                0.9989257454872131,
                0.9988799691200256
            ],
            "sentiment_counts": {
                "POSITIVE": 18,
                "NEGATIVE": 2
            },
            "sentiment_distribution": {
                "POSITIVE": 0.9,
                "NEGATIVE": 0.1
            },
            "sentiment_overall": [
                "POSITIVE",
                0.9
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9988014698028564,
                0.9989390969276428,
                0.9985307455062866,
                0.9926673769950867,
                0.9989173412322998,
                0.9987949132919312,
                0.9994478821754456,
                0.9988823533058167,
                0.9987576007843018,
                0.9968231916427612,
                0.9987406134605408,
                0.9989038705825806,
                0.9956135749816895,
                0.9988884329795837,
                0.9987217783927917,
                0.9988899827003479,
                0.9980514049530029,
                0.9986335635185242,
                0.9989144802093506,
                0.9988641738891602
            ],
            "sentiment_counts": {
                "POSITIVE": 19,
                "NEGATIVE": 1
            },
            "sentiment_distribution": {
                "POSITIVE": 0.95,
                "NEGATIVE": 0.05
            },
            "sentiment_overall": [
                "POSITIVE",
                0.95
            ]
        },
        "final_label": "POSITIVE",
        "final_count": 57,
        "final_proportion": 0.95,
        "final_counts": {
            "POSITIVE": 57,
            "NEGATIVE": 3
        },
        "final_distribution": {
            "POSITIVE": 0.95,
            "NEGATIVE": 0.05
        }
    }
}