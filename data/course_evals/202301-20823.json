{
    "crn_code": "20823",
    "season": "202301",
    "enrollment": {
        "enrolled": 181,
        "responses": 154,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                5,
                10,
                34,
                41,
                36
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                8,
                5,
                30,
                49,
                33
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                3,
                5,
                15,
                54,
                48
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                4,
                13,
                31,
                55,
                23
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                2,
                7,
                37,
                58,
                21
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                9,
                45,
                59,
                12
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "Algorithmic thinking",
                "Analysis of correctness and runtime of algorithm, as well as modification of inputs to use an algorithm to solve problems or modification of an algorithm. Algorithm paradigms taught: divide and conquer, shortest path, greedy, dynamic programming. Also covers P vs NP.",
                "I have a much better understanding of how to solve algorithmic problems. As a lover of logic, this expanded my ability to solve/prove problems, which Im very happy about.",
                "I learned about some of the important algorithm design paradigms, important rules and ideas that go into designing efficient algorithms and proving their correctness, and how to analyze the runtime of more complex algorithms.",
                "I learned how to construct algorithms (divide and conquer, greedy, dynamic programming, flow networks, graph-based problems), analyze their runtime, and prove their correctness. I also learned about P vs NP and how to reduce algorithms (ie, argue about which complexity classes they belong to).",
                "Types of algorithms and thinking of them more mathematically/logically (as opposed to technical implementation you would use for coding interviews)",
                "I feel perfectly capable now of doing any SWE interview. This was basically an intensive interview prep course.",
                "common algorithms and general algorithmic thinking",
                "I learned the four major algorithm areas and how to select the best one, understand how one works, and appropriate correctness and time complexity.",
                "algorithms was good",
                "This course has been one of the most eye opening courses for me as a computer science major. I love the way Professor McKay structures the course because it forces you to think about the process. The content of the course is what makes it difficult and Professor McKay has designed the course in such a way that even though the content is difficult, the understanding will inevitably trickle into your mind.",
                "basic knowledge of algorithms greedy, dynamic programming, flow networks, etc.",
                "In this course, I learned various computer science algorithms and problem solving techniques, and generally how to analyze new problems/solutions.",
                "Learned algorithms in a way that I think will be helpful for the future.",
                "This course has prepare me for job interviews and how to design algorithms",
                "Basic understanding of algorithms. I solidified my conviction that if learning this kind of algorithms is what it takes to get a CS industry job, then that is not the kind of life that I want to lead.",
                "I learned about the different types of algorithms in computer science, but I especially gained a better understanding of dynamic programming.",
                "Basic algorithms knowledge",
                "Knowledge of algorithmic design through learning about historically important algorithms. Other topics include: runtime evaluation, P vs NP, review of data structures.",
                "Knowledge of developing algorithms, proof of correctness, and runtimes.",
                "Algorithms, analyzing runtime and proving correctness",
                "not much",
                "The course provides a rigorous and dynamic algorithmic background that is essential to further study CS. The topics (such as Divide-and-Conquer, Greedy, Flow Networks, Dynamic Programming, etc.) are all presented in a solid mathematical context and follow clear steps, patterns that facilitate the learning and understanding processes. Through the problem sets, we do learn how to think logically and use math in designing efficient algorithms. Those algorithms have (highly) impactful real-world applications, a fact that motivates the students to engage more with the material and work, for example, in teams to fully understand and utilize the valuable learned concepts.",
                "I learned about divide and conquer algorithms, greedy algorithms, and dynamic programming.",
                "I learned about algorithms and all the types of algorithms in computer science, including divide and conquer, graph ones, greedy algorithms, dynamic programming, flow network, P vs NP etc. As well as some data structure like heap, binary tree, flow, and much more. I learned that there is always a tradeoff between space and run time. I learned to think in terms of Big O run time rather than the inefficiency of multiple constants. I learned about millennium problems and some significant problems in the field of algorithms and cs. When I write CS logics now, instead of always using an n^2 loop to check everything, I start to think about efficient algorithms that can get job done much faster.",
                "Runtime Alyssa algorithm design etc",
                "Proving correctness of algorithms Id largely used but didnt know the math behind.",
                "I learned a lot of algorithms useful for interviews and life in general.",
                "Understanding the complexities of algorithms, proving their correctness, and breaking down problems into simpler problems.",
                "Algorithims, proving stuff in a mathematically rigorous way",
                "I learned how to design algorithms to solve fundamental problems in computer science, including sorting, graph-traversal, and scheduling problems. I learned how to apply various algorithm design paradigms (divide & conquer, greedy, dynamic programming, etc.) to systematically produce and prove solutions. I also learned how to analyze algorithms for efficiency (time and space complexity), which really helped me be more aware of little details in algorithm implementation. This class really helped me be more confident with my problem-solving abilities; it showed me that it's not so hard to come up with solutions to seemingly-difficult tasks.",
                "Divide and Conquer algos, graph algos (Dijkstra's, Kruskal's MST, etc.), greedy algos, max flow, discussion of the P vs. NP problem",
                "This course greatly expanded my toolset when it comes to algorithms and problem-solving. I now approach programming problems from multiple angles and as a result, I can write much better programs.",
                "Overview of basic algorithms and implementations. Dynamic programming, divide and conquer, greedy, binary search, graphs, spanning trees, etc.",
                "Almost no new knowledge compared to CPSC 223. The entire class is just an IQ test because understanding the lectures does not mean you'll get far on the homework or the exams. Also no new skills: basic induction or contradiction proofs. The point of the assignments is to be smart enough to come up with an algorithm that the lectures don't prepare you for. Most people end up collaborating with other students just to have something to submit. The only insight I developed by taking this course is that, even though I loved CPSC 323 taught by Abhishek, Yale just doesn't care about CS majors. Taking this class made me regret pursuing this major at Yale.",
                "I learned about time complexity and different algorithms to optimize the running time and memory usage of accomplishing different tasks.",
                "algorithmic design, algorithmic analysis, runtime analysis, dynamic programming, dijkstra, flow networks, divide-conquer, BFS, DFS, greedy algorithms,  P vs NP",
                "I learned about divide and conquer algorithms, graphs and graph searching algorithms, datastructures, greedy algorithms, dynamic programming, flow networks, and P vs. NP problems. We learned some common strategies of how to apply these different types of algorithms, as well as some important algorithms of each category (e.g. depth-first search, matching bipartite, etc). I also learned a lot more about algorithm runtime and big O notation, as well as how to prove that an algorithm is correct.",
                "designing and analyzing algorithms",
                "Various algorithms, recurrences, time complexities, correctness proofs, P/NP, graph theory!",
                "A bunch of different types of algorithms: divide and conquer, greedy, graph algorithms, data structures, flow networks, dynamic programing. How to come up with algorithms to solve problems, how to prove correctness of algorithms, how to analyze runtime of algorithms.",
                "Knowledge of basic algorithms and proof writing",
                "algos",
                "Learned a toolbox of skills and methods to approach data structures/algorithms type questions. Got much better at proofs and analyzing algorithms.",
                "Heaps, Binary Trees, your basic algos",
                "By taking this course, I learned different ways to approach problem solving in computer science and how to think in new ways. This course taught me a lot regarding the basic algorithms and problem-solving methods.",
                "Helped a lot with getting familiar with common data structures and algorithms useful for CS and industry",
                "Asymptotic Notation, Divide and Conquer, Graph algorithms, Data structures applied to algorithms, Greedy Algorithms, Dynamic Programming, etc.",
                "Algorithmic analysis",
                "Runtime analysis, divide and conquer, some data structure review, greedy algorithms, dynamic programming, network flow, and some P vs. NP content.",
                "This course gave a very solid knowledge base of common algorithms. It also helped develop intuition and problem solving.",
                "How to use algorithms in academia.",
                "Methods to prove correctness of different algorithms",
                "I learned how to think through the creation of algorithms. My mindset towards algorithm creation has completely shifted.",
                "Learned about different algorithms that are prevalent in the CS world, such as searches, recurrences, and dynamic programming.",
                "Developed better problem solving skills and a variety of techniques to approach computer science problems.",
                "Learned algorithms, including Divide and Conquer, Greedy, Dynamic Programming, Graph Algorithms, Flow Networks. Practice with each type of algorithm, and learned all of them to a solid degree of proficiency.",
                "Absolutely nothing. McKay was an absolute horrendous experience.",
                "I learned about various algorithms (divide and conquer, greedy, dynamic programming, maximal flow) and how to prove the correctness of proposed algorithms.",
                "This class gave a very in depth introduction to several algorithm techinques and how to apply them to solving problems. It gave a bit of a proof introduction and a little bit of other theory discussion."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Better.",
                "The class teaches useful things, but only in the Spring. Thankfully 365 is now being offered in the fall as well, but I want to state that the class that begins with a spiel about how algorithms are useful for interviews and is also required for the major probably shouldn't be offered only during the Spring semester.",
                "Lectures can be given more succinctly, but otherwise very understandable.",
                "Lectures make material easy to digest, I appreciate how pset problems try to create real life scenarios for the algorithms, and the bonus questions were interesting to solve.\r\n\r\nI wish more of the pset problems asked for brief justifications rather than complete proofs. The vast majority of my time for homework was spent on the write up instead of solving the actual problems.",
                "The course is pretty well-rounded overall, and there is adequate support for everything you're being assigned or assessed on.",
                "Good PSETS help you learn and apply content but aren't too much. Lectures are helpful but sometimes are just talking through drawn-out proofs, which can be interesting but if you're not engaged can equally be unhelpful and not relevant to PSETS/exams.",
                "Strengths: great ULAs who are all extremely helpful, discussion sections. Weaknesses: lectures were a bit dry, but that is most likely due to the content matter itself and not a reflection of the teaching staff",
                "Strength: course lectures were great and very informative.\r\nWeakness: the course organization was rough. Grading was on a nearly one month delay (with multiple problem sets returned after the final exam), and homework assignments often required some correction. ULA/TF support was sufficient.",
                "good problem sets and exams, good lectures but a little slow",
                "Dylan is a great instructor. \r\nFrequency and quality of office hours is very good. \r\nThe preparation and information about what the exams would look like leading up to them could be improved. Before Midterm 1, for example, a very hard review was released, which did not end up looking at all like the exam.",
                "The only weakness of this course is that I feel it could be significantly improved if there were practical coding assignments that allowed us to physically implement the algorithms taught in class. This could extremely help with job interviews and preparation. However, I do see the appeal to not having it as well.",
                "Strengths: The course was well-organized and I really enjoyed Prof. McKay's teaching style. The opportunity to view the classes remotely was helpful if you weren't able to make it to class, but did also result in low attendance to lecture. A lot of good support at Office Hours. The grading was quite nice and I felt that most people generally did well. The leniency regarding late days was also very helpful. Weaknesses: Low class attendance due to virtual recording option.",
                "It got kind of boring sometimes",
                "strengths:\r\nA lot of help from a great stuff of Ta's \r\n\r\nweaknesses:\r\nThe lectures were did not prepare the student enough for the pests or for the exams",
                "This is among the worst courses I have taken in three years at Yale. \r\n\r\nFirst of all, the class was far too big, which caused the instructional staff to be stretched far too thin, and therefore it was extremely disorganized. As a result, many of the graders were basically skimming and gave far too lenient grades and, more importantly, did not give the necessary feedback for students to learn. Of course, this was more an administrative failing than any one individual's fault: it seems that the administration's on-again off-again support for the course forced Dylan to spend way too much of his time as a personnel manager and not enough on actually teaching the course.\r\n\r\nThere was no incentive to attend lectures, and practically no-one did. Dylan's lecture style, particularly his cadence, is difficult to listen to. He did his best to make lectures interactive, but the class was so unengaged that it was not usually very successful. All of this meant that most students found it easier to learn the material from other sources: ULAs, the internet, the textbook, or ChatGPT.\r\n\r\nIt was easy to do very well in this course without attending or even watching the lectures, partially because Dylan repeatedly allowed students to bully him into being far too lenient with grading policies. CS students at Yale are needy and greedy, and rarely take no for an answer; Dylan found it difficult to make unpopular grading decisions early on, which led to a culture of students trying to take advantage of his benevolence over the course of the semester. To his credit, he was strong on the second exam, but it was too little, too late. Based on the amount of effort that I put into this course, and the amount of material that I learned, relative to other courses I have taken of similar level, I should have received a much lower final grade than I am going to.",
                "Strengths:\r\n- Dylan's lectures and slides were extremely clear and made the material relatively easy to digest\r\n- The availability of office hours and ULAs was great. That can be really hard because the class is huge, but I never felt that I wouldn't be able to get the help that I needed. \r\n\r\nWeaknesses:\r\n- There were too many problem sets and the grading for each problem set was too slow. It was difficult to integrate feedback from previous problem sets because they just generally came too quickly.",
                "Strengths: good lectures and PSETS, weaknesses: exams were a bit difficult",
                "The course was very well taught and students were prepared well for tests and problem sets without detracting from their challenge. Any weaknesses seemed to be from the fact that this was the first time this professor taught this course, but he is very invested in listening to feedback and improving.",
                "Strengths: good and relevant content to technical interviews which is nice, taught pretty well, many many ULAs to help in office hours\r\nWeaknesses: very proof intensive, wish it was even more applicable to technical interviews as I found the content to be very theoretical",
                "Dylan is a rude professor and I felt that he did not care about his students",
                "strengths: well organized, really good transparency, good support for students\r\nweaknesses: some harsh grading tas were sort of strict on regrade request",
                "Bad. Lectures were not worth going to. Extremely slow pace in both material and speech. I would get it if this was your first exposure to the math-based perspective this course takes on algorithms (the algorithms themselves are not hard), but in my opinion this would not have been a problem if 202/244 or the other prerequisites were more rigorous in this regard. I am sure I'm not the only one who felt the class was way too slow and felt that I wasn't learning anything, and I've never studied this material before.\r\n\r\nThat said, I wouldn't complain if I felt that the entire class was easy, but because the homework problems were fairly long, and most of the actual \"challenge\" was in intuiting the algorithms (although the majority of them were close to trivial), doing the weekly homework quickly became a chore. In retrospect, it seems the best strategy for maintaining your grade in this class was to go to office hours and nag at the ULAs until they fed you the answers, without understanding any of the material yourself. Essentially, the homework is more than doable, but it feels like a waste of time to do them yourself when people who clearly do not understand anything being taught can do the problems *faster* than you by sitting at OH 3 hours a day. The expectation is that you get a 100 on every homework, and it is ridiculously easy, but very frustrating, to do so.\r\n\r\nOverall terrible class that seems to motivate against high achievement and actual learning.",
                "The course is very well organized and I received help or guidance almost every day! At the end of the semester, I felt that I learned so much and had a great time engaging with the discussed topics. We had many office hours and discussion sections that may further help the students review once again, more in detail, the concepts discussed during the lectures, or work in teams on ideas for the problems on the assignments, or simply discuss interesting topics in algorithms design and technical interview questions. All the problem sets tested rigorously the understating of the material and developed my creativity in finding a solution to an algorithmic problem.",
                "Strengths: the teaching staff works hard to accomodate students and to provide helpful resources.\r\nWeaknesses: The lectures are a bit slow paced and not especially engaging.",
                "The lectures are very fun and engaging. The slides are well organized. There are only 3-4 homework questions every pset, and they offer great practices on the current topic. Even though each pset is weekly, it only trains you on the material of the week, which reflects good modularization and knowledge reinforcements. The course also offers a lot of resources and help. However, this course is structured like a math class, so homework can be challenging as developing algorithms require intuitions. However, that's the fun of algorithm. They phrase the problems in such a fun way that it feels accomplishing to solve one. It really trains your brain think more efficiently. You don't need to use LaTex to write a formal mathematically and symbolically proof. Typing your ideas out in a google docs is sufficient. I love that leniency.",
                "I enjoyed Professor McKay's lectures overall, and felt that they were well-paced and structured. The problem sets had interesting questions, but the weekly schedule felt like a grind towards the end of the semester. The two exams were both really long as well--3 hours each for a midterm and final felt like a lot! I did feel like they were fair overall though. Office hour staff was good overall, and they were critical to completing the assignments each week. Content-wise, I thought that we covered a good amount, although the class felt a little slow in the first few weeks. Considering that this was Professor McKay's first time teaching the course, I thought that the class was a success, especially in terms of organization.",
                "So much homework... McKay is a great prof but he does not give a hoot about student's lives outside of Algorithms -- either that, or he expects way too much from his students in assigning weekly homeworks that take anywhere from 15-40 hours per week.",
                "The lectures were good. the psets were challenging at times but there were lots of office hours to ask for help. The TAs are amazing.",
                "Strengths: This course covers all the fundamental topics in algorithms and provides a great foundation for further study in theoretical computer science. This course also had plenty of support for students, with lots of office hours and review sessions.\r\n\r\nWeaknesses: None, honestly. There's really nothing more you can expect from a class. Keep up the great work!",
                "Strengths: Prof. McKay is a super good professor who really cares for his students and is great at lecturing; Weaknesses: none come to mind",
                "I would spend more time typing up my problem sets that I would trying to solve them. If there was a way to make the homework of this class a bit less tedious, I think the students would really appreciate it. Perhaps making them bi-weekly assignments instead of weekly ones would be good (I heard they've done this in previous semesters).",
                "The course is very well designed. The only thing that I wish was explained better was how to write effective proofs. The actual explanations of the algorithms themselves were fantastic.",
                "The homework assignments are great at reinforcing content from lectures. Office hours are very helpful for assistance with the course material.",
                "- This class needs to focus more on algorithms that are tested on interviews: more breadth and less depth. Even though it is a required class for CS majors, I feel like the content was more similar to an elective.\r\n- Prof only engages with the top 10% of students that immediately understand what he's referring to. The lectures were like watching a black and white movie on 0.5x speed.",
                "Strengths include how applicable the material in the class is. It would be useful for job interview prep along with just building your own projects in the most optimal way possible.",
                "Content was clear and exams were straightforward",
                "Strengths: We covered a wide range of algorithms and strategies. There was also in general a ton of support in the class, with a lot of peer tutor office hours and ed board engagement. Lecture was enjoyable and Professor McKay was funny and supportive.\r\n\r\nWeaknesses: I wish we had spent more time on the material that we covered in the second half of the semester, especially on greedy algorithms, dynamic programming, and P vs. NP problems. I found this material significantly more challenging than what we talked about in the first half, and I think I would have benefitted from going a bit faster on the easier topics and having more practice on the harder ones. I also wish that peer tutors had not given the answers on pset problems in office hours. Sometimes I went in with the hope of asking a pretty specific question, only to find that the peer tutor was walking through the entire pset. It was nice to have such a wide variety of times to attend office hours, but I think having 3-4 peer tutors at any given office hour is preferable to having a few different sessions led by only 1 peer tutor.",
                "Strengths: well structured problem sets",
                "The homework was graded extremely easily; as a result, the class was actually curved down, which was frustrating.",
                "Strengths: Prof McKay was a good lecturer and the course is structured so that getting help is very accessible because the course was super well-staffed. We also got 6 sheets (12 pages front and back) of notes for exams, which was honestly great; Weaknesses: I think the super busy queue-based office hours can be kind of overwhelming, but they could cater to people who want to work in groups at ohs",
                "Strengths: Dylan, the ed discussion, lectures, I liked the way homework questions were worded \r\nWeaknesses: grading was a bit all over the place (sometimes it took a very long time to get grades back) and homework grades were VERY high which led to a high cutoff at the end of the course. I wish we would have spent a little longer on proving correctness for some algorithm types. We would briefly touch on it in class but sometimes I would have to look up how to prove correctness for certain types of algorithms. I think maybe just one in-depth proof per type of algorithm would have helped.",
                "Strength: covers important algorithms\r\nWeakness: a bit slow paced at times and grading was inconsistent",
                "Strengths: The professor was amazing!!!!! Definitely take this with Prof. McKay if you can! The homeworks were insightful and the exams were fair assessments of the class topics. There was a lot of help available through office hours and the ULAs were very open to questions. Weaknesses: The exam practice problems were significantly harder than the exams and problems we had seen on the homework so it was a little bit scary.",
                "Professor McKay agreed but we couldve focused a bit less on data structures and more on algos!\r\n\r\nIf he teaches again, Im sure he will adjust the curriculum. Teaching and resources available were phenomenal!",
                "This course was relatively well-organized and the course staff was very supportive. Some strengths include the clarity of lectures and lecture notes, frequency of office hours, and supportive course staff. One area for improvement is providing more organized extra practice and making the notes from all optional discussion sections available for students who could not attend.",
                "Great lectures and content and very helpful OHs",
                "Strengths: Professor McKay is a very good professor, interesting topics and problem sets Weaknesses: Lack of clarity in expectations for proofs in problem sets",
                "Well structured, interesting content",
                "The course is very well taught and easy to follow. The organization was also very good. The exams can be hard and can screw you over if you get stuck. This year's class also seems to be particularly strong since the assignments and exams are not easy but most people still got high grades, so people who are less familiar with proofs and have less prior experience with algorithms can struggle with grades since the curve is against them.",
                "The tests were pretty difficult thats all",
                "Could be improved by touching base on more interesting algorithms",
                "Strengths: grading is very fair and the HWs don't require crazy amounts of investment.\r\n\r\nWeaknesses: In some respects, I think the course might not have gone in-depth enough on some of these topics. I personally probably would not feel comfortable doing a CS interview after having taken this course, just because I think the level of mastery necessary to perform well on HW/tests is not that high. Also, there was some disorganization in the early parts of the semester, especially when it came to the first midterm (a question was created incorrectly, and the bonus was unsolvable).",
                "The format of the course was great and the late policy was generous. There was great organization in terms of office hours and extra help, which was really, really helpful for understanding of the topics. A weakness of the course is that the lectures can be very boring (and slow if not watching virtually and speeding them up) as the lecture formatting was pretty bland and mundane.",
                "Content wise, this course covers a lot of fundamental algorithms, and teaches the ideas behind them. \r\nWeaknesses: The course is intended to be rigorous, but on the psets, the graders often deduct points if your solution is not exactly the same as the intended solution. It feels like in general, grading is not based on correctness/rigor, but rather following a rubric based on the staff solution. This shifts the focus of the course away from coming up with creative and correct algorithms, but rather on writing the proof exactly how the graders want to see it.",
                "McKay is probably one of the least engaging professors within the CS department here, which is really saying something. It really shows in his lack of preparation and the frequent confusion and errors within the problem sets, not even mentioning an exam question that was quite literally impossible to do with his given parameters.",
                "Dylan is a great professor, and he goes over concepts at the right pace. His lectures are engaging, and the recordings/PPT slides helped review the material as well. \r\n\r\nPerhaps due to the sheer size of the class, the course logistics sometimes felt a little disorganized. For instance, we would get incompletely written problem sets. Some grading on the exams also felt a little arbitrary (bonus questions).",
                "Lectures were fantastic. Dylan is an amazing lecturer and does a wonderful job building up hard topics over the course of a lecture. There were also a ton of helpful resources and really good slides. Problem sets were sometimes a bit tedious, but overall reflected what we were expected to know."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "yeah",
                "Even if you aren't majoring in CS, I think this class teaches some interesting/useful things. If you're majoring in CS though, you have to take it.",
                "Definitely, especially if you have a slight compulsion in always doing everything efficiently :)",
                "Required if you're a CS major, so yes. If you're not, only take it if you have the right background (in terms of data structures) and interest.",
                "You have to take it as a CS major, so yes.",
                "I would recommend this course if you want to develop a strong understanding of the theoretical foundation of algorithms.",
                "Yes. Not only is it required for CS, it's a nice change of pace from coding-intensive alternatives and you do take away strong algorithms skills and familiarity with lots of different algorithms and kinds of algorithms.",
                "Probably only if you have to take this for the CS major, or just really love math.",
                "algos are cool so yes",
                "Required for CS Majors but accessible to anyone with some background in formal mathematics/ CS 202 / MATH 244",
                "yes if you have to take it",
                "Dylan is really good.",
                "I would definitely recommend this course to another student, especially if they are a cs major as it is one of the most fundamental topics as a programmer.",
                "Yes! Required for CS majors, but overall a very good course.",
                "Yes. Generally, most people are going to take this course to fulfill requirements, but I genuinely thought it was a good and useful class to learn about how to think about different problems. It likely doesn't have a lot of applicability to other fields (outside of stats, CS, econ, math, etc), but is an interesting class if you enjoy the topic.",
                "Not a crazy amount of work and the content is definitely going to be helpful for interviews but the exams were super difficult.",
                "Yes to every student who wants to work in STEM.",
                "If you are taking this course it's because you have to. If you are interested in theoretical CS proofs and the math of this subject on more than the most basic level you should take a real course like CS 366. The only reason I took this course is because they didn't offer 366 this year and I need it for my major.",
                "I would only recommend this course to students who need it as a major requirement. I think that the topics are covered throughout other courses in the CS and math curriculum, so there isn't a ton to gain outside of a major requirement.",
                "Yes, it was a good algorithms course.",
                "I would definitely recommend this course to anyone pursuing a career that involves programming or algorithm design. It is extremely valuable to be able to analyze algorithms for their efficiency and correctness. Even if you are not interested in theoretical computer science the though process of contracting proofs is a valuable exercise and will help you convey your ideas to others.",
                "Yes if you need it for your major or plan to have a career in CS (though you could also leetcode to study algorithms). No if you want a CS elective.",
                "yeah for a cs major, really important for understanding how algorithms work",
                "It's a major requirement, but no. If you have any standards for course quality, take intensive if it is offered again.",
                "Yes, I would definitely recommend this course to another student, because it represents a backbone in the CS major, developing interesting and engaging problems and discussions around fundamental, vital concepts in the field! The course developed my critical thinking and I learned skills useful in life and in many adjacent STEM fields.",
                "I don't really think I'd recommend this course to another student. I honestly feel like I didn't learn all that much (at least not that much in depth) and I wasted a lot of time reviewing material I already knew. The fact that lecture attendance dipped to 5-10% by the end of the course is pretty symbolic of the quality of information delivered.",
                "This is a required course for CS major. But if you are a math or econ major, then this course is also of that type. There is no downside to this course. Just make sure you have some friends taking this class so when you are stuck on intuitions you can discuss with them. I highly recommend this course because algorithm is such a big part of our life, and these problem-solving strategies translate into efficient coding logic (run time is important in most applications) and solutions of real-life problems. This is basically LeetCode stuff. So yeah, I definitely recommend this class as it gives some introduction to modern day CS.",
                "Yes, Dylan is an excellent instructor! A few hiccups since it was his first time, but overall a great course.",
                "This class is required for the CS degree, so there isn't much of a choice here, but I thought that Professor McKay's version was overall pretty good. Attending office hours was necessary for success in my opinion, and with the weekly assignments, the class did feel like a lot of work, but was overall fairly rewarding in the end. Exams were long but fair. Perhaps not as challenging as some of the other CS classes, but still demanded your attention.",
                "I mean, you have to if you're a CS major so I guess so.",
                "No",
                "Yes, though you are probably taking it because it is required for your major",
                "If you are doing cs, it's an absolute must!",
                "Yup, the content is interesting, and you don't have much of a choice if you're a CS major",
                "Yes if you are CPSC and ECON, try and take it with Dylan he is the best!!",
                "Absolutely would recommend this class! Even if don't think you have any interest in theoretical CS and even if it's not a required class, you should take this class if you're evenly remotely interested in improving your problem-solving skills. This has been my favorite class at Yale so far. I didn't think I was interested in theoretical CS before taking this class, but after taking it, I've been inspired to take higher-level theoretical classes.",
                "Yes! Algos are fundamental to any computer scientist, and, beyond that, this class was also quite fun since each question is a little puzzle to solve",
                "Not unless required by your major. The workload is too high to take this class just for enjoyment, and you could easily learn this stuff online if needed. You'll also have have to compete with a lot of ambitions CS majors for a not super generous curve, and the number of problem sets is kind of crazy. They are assigned weekly and take a surprising amount of time.",
                "I absolutely would recommend this course to anyone who wants to become a software engineer. It will make you a better programmer and allow you to think effectively about modern programming techniques.",
                "Yes",
                "Absolutely not! If you're a CS major, you don't have a choice. If you want to take this class for fun, don't even think about it.",
                "I would for a cs major, I had a hard time understanding the best way to interview prep with leet code and wrapping my head around certain concepts. This course covers many of the concepts that come up in interview prep such as dynamic programming.",
                "Yes, serves as a good introduction to basic algorithms",
                "I mean every computer science major has to take this course but it is still really interesting! This course taught me new ways to think of problems, so I'd definitely recommend it.",
                "Yes! I enjoyed it a lot. For me, a lot of what we talked about in algorithms is what I like about coding: finding cool, creative, and clever ways to solve problems (and not having to deal with annoying debugging/actual implementation). The proofs feel, in a lot of cases, kind of dumb, but I guess it's good to know how to do. I found the first half of the course quite easy (under 5hrs/week on psets), but the second half was significantly more challenging, so maybe keep that in mind in terms of planning.",
                "Yes, but only if you are a prospective computer science major.",
                "A lot of busywork.",
                "I would recommend taking it with Dylan! He is really an amazing professor and cares about teaching a lot! He was constantly trying to adapt the course to better help us when things did not go as planned. The homework wasn't too bad in this class and was worded in a fun way which was nice. I enjoyed the class.",
                "I would recommend for anyone interested, a solid first class on algorithms",
                "yes",
                "Yes! Especially if it is with Prof. McKay! He is a great lecturer and is very helpful in class and outside of class to student questions.",
                "The reason that this course was super enjoyable was because Professor McKay is a gem. He is an extremely accommodating professor, who cares about his students wellbeing and also is a funny lecturer! I would say that Professor McKay is an accommodating professor (he tried to offer as many office hours and discussion sections for his students & offered a generous, but dangerous, amount of late days - four for the semester).\r\n\r\nThe class was a little bit lop-sided content wise as we spent a lot of time discussing data structures (as Professor McKay wanted to make sure we had this strong foundation  also partially, supplementing our lacking and heterogeneous data structure experience), but Professor McKay agreed that he would teach the structure a bit differently if he taught it another time. \r\n\r\nEd Discussion is a widely used resource for this class (and also something that was super helpful) in addition to the office hours. This is a great course overall and very practical!",
                "Yes. It was very helpful for a CS student and learning a variety of algorithms",
                "If you have no experience with graph theory or data structures at all, sure. Otherwise you should probably take CPSC 366. This class is better labeled as introduction to algorithms as it was a bit too easy to the point that I questioned if I was truly learning anything. Almost all of the algorithms and techniques except for maybe flow networks have been covered before if youve taken any discrete math or data structures class. It also seemed like ULAs just handed out answers at office hours, so almost everyone gets a perfect score on the problem sets. Additionally, the class assumes a low level of mathematical maturity which ultimately ends up hurting students who do have experience with many of the topics covered. Although you may see a concept as something that is trivial to prove because its become second nature to you, you will definitely be penalized for not proving it. I guess the content is good for an introductory course in algorithms if you have absolutely no experience with them, but I wish they had offered CPSC 366 this semester for people who were expecting a bit more maturity when it came to what youre expected to prove. Professor McKay is still a great professor, though, and while I disagree with the general criterion for academic performance in the course, I think he does a great job at developing students intuition for problem solving, which I think is more important than any algorithm youll ever learn. Also, the effort put into making the problem sets interesting should not go unnoticed. The problem sets typically had a storyline, and I enjoyed that there was an attempt to make you feel like you could truly apply algorithms to real world problems. In summary, if you have some experience with mathematical proofs and some basic algorithms, I would recommend taking intensive algorithms. Otherwise, this course is probably a good fit.",
                "Take it if it's required",
                "Yes if you did CPSC 202 or MATH 244, it is a very good class to develop algorithmic thinking and problem-solving skills, but you will struggle if you don't have the prerequisites.",
                "Only if you are doing computer science",
                "Yes, if you are a computer science major or interested in algorithms",
                "I would definitely recommend this course to another student! I think cs majors should be encouraged to take this course early in the major. It shifted the way that I think through creating my code. The course is also just run very well. The PSET questions are interesting and well designed. Also, the lectures were really really great. Knowledge was built piece by piece, so that it never felt like I had to work hard to understand. Instead, the understanding came naturally due to the way that the lectures were given.",
                "Yes, it is necessary for the CS major.",
                "Yes",
                "Yes, if you need it for a major",
                "Yes, but just keep in mind that the grading is not the most fair. You will still learn a lot of important algorithms. There is some repetition from graph search algorithms if you took Discrete Math (MATH 244) previously, but still a useful course to take.",
                "I mean, it's a requirement for the major. Just don't take it with McKay.",
                "I would recommend this course to any current or aspiring CS major. It is a prerequisite for the major, but Dylan is also a great, fun professor to take the class with.",
                "Yes. This is the first class where I felt like, \"oh, I actually learned something and this is very useful for my future!\"",
                "Algorithms with Dylan is great. He really cares about the course and is an amazing teacher. He will only get better and really wants to make algos a very strong class that vies everyone a strong foundation."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 365 01/ECON 365 01 - Algorithms"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.998434841632843,
                0.9982080459594727,
                0.9988564252853394,
                0.9987475872039795,
                0.9986604452133179,
                0.99689781665802,
                0.9984276294708252,
                0.9938638210296631,
                0.9986962676048279,
                0.9979375600814819,
                0.9989296793937683,
                0.9917047023773193,
                0.9988730549812317,
                0.9987183809280396,
                0.9988201260566711,
                0.9986482262611389,
                0.9988313317298889,
                0.8207393884658813,
                0.9984747767448425,
                0.9971253275871277,
                0.9981195330619812,
                0.9970648884773254,
                0.9988988637924194,
                0.9986206293106079,
                0.9985748529434204,
                0.9910196661949158,
                0.9965808987617493,
                0.9987494945526123,
                0.9986889958381653,
                0.9983949065208435,
                0.9988334774971008,
                0.9922411441802979,
                0.9988535642623901,
                0.9981483221054077,
                0.9995013475418091,
                0.9986730813980103,
                0.9932979941368103,
                0.9986452460289001,
                0.9955241680145264,
                0.9956992864608765,
                0.9972851276397705,
                0.9923567771911621,
                0.9223732948303223,
                0.998788058757782,
                0.9987136125564575,
                0.9989184141159058,
                0.9988295435905457,
                0.9911553859710693,
                0.9974313378334045,
                0.9968315958976746,
                0.9989150762557983,
                0.9915955662727356,
                0.9967821836471558,
                0.9986553192138672,
                0.9987793564796448,
                0.9988652467727661,
                0.9987996816635132,
                0.9995006322860718,
                0.9981990456581116,
                0.9989010095596313
            ],
            "sentiment_counts": {
                "NEGATIVE": 10,
                "POSITIVE": 50
            },
            "sentiment_distribution": {
                "NEGATIVE": 0.16666666666666666,
                "POSITIVE": 0.8333333333333334
            },
            "sentiment_overall": [
                "POSITIVE",
                0.8333333333333334
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9982995390892029,
                0.9982187151908875,
                0.9988248944282532,
                0.9962831139564514,
                0.998927891254425,
                0.9964489936828613,
                0.9988386034965515,
                0.9973279237747192,
                0.998760461807251,
                0.9987792372703552,
                0.9981511235237122,
                0.9988546371459961,
                0.9983181953430176,
                0.9685793519020081,
                0.9995104074478149,
                0.9988566637039185,
                0.9988125562667847,
                0.9989221096038818,
                0.9987061023712158,
                0.9995075464248657,
                0.9989117383956909,
                0.9995133876800537,
                0.9989286065101624,
                0.9986133575439453,
                0.9989064931869507,
                0.9988999366760254,
                0.9982495903968811,
                0.9988275170326233,
                0.9988922476768494,
                0.9988920092582703,
                0.9991495609283447,
                0.9988841414451599,
                0.9988695979118347,
                0.9994854927062988,
                0.9988049268722534,
                0.9988924860954285,
                0.9987305998802185,
                0.9987674951553345,
                0.9966051578521729,
                0.9988675117492676,
                0.9983959794044495,
                0.9977309107780457,
                0.9989168643951416,
                0.9988200068473816,
                0.998883068561554,
                0.9988473653793335,
                0.9987154006958008,
                0.9988765120506287,
                0.9988675117492676,
                0.911847710609436,
                0.9924103021621704,
                0.9985816478729248,
                0.998762845993042,
                0.9942409992218018,
                0.9995098114013672,
                0.9989173412322998,
                0.9989326596260071
            ],
            "sentiment_counts": {
                "POSITIVE": 46,
                "NEGATIVE": 11
            },
            "sentiment_distribution": {
                "POSITIVE": 0.8070175438596491,
                "NEGATIVE": 0.19298245614035087
            },
            "sentiment_overall": [
                "POSITIVE",
                0.8070175438596491
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9890128374099731,
                0.9971332550048828,
                0.9987025260925293,
                0.9957932233810425,
                0.9896832704544067,
                0.9989159107208252,
                0.9988560676574707,
                0.9934477210044861,
                0.9965367317199707,
                0.998119056224823,
                0.9962498545646667,
                0.9986768364906311,
                0.9988405108451843,
                0.9988502264022827,
                0.9988411068916321,
                0.9887204766273499,
                0.9986898303031921,
                0.9986869692802429,
                0.9989424347877502,
                0.9987019300460815,
                0.998873770236969,
                0.9928731918334961,
                0.9986054301261902,
                0.987211287021637,
                0.9989339709281921,
                0.9995096921920776,
                0.9989206790924072,
                0.9989114999771118,
                0.9989277720451355,
                0.9419605731964111,
                0.9980016350746155,
                0.9830338358879089,
                0.9987527132034302,
                0.9972096085548401,
                0.9984248876571655,
                0.9989228844642639,
                0.9989027976989746,
                0.9994599223136902,
                0.9989305138587952,
                0.997117280960083,
                0.9958760142326355,
                0.9978814721107483,
                0.9985241293907166,
                0.9988901019096375,
                0.9988394379615784,
                0.9867393970489502,
                0.999427318572998,
                0.9989306330680847,
                0.998775064945221,
                0.9974592328071594,
                0.998875081539154,
                0.9989062547683716,
                0.9988425374031067,
                0.9950454235076904,
                0.9945884943008423,
                0.997343122959137,
                0.6985251307487488,
                0.9960170388221741,
                0.9989274144172668,
                0.998011589050293,
                0.997117280960083,
                0.9962496161460876,
                0.9987078905105591,
                0.9871260523796082,
                0.9989203214645386,
                0.9988238215446472,
                0.9988717436790466
            ],
            "sentiment_counts": {
                "POSITIVE": 52,
                "NEGATIVE": 15
            },
            "sentiment_distribution": {
                "POSITIVE": 0.7761194029850746,
                "NEGATIVE": 0.22388059701492538
            },
            "sentiment_overall": [
                "POSITIVE",
                0.7761194029850746
            ]
        },
        "final_label": "POSITIVE",
        "final_count": 148,
        "final_proportion": 0.8043478260869565,
        "final_counts": {
            "NEGATIVE": 36,
            "POSITIVE": 148
        },
        "final_distribution": {
            "NEGATIVE": 0.1956521739130435,
            "POSITIVE": 0.8043478260869565
        }
    }
}