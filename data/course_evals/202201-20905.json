{
    "crn_code": "20905",
    "season": "202201",
    "enrollment": {
        "enrolled": 216,
        "responses": 197,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                3,
                18,
                49,
                63,
                23
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                1,
                5,
                46,
                63,
                40
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                1,
                6,
                27,
                65,
                55
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                6,
                28,
                47,
                44,
                30
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                2,
                14,
                48,
                79,
                12
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                5,
                24,
                66,
                52,
                9
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "Learned how to program in C.",
                "Good",
                "A lot of C coding.",
                "Programming in C, data structures (arrays, lists, hashmaps, dictionaries, etc.), pointers, memory allocation, etc.",
                "223 is a great course in the CS intro sequence that really gets you working with code. I came in having taking 201 (Racket), but 223 really taught me basic C + data structures. You'll work with learning the language and memory management in the beginning of the course, and transition to a couple different data structures and when they work best/how to use them etc.",
                "Knowledge and skills in C, understanding of various different data structures, how they work, how to implement them, the pros and cons of each, etc.",
                "I gained a better understanding of and comfort using C, including memory management and from-scratch implementation of common data structures such as priority queues, adjacency matrices, etc. Crucially, I learned these skills from the wonderful ULAs and outside resources. Professor Aspnes' instruction was very unhelpful, and this was a common opinion among students.",
                "I got a slightly better intuition for data structures and memory allocation",
                "We learned memory management and data structures in the C programming language.",
                "Data structures, C",
                "Programming in C. Its syntax, features, memory management, and pointers. The implementation of core data structures.",
                "I learned data structures and how to code in C!",
                "Data structure, C",
                "Everything C",
                "as someone who has never taken a CS class before, this was a very informative class",
                "Many of the fundamental data structures of CS (arrays, linked lists, hash maps, stacks, queues, heaps, trees, etc) and when to use them",
                "I learned C",
                "Knowledge of data structures and how to apply the to write efficient programs",
                "I learned a lot about different CS structures.",
                "I learned about data structures and how to code in C.",
                "You will learn about: the C language, heaps, trees, stacks, queues",
                "C and Data Structures: Stack, Queues, HashMaps, Linked Lists, etc",
                "I learned about various different data structures and programming techniques in C. It was a great introduction to C as a programming language.",
                "How to program in C",
                "A broad and deep overview of advanced computer science concepts that I've always wondered about - also very useful for career stuff",
                "Learnt how to program in C. Variety of data structures in C including arrays, hash tables, trees, and graphs.",
                "A knowledge of data structures etc",
                "This course taught me the basics of C and gave a good overview of the major data structures commonly used in code.",
                "Basic data structures in the C programming language, general problem solving skills",
                "C programming language, low-level memory allocation, how to implement and use important data structures like queues, stacks, hash tables, linked lists, etc.",
                "Learned about various data structures: linked lists, strings, queues, stacks, trees, heaps, treaps and graphs. I learned how to think about what data structure to use for various problems. Learned how to program in C. Learned the basics of big O notation.",
                "This course is great for building your knowledge of data structures. Each week is centered around a different structure, and it's cool to see how they all build off of each other. Even though C is obviously more annoying than Python, good to have the foundation.",
                "Data structures and programming techniques",
                "I learned different sorting algorithms as well as techniques in c (including memory / space usage, pointers, etc.).",
                "I learned how to program in C, how to allocate memory eg malloc, work with C libraries, and how to apply data structures to various PSET problems to find efficient solutions in terms of optimizing time complexity.",
                "Programming in C, data structures",
                "I learned a ton! C is a foundational language in CS and I think learning it the proper way has proven to be quite fruitful. I learned most of the commands that C has to offer, so I feel I have a pretty solid understanding of how to both use, write, and read C as a programming language. I also learned about each of the fundamental data structures, as well as how to create them in C. Some data structures and topics we learned about were: arrays, linked lists, structs, hash tables, stacks, queues, heaps, trees, and graphs. These are all fundamental data structures that are overviewed coherently and concisely. I learned--through watching the Prof. code--how to code these data structures in C, as well as how to build my own data structures depending on the nature of the problem. Another notable skill I developed in this course was using Unix and the Zoo. We worked a lot on the command line and learned how to compile C code using the terminal. We also learned about debugging tools like gdb. In summary, there is a lot to be learned from this course, and I believe the hesitant student that goes in will come out feeling much more confident in C and as a programmer in general.",
                "This class is great with explaining data structures and main coding techniques in C",
                "I learned valuable programming techniques to apply to C and beyond.",
                "Data Structures and a few algorithms.",
                "C programming; some basic data structures; debugging",
                "So much about C, and memory, and data structures",
                "Learned how to use C and about data structures",
                "Data structures and C skills",
                "Programming in C as well as very common data types used with all programming languages. Not to mention, how to make custom data types and structures.",
                "Coding in C, data structures such as arrays, linked lists, trees, BSTs, heaps, and treaps",
                "I became a better programmer over the course of this semester.",
                "how to program in c, data structures",
                "Learned a lot about a variety of data structures and when it makes sense to use them. Also how to implement them.",
                "I learned about the fundamentals of data structures in computer science in C.",
                "I learned new, useful data structures",
                "In this course, I developed a solid knowledge of various data structures in C, as well as how to program and debug efficiently.",
                "C programming, good programming practice, limited data structures skills",
                "data structures and how to implement them in C",
                "Data structures, problem solving, and C. So much C.",
                "learned how to code in c",
                "Data structures in c and general programming knowledge.",
                "How to program in C, basic understanding of data structures",
                "Learned a lot about C. Learned more about the common data structures essential to programming. Gained insight on how a programer thinks.",
                "I learned how to program in C and how to use many different types of data structures and algorithms.",
                "CS fundamentals, data structures and programming techniques",
                "I learned how to code in C, and how to use data structures like treaps, hash tables, etc. I also learned how to cry over psets.",
                "Programing in C, data structures and memory management",
                "You get a really good sense of how to work through C code. Perhaps the emphasis on debugging could have been a little stronger, but this is definitely the most important skill I learned in 223.",
                "I learned how code program in c, as well as organize different data structres.",
                "I really learned a lot from this course! It's really great for understanding cs theory, even though I'm still not sure about how a lot of it is applied.",
                "Data structures and various skills for programming in C",
                "I learned more about data structures and on how to program in C.",
                "C programming language",
                "Learned a lot of new data structures that help optimizing time and memory efficiency.",
                "I developed an understanding of the common data structures (like dynamic arrays, heaps, stacks, trees, etc.) that are commonly used in programming. I also learned about different techniques (related to searching, sorting, managing pointers, etc.) that are similarly relevant in a lot of areas in programming.",
                "Programming in C, some data structures.",
                "- I gained a thorough understanding of several data structures on both a conceptual and C programming level. I feel confident that I could implement similar structures in other languages from the conceptual understanding I have\r\n-  I can better visualize the underlying architecture of computer systems because we learned about memory allocation and management\r\n- I am very comfortable with C syntax and I can write more complex and comprehensive programs. I think that with this in my back pocket, I will find it fairly easy to learn other programming languages",
                "A lot of C programming and basic data structures.",
                "C Programming. Introduction to data structures. Pointers. Dynamic memory management.",
                "I learned how to program in C. I also learned how to use a bunch of different types of abstract data types. Good class!",
                "Data structure and algorithms to traverse and utilize these were big in this class. I also improved problem solving skills and modifying data structures for specific needs.",
                "Learnt about a bunch of data structures and built confidence in my coding skills.",
                "Learned basic data structures, dynamic memory allocation, how to program in C, heaps and queues etc",
                "Basic data structures, as well as some algorithms material toward the latter end of the course",
                "Data Structures.",
                "Coding in C: type system, input/output, lots of pointers, debugging (gdb and valgrind)\r\nData structures (and how to apply them): linked lists, hash tables, trees, heaps, treaps, binary search trees, graphs\r\n\r\nFor most of the data structures, we learned about them in class, but there was enough example code that we didn't have to code them from scratch on assignments. This made the assignments much easier, but I don't think I learned the material as well because of it.",
                "I learned how to use the C programming language to an intermediate extent.",
                "Basic programming knowledge in c and an understanding of data structure",
                "how to write and implement data structures",
                "Data structures",
                "I gained a better understanding of the C program and have been able to develop my skills more as a coder.",
                "I learned a lot about programming in C and ways to use/code different data structures, especially using pointers. This class taught a lot more practical techniques for data management than CSPS201, i.e. stacks, heaps, memory allocation, binary trees.",
                "I learned how to program in C and about how to implement data structures in C.",
                "The fundamental techniques of storing and managing data, and how to both implement those structures and use them to solve other problems.",
                "During this course, I developed foundational programming skills. This course worked in the C language, but the skills we learned are broadly extensible to many modern programming languages. I learned that the efficiency of an algorithm is highly dependent on the way that data is organized, and different uses for the data can result in differing optimal organization strategies. I learned how to implement different data structures with only the low-level tools in the C languages, including arrays, linked lists, stacks, queues, heaps, dictionaries, hash tables, binary trees, treaps, and graphs. I learned how to structure a program in C, including memory allocation and garbage collections. I learned about the mechanics that underlie object oriented languages.",
                "A thorough introduction to C programming, learning all the tools necessary to write medium-sized functional solutions to data organization and processing problems. Thorough conceptual treatment of the most important data structures, their costs and benefits.",
                "Learned how to code in C, and how to use many different types of data structures to their best advantage.",
                "I learned about different data structures and how to be a better programmer.",
                "If you are an incoming freshman wondering if you should skip CPSC 201 and have marginal experience above AP computer science, skip it and take this class. It's not that difficult, ESPECIALLY if you have Aspenes. I learned about various data structures and programming optimizations, however, it felt like the whole first half of the semester was spent on learning c, while only the second half was on data structures. Lectures were monotonous and unengaging, and most of my learning came from doing the problem sets."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Lectures are good, problems sets are interesting.",
                "Strength: Explained concepts very well and helped visualize data structures.\r\nWeakness: Professor could go slower, sometimes assumed knowledge.",
                "Only psets was terrific.",
                "Strengths: This was unique to this semester, but we did not have exams. I was able to really focus my time and efforts on completing the psets and slowly absorbing and learning the concepts required of the course instead of stressing over how much information I could cram in my brain before an exam before inevitably forgetting it all later. Also the ULAs were amazing!",
                "Strengths: You'll have plenty of time to dive in to the code and understand what you're writing. Memory management (malloc/calloc/free) will become second nature and helps to build good programming habits.\r\nWeaknesses: Assignments could be a little vague at times, but instructor was readily available and issued updates to assignments during the week. No feedback on assignments outside of the auto-grader, requiring you to work with ULAs when available (and not overwhelmed) to get feedback on assignments.",
                "The professor is great but sometimes writes code at a level that is way above students' and therefore becomes hard to understand. Other than that, he is reasonable, helpful, entertaining, smart, funny, and friendly. The course also has no exams (which rocks) and has one PSet per week, and they are normally pretty fun and take roughly the same amount of time each week. The lowest 2 grades are dropped, too, which is wonderful. The Discord channel used for getting help is also really nice.",
                "Strengths: excellent ULAs (can't say this enough, they're crucial to the course), pset-based structure, thoroughness of course notes\r\n\r\nWeaknesses: Professor Aspnes' lectures generally consist of him typing in Vim at 120wpm, leaving students in the dust. In addition, the course doesn't really touch data structures until about midway through. The first half of the course is entirely \"programming fun in C\" which isn't super helpful outside of Yale's CS curriculum, whereas the data structures concepts are broadly helpful.",
                "It's not that difficult to do the programming assignments; in fact, so not difficult that it doesn't actually require knowing the material taught in class.",
                "More ULAs that are able/willing/available to walk through code in detail, especially as the course becomes more rigorous. Too often, a ULA would discourage my work and try to motivate exactly how they solved it instead of walking through the logic with me. But to be completely fair, I think that this is due to their own workload. Too often, they seemed very stressed as well.",
                "Love the set up with all psets and no exams, honestly think I learned the material better because of it.",
                "Professor and teaching staff are great, lectures are good and were well tuned to problem sets. Course website was at times confusing but very helpful and a fantastic resource. Clearer expectations around grade cutoffs and policies would have been nice.",
                "Strengths are definitely that Aspnes codes very fast in class, he is an incredibly smart lecturer and there is always so much to learn from him. Other strengths are that the class has two drops and is only concentrated on the problem sets, learn by doing!",
                "Strengths: Aspnes was very responsive and an overall great professor.\r\nWeaknesses: ULAs understaffed close to assignment due dates",
                "strength: the course format provides an opportunity to learn cs with no pressure or stress of the exams. I find myself learning more in those kinds of courses than in examed classes.",
                "The ULA's were one of the strongest parts of the class. They consistently helped with homework assignments by offering guidance and walkthroughs when necessary. The PSETs were also very interesting.",
                "I thought it was great to only have psets and I thought I learned a lot in lectures",
                "Strengths: text was well organized and course organization was clear\r\nWeakness: queue for office hours was always too long",
                "The strengths of this course come from the psets, which allowed me to learn all the different data structures. The lecture notes, examples, and ULAs were also super helpful.",
                "I think the PSETS taught a lot of cool concepts although I wish going to class was more supervised.",
                "Professor Aspnes is an amazing lecturer. He's super engaging and I actually really looked forward to class which I don't think is the norm for 223 without a good professor. I love how the course was problem set based so it encouraged me to focus on concepts without the pressure of memorization for a timed exam. It might be a disadvantage to not study things as intensely but usually you forget things a few months after the class ends anyways and for a CS class I think it's more important to know how to utilize online resources to brush up on knowledge.",
                "The notes were great and comprehensive. Loved the no exam style, allowed you to focus more on learning the materials rather than memorizing stuff. The p-sets were fun at times challenging. The p-sets could have been a little harder to prepare for 323 though.",
                "The psets were all fairly straightforward and informative. In Spring 22, we only had psets and no tests, so that allowed the class to be relatively low stress and enjoyable.",
                "Course was perfect in my opinion, learned everything I needed from the PSETs and the two drops added a lot of flexibility. TAs were (usually) helpful and the PSETs were not too lengthy/unnecessarily complicated.",
                "I actually really enjoyed the format of this course and felt I learned a lot about programming in C through weekly psets",
                "The PSETS are great, and the lectures are also very entertaining. The attention to detail in the course material and the precision of the course notes were very helpful in aiding my understanding of the topics. I honestly don't know if this course could be made any better - it serves its purpose very well.",
                "Developed good understanding of C programming, lectures were very clear, TAs were extremely helpful on PSETs. Course was very easy since there were no exams.",
                "Aspnes' allowance to let us use code on the notes makes the assignments often too easy, i didn't feel as if I really understood how to implement some of the structures even after doing the problem sets",
                "Strengths: interesting problem sets, very manageable workload, great lecture notes\r\nWeaknesses: problem sets weren't very hard and probably won't prepare you for 323 as well as the Fall section",
                "Strengths: Love Aspnes!!! He is such a great teacher -- you don't realize how much you're learning until you're sitting in lecture one day mid-semester and look at the board as he's live coding and realize that a few months prior you would have had no idea what was going on. Also, his online notes are terrific, as well as his easy-to-follow recorded lectures, and of course, THE WONDERFUL ULAS!",
                "Pretty tough class but not impossible. The psets were doable with help from office hours",
                "James Aspnes = STRENGTH; awesome guy, he makes the course super approachable, especially if you're like me and haven't coded in a while.",
                "Strengths: good TAs, instructor; Weaknesses: poor queue management",
                "A big strength of this course is the format. Only having problem sets and not having exams made the work more relevant and manageable. Also having lectures available online made the course much more accessible. I also enjoyed Professor Aspnes' teaching style and use of diagrams / pictures which really deepened my understanding of the topics.",
                "The data structures psets in the spring semester (when I took it with Aspnes) were noticeably easier compared to the fall version based on what I heard from students taking it the previous semester. I felt the class was a bit on the easier side, and more challenging questions would have given us better preparation for CSPC 323; however, the workload was really manageable and starting them early (on weekends) certainly helped. The lectures sprinkle in some important concepts about the PSETs but most of the learning/work is individual oriented, so I recommend finding others to work on the PSETs with. I do wish we had learned about more kinds of data structures since there was content covered in the fall class version that wasnt repeated in the spring version, which made it feel like we got less out of the class.",
                "Strengths: Prof. Aspnes is extremely knowledgeable and teaches the course extremely well. His notes are complete and extensive and serve as useful reference for studying and for problem sets. His notes contain descriptions and examples for each of the topics, and he even includes C code that shows exactly how to build each data structure in C. This meant that when we were assigned a problem set, we could refer to his notes to see how to construct the relevant data structure from that week. The problem sets were also a strength of the course. We had 12 problem sets total, with the 2 lowest grades being dropped. This semester, there were no other assignments or tests, so each problem set composed 10% of the final grade. This meant that all effort could be focused into solving problem sets and attending office hours. Each problem set was based on the previous week's content--so if we learned about hash tables last week, we'd code a hash table (disguised within a unique description) this week. I think this eased the stress of the problem sets, as I always knew what topic the problem set would be focused on. In other words, even though the problem set might have been difficult to understand how to implement, at the very least we had an idea of the data structure to be used to solve it. We were given one week per problem set, and this felt like enough time to solve it. For the earlier problem sets (1-5), I'd say they took between 3-10 hours each. For the latter half of the course, the problem sets probably took between 10-20 hours. I'd usually work on the problem sets for two to three days. As long as you attend office hours, you will be able to solve each problem set. This is another strength of the course: office hours. OHs were available in-person and online and were widely offered. The wait time was sometimes high for OHs but each TA was *extremely* knowledgeable and helpful. I'd use OHs to clarify what the problem set wanted me to do, to brainstorm possible solutions, and to debug code. Each TA would spend whatever amount of time was necessary for me to understand the problem and develop a solution. If I ever felt overly confused, I'd review the lecture and the notes and bring my questions to OHs, which would clarify the right path forward. If this class seems daunting, let this be what puts you at ease: by going to class, really trying to understand what code produces which data structures, and attending OHs to clarify questions and brainstorm solutions, you will do wonderfully in this course. You will also learn a ton!\r\n\r\nWeaknesses: This course had few weaknesses. Prof. Aspnes is a great professor, though it might take a second to figure out how to engage with his content. He has a website filled with all the notes for the semester, which can look daunting at first. However, he walks through each topic by drawing pictures and coding examples, which is helpful. Occasionally, he will use terms or commands we haven't yet learned, but in most cases he clarifies what they are and how to use them. Towards the beginning of the course, I was especially confused by .h files, compiling C programs via the terminal, and debugging using gdb. I wish the Prof. focused more on how to use these in class because I had to learn these more on my own or through OHs. The lecture format of the course was ok but sometimes difficult to internalize fully. I found myself rewatching lecture recordings to fully make sense of the material. This may be because Prof. Aspnes is insanely smart and codes super quickly (although he does not sacrifice correctness or clarity). If anything, be prepared to experiment with how to engage with this course: try reading the notes or rewatching lectures, or use OHs to clarify concepts. There are few weaknesses to the course--I think the best advice is to use what works for you and ask for help when something isn't working the way you would like.",
                "Professor Aspnes is an amazing lecturer! The material was always explained a very clear manner and all the gaps can be filled in with very comprehensive notes. I would say the biggest weakness was the low number of TAs and very small number of office hours relative to the number of students in the class.",
                "The class was fast paced and covered a lot of material, which was both a strength and a weakness. The lectures sometimes felt unrelated to problem sets, and the lack of exams meant that not all information mattered.",
                "Strengths: very well organized course (website etc.); manageable workload; Professor Aspnes provided good explanations during lecture\r\nWeaknesses: I would have liked to see more data structures, and started with them earlier in the course; lectures could sometimes feel pretty long",
                "There was not much that could be improved",
                "Strength: no exams! Weaknesses: office hours can get really crowded",
                "lectures always recorded and easily accessible and clear, fast response time on discord",
                "I thought the course was very strong at teaching the fundamentals of C. I think that the course maybe could have been more tight with edge-case testing.",
                "Strengths: No exams. I really liked this because CS exams are the bane of my existence and just doing assignments for this class was a lot less stressful.\r\nWeaknesses: The specs could have been written better. One ULA started recording walkthroughs of the assignment because the specs were so confusing and not very helpful.",
                "I appreciated that during the uncertain COVID semester, the class consisted entirely of 12 problem sets.",
                "excellent course",
                "Having office hours is really helpful, but sometimes they were cancelled or moved at the last minute which was a bit stressful. Being able to watch the lecture live remotely was super helpful, and having the recordings to go back to is really nice.",
                "I think Professor Aspnes is a great professor, but I felt the lectures were a bit disorganized and all over the place sometimes.",
                "The online lecture notes are great, and the TF office hours are really helpful. No weaknesses.",
                "Strengths: Aspnes is a great lecturer, and makes boring CS concepts interesting. The course is very organized, and each lecture is easy to follow.\r\n\r\nWeaknesses: None",
                "Strong lecture notes and video recordings were especially helpful. The ULAs despite being understaffed were incredibly helpful.",
                "Less time spent on C and moving faster to data structures",
                "Strengths are Prof Aspnes and how clear his notes are. Sometimes I felt like the course could've been more rigorous",
                "strengths: the online notes, TAs and office hours",
                "it helps you learn data structures which is an important cs concept",
                "Great course I like how there wasn't tests.",
                "The course presented material well, it was just not structured in a way that encouraged or required students to retain the information.",
                "Strengths: very fun PSETs and an amazing support staff to help you through them and really learn in the process.\r\nWeaknesses: textbook/notes could be made better to understand. Lecture could be more engaging.",
                "Strengths: The course is extremely well organized and you can always go back and review the lectures. Prof Aspnes is a great lecturer, and he teaches the concepts in a really easy-to-follow way. Additionally, the grading structure is nice because there are no tests so if you put in the work on the psets, you should get a good grade. Weaknesses: Because of how good the lectures are, there is not that much of a class community, but the class discord does try to make up for that by letting students communicate freely with each other and the professor at all times.",
                "TA's were really fantastic and the lecture notes were spot-on",
                "Strengths: aspnes is a pretty good lecturer, so the pace of the course wasn't awful. psets were also pretty good in terms of not being impossible, although the last 2 were... a lot. also no exams was very helpful in terms of learning content. \r\nweaknesses: not many! a more understanding late policy (some number of late days) would have been nice in the case that you were just overwhelmed",
                "I really disliked the parts of lectures that were watching prof code, but because it was recorded I would usually just skip that part",
                "Some of the strengths of the course would be how most of the learning comes from the assignments, and a direct hands-on approach; however, I will say the weakness of the course would be the office hours, as it is very difficult get help from the TAs unless you were one of the first people in the queue.",
                "I loved the psets in this class--for the most part, they were a great way to understand the concepts in lectures. There were definitely not enough ULAs this year, which made office hours frustrating.",
                "I loved how the grade structure was only homework. It made the class much more enjoyable. I didn't think the lectures were particularly helpful though.",
                "The course was very well-taught, and there weren't really any weaknesses. The notes are very detailed and well-organized, so you can answer most of your questions just by referencing them.",
                "Strengths\r\n- The lecture notes were incredibly detailed and made it very easy to find material I may have missed/not had time to write down during class.\r\n- The walkthrough's Ben started doing were very helpful! They were detailed enough to get you on the right track but not so comprehensive that we didn't still have to do some thinking ourselves\r\n- Lectures were engaging! I loved all of the drawings to help explain concepts\r\n- I really appreciated that there were no exams. I have never felt like my performance on a computer science exam has been indicative of my skill with the material. I found I learned much better focusing on problem sets where I could write a complex code and have time to interact with and improve it. \r\n\r\nWeaknesses\r\n- I felt that there was a lack of support outside of lecture, mostly in office hours. The TA/ULA staff was incredible but there just weren't enough of them. There were often office hour sessions where the queue was 20 people within a minute of it being enabled. This was also throughout the week, not just on the day the assignment was due. This could be improved by hiring more TA/ULA staff\r\n- In the grade reports, we weren't told which test cases our code failed. I suppose it doesn't matter much, but there were times where I wanted to know which edge cases I missed (in private tests) so that I could learn from my mistakes. The sample solutions were helpful but they didn't help me understand the mistakes in my code",
                "Prof Aspnes is a fantastic teacher, and his lectures move at a great pace and are also super clear. I also think that 223 with Aspnes is much easier than with other Professors. Although I think you learn the most with C and the technicalities of data structures through hard programming assignments, I do think this class had a great balance of making sure the homework wasn't either overly cumbersome or overly trivial. The biggest plus was definitely the lack of any kind of examinations; even though this was a COVID policy, I do think it is something that makes sense - a class in C and data structures needs learning by experience and not regurgitation.",
                "I thought the course was well done. I appreciated that it was project-focused.",
                "For many of the homework assignments, all I did was copy and paste code from the CPSC223 website. I now know how to use these abstract data types, and I understand the logic behind them, but if I was told to make one on my own I would have a difficult time.",
                "Strengths - Very valuable PSETS and office hours, professor explained very well in depth and used visuals\r\nWeaknesses - Lectures not very engaging",
                "I thought that the psets were interesting and were satisfying to complete.",
                "Pretty fun class, good lectures, beautiful structure and fun psets. Unfortunately, office hours were always at weird times or understaffed and it was often hard to get help. Problem sets tended to require a handful of super small and arbitrary tricks that you were almost expected to go to OH to find out. Great class though!",
                "Relative low workload and aspnes is a great lecturer. The class isnt rushed at all",
                "Strengths: Aspnes, definitely a great prof\r\n\r\nWeaknesses: none really, just go to office hours",
                "The course is well organized.",
                "Strengths: I thought the lectures were reasonably engaging, clear, and useful. The class notes were very detailed, and the example code in the class notes was very helpful for use on the assignments. I loved not having exams. It was also nice that there weren't usually \"gotcha\" cases in the private tests, so if your code satisfied all the cases that were explicitly mentioned in the instructions or public tests, you'd probably get full credit. \r\n\r\nWeaknesses: Because I didn't have to write any data structures from scratch, I don't think I learned them as deeply. Talking to my friends who took this class with Prof. Glenn, I have the sense that they have a more thorough understanding of the nitty-gritty details; that being said, I know how each data structure works and when to use it, which is the point.\r\n\r\nPossible improvements: We didn't talk about debugging until multiple weeks into the semester. It would have been nice to talk about debugging a lot sooner, so we could use it on assignments from the very beginning.",
                "I think aspnes is a great lecturer, and the addition of a discord server as a means of communicating with him and TFs outside office hours was a great resource that I very much appreciated.",
                "I think computer science lecture is really hard to do, as I think it can be really boring (it's an extremely interactive subject). So I think potentially more engaging/interactive lecture or more individual resources could be really beneficial.",
                "In general, it's a well-structured, well-taught computer science course with a good professor, a well-organized syllabus, and helpful TAs. The only point worth improving is that it would be helpful if the contents of each class can be posted on canvas ahead of time so the students can go through the lecture notes and do some previews before the class. I sometimes feel lost in class when the professor goes through things a bit too fast, it would be easier to comprehend course materials with some previews.",
                "weekly psets were good in difficulty",
                "Strengths: Reasonable psets\r\nWeaknesses: Support",
                "The strengths of the course would be that the course does not have a midterm and final, just problem sets. Also, having the lectures recorded was great to have especially if I had to miss class for some reason. Weaknesses could be that there isn't some form of mini test to make sure that we understand the concepts; for example, a quiz would be a good way to make sure that students know what they are learning.",
                "The professor had really good psets that went in hand with his lectures and example code. The discord that he set up to ask questions on was also incredibly helpful. However, there weren't a lot of TA's and they often had office hours at inconvenient times of the week and did not help many people due to time constraints.",
                "The notes were very comprehensive and useful for psets. The course was easier than usual since only psets were counted.",
                "Strengths: very useful foundational knowledge for future CS courses and CS in general\r\nWeaknesses: sometimes lectures could be very repetitive",
                "The material is undoubtedly a strong point of this course. I feel that this course is absolutely essential before pursuing any higher-level coding classes. The published test handles were also a strength of the course, because they gave a reason to keep working on and checking the code to try to get the highest score possible. I think the main weakness of the course was the relative easiness of the assignments and material. Since it is assumed that students in this class have previous coding experience, I feel that the first month of the course could be compressed into a shorter period of time.",
                "The structure of the course was very effective and helpful for learning. Lectures were clear and well-organized, and demos of running code at the end of each lecture helped internalize content. Concepts built upon each other well and there was a clear correspondence between lecture materials and problem sets. \r\nIt was fantastically helpful that the course grading was based solely on problem sets, since the best way to learn programming is by doing. It eliminated exam prep stress and made sure every student had a chance to produce their best solution to each problem and demonstrate the full extent of their understanding.\r\nTA review sessions and office hours were also very helpful and well-organized, although office hours tended to be severely understaffed.",
                "Strengths: You learn how to use C without much trouble, even if you've never seen it before (like me). The lectures also track about one week ahead of the assignments, which makes it easier to know which data structures to use. Weaknesses: It was kind of hard to stay engaged during lectures. I think it would be better if Prof. Aspnes's handwriting was neater and he scrolled slower.",
                "I think the content was good, I think Aspnes taught it well, I am glad we did not have crazy hard p-sets but were still able to learn how to use the data structures appropriately. \r\n\r\nI think office hours should have been more concentrated toward the 2 days leading up to the due date of the pset and the day it was due because that is when most people went and lines were loooonggg sometimes resulting in people waiting hours just to end up not receiving (adequate) help.",
                "Too much time was spent learning C instead of learning data structures. Much of the important stuff was concentrated in the final problem sets, but making everyone able to drop 2 problem sets and having no tests meant that most people dropped the last 2 problem sets. Lectures were not interactive whatsoever."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "Yes if you need it for your major or the CS certificate.",
                "If you're a CS major - you're required to, anyway. If not, don't - super technical heavy because this is an upper level CS course",
                "Yes! I skipped 201 and thought it was one of the best decisions I made. I was definitely prepared and had no trouble. Also, the content in this course is really awesome. I loved hash tables and treaps in particular.",
                "It's required for CS majors.",
                "Required for CS Majors + Certificates, so might as well enjoy it a bit.",
                "Yes! The assignments are fun and not too long, the professor is nice and entertaining, grading is reasonable. This is a great course.",
                "I would recommend it if you are willing to put in work outside of class. To succeed in this course, you must be an ardent self advocate, otherwise you will be left behind. Get to know other students, go to office hours, browse stack overflow.",
                "If you want to major in CS, take it with a different professor. If you just need the CS credit, this class is fine.",
                "Only if you plan to work in the tech industry. This course is crucial and a standard best practice piece. While C is impractical, it is better to learn in the long term.",
                "Yea if you want to learn more about various data structure, but no if ur not going to work with c",
                "Yes, definitely take this",
                "I would for students interested in further pursuing theoretical computer science. 223its lectures and psetsare very efficient at teaching you what you need to know with not much time spent on or effort required on fluff. Can be dry (data structures are not the most exciting).",
                "Yes, data structures can be so important, this was also a really good opportunity to think about allocating space/memory, how to code in C, and learn extremely important data structures that help solve certain problems easier. It broadens your programming scope, allowing you to think about more efficient ways to solve fun problems! However, pointers can get confusing :( - go to office hours! All the TA's are super nice and helpful :) - plug: JC '24 and NM '23",
                "Yes with Professor Aspnes",
                "absolutely",
                "Yes",
                "I think it is a good class to learn c and to learn the basics of data structures. The lectures, although boring at times, were good and I thought slade was a good professor and good at teaching.",
                "Yes, good course for people looking to become more fluent in programming",
                "Yes, I would recommend the course as taught by Aspnes to any CS student who needs 223 as a prereq.",
                "Yes. I think it taught a lot and was not too much work.",
                "Absolutely. I honestly think that with the elimination of exams and the switch to problem sets (you take the top ten out of twelve), this course is an awesome CS class for anyone interested in basic data structures. Professor Aspnes is quite funny and an amazing lecturer and the ULAs are fantastic - there are so many opportunities to get help on problem sets so you should never be struggling alone. I delayed taking 223 to take it with Aspnes and I am so glad I did. The only downside is that you might be kind of shocked when you move up to 323...from what I've heard that class has an insane workload but I don't think that's a reason to ruin the 223 experience/workload. No midterm/no final = an enjoyable relatively stress-free learning experience. Thank you, Professor Aspnes and all of the ULAs!",
                "Yes! Aspnes does a good job going through the material. His notes are also fantastic. The no-exam style really encourages learning. Really good CS class, especially when Aspnes is teaching to learn about C and data structures. Good for both CS and non-CS majors.",
                "Yes! I learned a ton and Aspenes is great!",
                "YES. IF YOU ARE GOING TO TAKE THIS CLASS, TAKE IT IN THE SPRING WITH ASPNES.",
                "Only if you need to take it. C can be frustrating to learn especially if you dont have a need to learn it",
                "Yes! I learned so much about computer science. The problem sets are great for both understanding the material and sharpening your problem solving skills.",
                "Yes, its required.",
                "Yes, it's a good course. Aspnes is a great teacher and the class is significantly easier with him than with Glenn.",
                "With aspnes yes",
                "I would recommend this course to another student. This course was a good introduction to data structures and helped me dive into the topic easily even when I had little background.",
                "Yes!!! Aspnes is wonderful, I learned a ton, and most importantly, it made me more confident and excited to continue with the CS major",
                "I think everyone interested in computer science should take a class is Data Structures. It's a core part of CS.",
                "Yes, you learn a lot about CS, especially through the psets",
                "Definitely.",
                "Yes for the major requirement.",
                "Yes, its definitely one of the CSPC classes that you will get a lot of utility out of since data structures are a vital concept in most technical work and the tech industry; they are also often utilized in leetcode questions and will give you a head start for tech interview prep! However, consider using a different language aside from C (used in class) in post class future endeavors since C is quite a low level language.",
                "100%. This is an extremely useful course that will teach you a (very) sizable chunk of C and a (very) sizable chunk of data structures. You'll learn about arrays, structs, linked lists, hash tables, stacks, heaps, queues, trees, and graphs. You'll learn how to compile files in the terminal and debug with gdb. You'll learn how to plan how to solve a problem visually before implementing in code. You'll learn how to link files together to create readable and coherent code. You'll learn how to optimize your code via problem solving and programming techniques. You'll learn how to allocate memory and free it. You'll learn how to engage with office hours. You'll see complex problems as fun programming challenges. If you are coming from CS50 or CS201, you may feel like this is a challenging and daunting next step; it certainly is, but it is fruitful and truthfully not nearly as bad as I thought it would be. I feel much more confident in programming and even more passionate about continuing to program after this course. Unlike CS201, I was rarely *frustrated* with the material or the problem sets. Each problem set is concisely worded and ample time and resources are provided to assist you through the process. Each week is a new data structure, and that data structure is utilized in the following week's problem set. It is a predictable pattern of learning and work that propels this class and makes it feel productive. There are some week that are harder than others, but the same sense of predictability remains: a problem set based on a previously learned data structure, and resources in the form of notes and office hours to show you how to build those data structures and fit them to the problem. This course does not teach you by confusing you--it teaches you by showing you the right way to implement something and then asking you to implement that same thing under an alternative circumstance. I'm a big fan of this type of learning, as it ensures you learn to build things in an effective way.",
                "Yes, absolutely take this class with Professor Aspnes!! Great basis for the future CS classes and for overall understanding of how C works",
                "Yes, this is in important course for foundational programming understanding.",
                "Yes! A great way to learn C, as well as get exposure to a range of fundamental programming data structures and tools.",
                "Yes, overall it was a very good course.",
                "Yes, you learn so much about C, and memory, and data structures",
                "Yes if they are in the CS major as they then have to take the course",
                "Yes. I think this course is very essential to learning computer science.",
                "Yes, if required by the CS major/joint majors",
                "Yes, I would, I really liked Professor Aspnes  and his team of TAs.",
                "yes",
                "Yes, especially without exams, learning the material is a lot more engaging and less stressful.",
                "I would recommend this course only if you are a computer science major or are trying to receive the computer science certificate.",
                "Yes, this is a good introductory course with reasonable problem sets. The course notes are phenomenal.",
                "Yes. This course is required for CS majors, and is also a good class for non-CS majors if they want to get a good basic understanding of programming in C. The workload is decent but definitely manageable.",
                "Yes, professor aspnes is very responsive, and learning C is a lot of fun",
                "Yes, data structures are important",
                "Aspnes is a great and understanding professor, so absolutely",
                "yes, you should take it for cs major",
                "Yes only if you are majoring in computer science.",
                "It's a useful stepping stone to learn C and get an introduction to data structures, and necessary for the path. It's not a bad class.",
                "Yes, I would, if you are interested in programming. The class will teach you a ton about that.",
                "I would definitely recommend this course to another student. While it is necessary for the computer science track so many will take it for that reason anyway, it was genuinely a great course, and I enjoyed the work.",
                "Yes, this is a fun class and also very interesting",
                "if you're a cs major you have to take it anyways, so I would def recommend taking it with aspnes, since he's pretty good at explaining concepts. make sure to get help for your psets early -- you have one week to finish, and the last 2 days are super busy, so if u need help try to do it over the weekend. don't listen to any of the gross cs guys it's perfectly valid to go to office hours and get help. it's literally the ULAs job to help u. it's honestly not terribly hard, but some of the concepts (read: pointers) can be a lot to get ur mind around. dw abt it, we're all struggling. anyone who says they're not is lying. you've got this!!\r\n\r\n\r\n(don't take it if ur not a cs major lulz)",
                "Good course",
                "If you're interested in learning the GOAT of all low-level languages, developing a familiarity with some really cool data structures, and are interested in getting a short crash course in big-O complexity notation - yes!!",
                "Yes I would definitely recommend this course to other students, as the content you learn gives you a strong foundation for programming in general (in any language)",
                "Yes!",
                "A great stepping stone in the CS courses",
                "Yes, if they intend to be computer science majors or develop software.",
                "This course is great if you are interested in programming and you want to code at any level in the future.",
                "Yes! In all of my computer science education so far, I feel like this class has been the most valuable.",
                "Anyone curious about the fundamentals of programming should definitely take this class. As someone with experience working in Python, I really benefited from learning about how first-principles, primitive data structures give rise to the more abstract Python types, and really benefited from being able to implement these structures in a pointer-based language such as C.",
                "Yes",
                "Yes, it was a fun class. Since it was all Pset based, I had a fun time doing them.",
                "I would recommend if a CS-related major. Data structures are integral to CS and this class teaches them well. This is not a course to take for fun or learn introductory programming, though.",
                "Yes. Fun and useful class. As long as you dont start the problem sets the day of and keep sort of caught up on lectures you should be fine.",
                "Yes, should definitely take with aspnes if you get the chance",
                "not unless you have to take it",
                "Sure, the course is really helpful and interesting.",
                "I would. I liked learning about data structures, and if you pay attention in lectures and make use of the class notes, the assignments really aren't too bad. I came in with no experience in C, but the learning curve wasn't too bad; I don't like C, but I understand why it makes sense to teach this class in C. The class really gives me appreciation for how so many of the data structures that you take for granted in a language like Python are actually complicated and interesting.",
                "yes, even for some of my non CS major friends, this course taught some valuable skills",
                "Yes. It was a good course for learning C, and it's a required course for the CS major.",
                "Yes, even if you are not considering CS major. It's a great introductory class to C language and data structure in general.",
                "Good intro cs class",
                "Yes, because it's a pretty reasonable exploration of data structures. Not too hard.",
                "For people getting the CS major, this class is required but I would recommend taking it with Professor Aspnes as he is a great lecturer.",
                "Yes, if they are a comp sci major or if they would like to learn about data structures.",
                "If you are a computer science major then it's required anyway. If not, then I'd only take it if you are considering going further with computer science (it seems like kind of a stepping-stone to more advanced and rewarding CS courses)",
                "I would undoubtedly recommend this course to another student, especially to people with coding exposure but no formal coding experience. This course maximizes the cost/benefit ratio with respect to the work required and the applicability of the acquired skills. The problem sets (except for one) took less than six hours, and there were no exams. That being said, the skills I learned were foundational and have already changed how I approach coding projects. I enjoyed this class so much that I decided to pursue the computer science certificate after taking it.",
                "I would especially recommend the course with Aspnes. If you are like me and questioning your CS path after 201, 223 with Aspnes has proved that I can actually code.",
                "I would recommend this course to any student interested in practical programming skills, especially in context of embedded and low-level systems.",
                "If you're definitely interested in CS, then yes. It's a good chunk of work so don't take it if you're just marginally interested, but you get a good intro to different structures and time complexity, which is super helpful if you're doing any research that uses large datasets (like astronomy research). I definitely recommend it with if there are no tests (like it was this semester), which definitely took some pressure off.",
                "I would especially recommend it with Aspnes because it is not as intense workload-wise and thus less scary than taking the class with other instructors."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 223 01 - DataStructres&ProgrmmngTechnqs"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.700530469417572,
                0.7222021222114563,
                0.6576696634292603,
                0.6249048709869385,
                0.9101482629776001,
                0.7309677600860596,
                0.6457003355026245,
                0.5330424904823303,
                0.6897661685943604,
                0.6232736706733704,
                0.69313645362854,
                0.6686010956764221,
                0.6060681939125061,
                0.5352731347084045,
                0.9179924130439758,
                0.6767712831497192,
                0.6535038352012634,
                0.5189768671989441,
                0.5518518090248108,
                0.6609585285186768,
                0.5311935544013977,
                0.548919677734375,
                0.9283288717269897,
                0.6174258589744568,
                0.8702241778373718,
                0.5939858555793762,
                0.600328803062439,
                0.7193337082862854,
                0.6385750770568848,
                0.6990836262702942,
                0.6275854110717773,
                0.9531914591789246,
                0.6481956243515015,
                0.682400643825531,
                0.506669282913208,
                0.6170466542243958,
                0.9556832313537598,
                0.9049890637397766,
                0.8575098514556885,
                0.7361481189727783,
                0.5923227667808533,
                0.5495355129241943,
                0.6386743187904358,
                0.6038991212844849,
                0.695989191532135,
                0.5513992309570312,
                0.9377124905586243,
                0.6365749835968018,
                0.5432916879653931,
                0.6832424998283386,
                0.8768576979637146,
                0.8032358288764954,
                0.4932073652744293,
                0.5298560857772827,
                0.49041348695755005,
                0.6540425419807434,
                0.722755491733551,
                0.5930859446525574,
                0.5982170104980469,
                0.6000916361808777,
                0.6356235146522522,
                0.6107416749000549,
                0.5753048658370972,
                0.9234325289726257,
                0.5909815430641174,
                0.9631884098052979,
                0.6450634002685547,
                0.6737270355224609,
                0.6270028352737427,
                0.8177434206008911,
                0.5139099955558777,
                0.7194172739982605,
                0.8761711716651917,
                0.646251916885376,
                0.63579261302948,
                0.9525821805000305,
                0.8288189172744751,
                0.7323023676872253,
                0.6264579892158508,
                0.7377527356147766,
                0.6411100029945374,
                0.7003964781761169,
                0.6331254839897156,
                0.6716442108154297,
                0.6495667695999146,
                0.614636242389679,
                0.8893520832061768,
                0.8521217107772827,
                0.6596723794937134,
                0.6961588263511658,
                0.5182420611381531,
                0.5358112454414368,
                0.7110500931739807,
                0.5239547491073608,
                0.7439055442810059
            ],
            "sentiment_counts": {
                "neutral": 66,
                "positive": 29
            },
            "sentiment_distribution": {
                "neutral": 0.6947368421052632,
                "positive": 0.30526315789473685
            },
            "sentiment_overall": [
                "neutral",
                66
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "negative",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "negative",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "negative",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "negative"
            ],
            "sentiment_scores": [
                0.7366524934768677,
                0.5944679379463196,
                0.7887874841690063,
                0.6935850381851196,
                0.5521460771560669,
                0.5458711385726929,
                0.5970642566680908,
                0.6944423913955688,
                0.6860213875770569,
                0.8387333750724792,
                0.6829757690429688,
                0.839514434337616,
                0.5881619453430176,
                0.6569003462791443,
                0.7095935940742493,
                0.7073155045509338,
                0.6327272653579712,
                0.8466200828552246,
                0.6294302344322205,
                0.8967925906181335,
                0.8502251505851746,
                0.6035539507865906,
                0.8034813404083252,
                0.8348852396011353,
                0.9107275009155273,
                0.7394998073577881,
                0.6380576491355896,
                0.597137451171875,
                0.8969199657440186,
                0.5404142141342163,
                0.8477403521537781,
                0.6442168354988098,
                0.8642061352729797,
                0.5995015501976013,
                0.5855443477630615,
                0.894341230392456,
                0.7133079171180725,
                0.5055721402168274,
                0.5533523559570312,
                0.654147744178772,
                0.6200715899467468,
                0.6560090184211731,
                0.5965310335159302,
                0.5643009543418884,
                0.6883269548416138,
                0.4644920825958252,
                0.5948464870452881,
                0.7790156006813049,
                0.8443371057510376,
                0.7866261005401611,
                0.735371470451355,
                0.6364683508872986,
                0.7517627477645874,
                0.6143296360969543,
                0.6520222425460815,
                0.5317423343658447,
                0.7691926956176758,
                0.7796587944030762,
                0.8941584229469299,
                0.6393691897392273,
                0.5419637560844421,
                0.6823439598083496,
                0.5993179082870483,
                0.6242662072181702,
                0.7543554902076721,
                0.7130076289176941,
                0.773608922958374,
                0.773030161857605,
                0.7923701405525208,
                0.6209867596626282,
                0.7947165369987488,
                0.5532350540161133,
                0.6272167563438416,
                0.5622987747192383,
                0.5229050517082214,
                0.7975001335144043,
                0.8551217317581177,
                0.5337023138999939,
                0.6141310334205627,
                0.6767821907997131,
                0.7665941119194031,
                0.5520650744438171,
                0.5218710899353027,
                0.7737088799476624,
                0.4975593090057373,
                0.7522022724151611,
                0.7998835444450378,
                0.5081540942192078,
                0.5469360947608948,
                0.6746408343315125
            ],
            "sentiment_counts": {
                "positive": 57,
                "neutral": 29,
                "negative": 4
            },
            "sentiment_distribution": {
                "positive": 0.6333333333333333,
                "neutral": 0.32222222222222224,
                "negative": 0.044444444444444446
            },
            "sentiment_overall": [
                "positive",
                57
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "negative",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.8855324387550354,
                0.7349525690078735,
                0.9665289521217346,
                0.8991031646728516,
                0.5188071727752686,
                0.9737894535064697,
                0.5316968560218811,
                0.73489910364151,
                0.6199469566345215,
                0.7454862594604492,
                0.6599085927009583,
                0.5045264363288879,
                0.9013524651527405,
                0.8893784880638123,
                0.664592444896698,
                0.895555853843689,
                0.8749236464500427,
                0.7786023020744324,
                0.7267264723777771,
                0.6731253266334534,
                0.9142744541168213,
                0.962282121181488,
                0.970308244228363,
                0.7318843603134155,
                0.7055618166923523,
                0.9697930216789246,
                0.8290151953697205,
                0.9347543716430664,
                0.8538579344749451,
                0.856204092502594,
                0.9778593182563782,
                0.7335616946220398,
                0.8028231263160706,
                0.7723623514175415,
                0.8424354791641235,
                0.8646494150161743,
                0.8587741255760193,
                0.9495628476142883,
                0.5267857313156128,
                0.9353320598602295,
                0.8885355591773987,
                0.4956310987472534,
                0.8758284449577332,
                0.8727865219116211,
                0.8863049745559692,
                0.9397101998329163,
                0.8230147957801819,
                0.7023361325263977,
                0.8304322361946106,
                0.9293072819709778,
                0.7611879706382751,
                0.9292196035385132,
                0.7046294212341309,
                0.8517176508903503,
                0.8033326268196106,
                0.8667176365852356,
                0.5024434328079224,
                0.6746094822883606,
                0.890828549861908,
                0.9547211527824402,
                0.6373586058616638,
                0.5005196928977966,
                0.8106278777122498,
                0.8875902891159058,
                0.7555313110351562,
                0.7986124753952026,
                0.8637210130691528,
                0.8906202912330627,
                0.9547730088233948,
                0.7701335549354553,
                0.895555853843689,
                0.961421012878418,
                0.5869336128234863,
                0.869778573513031,
                0.5909315347671509,
                0.5819377303123474,
                0.9371441602706909,
                0.863482654094696,
                0.7946000695228577,
                0.8514569997787476,
                0.8676278591156006,
                0.7044026255607605,
                0.5379971265792847,
                0.8464791178703308,
                0.84218430519104,
                0.7067338824272156,
                0.8303605914115906,
                0.7413960099220276,
                0.6209897994995117,
                0.8054527640342712,
                0.508901834487915
            ],
            "sentiment_counts": {
                "neutral": 36,
                "positive": 54,
                "negative": 1
            },
            "sentiment_distribution": {
                "neutral": 0.3956043956043956,
                "positive": 0.5934065934065934,
                "negative": 0.01098901098901099
            },
            "sentiment_overall": [
                "positive",
                54
            ]
        },
        "final_label": "positive",
        "final_count": 140,
        "final_proportion": 0.5072463768115942,
        "final_counts": {
            "neutral": 131,
            "positive": 140,
            "negative": 5
        },
        "final_distribution": {
            "neutral": 0.4746376811594203,
            "positive": 0.5072463768115942,
            "negative": 0.018115942028985508
        }
    }
}