{
    "crn_code": "22101",
    "season": "202301",
    "enrollment": {
        "enrolled": 22,
        "responses": 19,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                0,
                0,
                3,
                4,
                11
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                0,
                0,
                3,
                3,
                12
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                0,
                1,
                2,
                6,
                9
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                0,
                1,
                6,
                8,
                3
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                0,
                8,
                10
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                1,
                7,
                10
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "So much. You can come out this class able to read a chip manual and understand most/all of it.",
                "I used to think I understood how computers worked. But I had no idea. I've said that a few times. I took CS 201, and thought I got how computers worked. Then, I took 323, and thought: \"Wow, I had no idea how computers worked. But now I do.\" I felt the same way about OS, and about Compilers. It's only now, though, that I realize that I had no idea what I was talking about. This class took me on a whirlwind ride through low level computer architectureyou build a pipelined, superscalar, speculative processor using wires and registers. It's amazing.",
                "Techniques of high-performance CPU design (pipelining, speculation, superscalar, out-of-order) and their implementation in Verilog. Digital design and verification skills.",
                "Verilog, introduction to computer chip design",
                "Learned to debug and code in Verilog to create basic elements in processor, CPU pipeline, out of order executions, and the in-depth serials of how modern processors are optimized",
                "Circuit design.",
                "I learned a lot about how instructions are actually executed in hardware. This is the hardest and most rewarding class Ive taken at Yale.",
                "I gained the ability to reason about hardware design. I learned the core principles in computer architecture which shape modern computing hardware and learned to reason about their trade-offs. Learning to navigate Verilog and cycle accurate simulation was challenging, but nonetheless, I picked up debugging and programming skills to work with these tools and techniques.",
                "important knowledges of computer architecture.",
                "I learned about high performance computer architecture techniques used by modern companies.",
                "COmputer architecture",
                "How computer processors work from the ground up. ALUs, caches, pipelining, branch prediction, out-of-order, coherence, address translation, on-chip memory. I learned how to design and debug Verilog circuits for computer processors. This course also provided general intuition for many key topics in computer architecture, such as the impacts of Moore's law, Amdahl's law and Dennard scaling, or RISC vs CISC, different CPU designs such as Intel vs AMD vs ARM M1, etc."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Great class: you learn a ton, and I think the level of difficulty should remain high. The instructor is another strength of this course. He makes sure students are learning and was generous with extensions to help us get everything done. The assignments could be slightly regulated in terms of workload; the third problem set took me and other friends upwards of 70-80 hours to finish. I also think either all the assignments should be done with partners, or none of them should.",
                "Engaging and informative lectures that take you from the basics and history of the field to modern engineering practice and research problems. Theyre fairly interactive and really give you an opportunity to discover why certain decisions were made one way or the other.\r\n\r\nThe psets do a great job at hiding the noise (although you wont get to build much from scratch) and focusing on implementation issues that directly relate to course material.\r\n\r\nThat said, I dont think this class shouldve been marketed towards CS majors with no digital design experience. EENG 201 (or something stronger as 201 does not teach Verilog) should be a prerequisite. The class was not prepared for the sad, dangerous reality of Verilog, and the staff had to strip down the assignments in response.",
                "There were only 4 PSETs, and the middle 2 were quite intense. The first and last PSETs were more manageable, but the middle 2 were too much. Im sure the workload distribution will change in future iterations of the class (this was the first time).",
                "Strengths - Abhishek is a very knowledgeable instructor and clearly walked us through difficult concepts such as multiple level caching, branch prediction, and out-of-order execution\r\n\r\nweaknesses: verilog. since there was no introduction to verilog, a lot of time was spent learning the nuances of verilog (no abstractions!). The problem sets felt pretty uncalibrated in terms of difficulty, and it would have been really helpful to have open office hours with the TFs rather than independently scheduling time.",
                "You learn a lot in the course and Abhishek is a great lecturer, no exams, just psets. The pacing is a bit weird in the class but it was the first time it was taught.",
                "Strengths: thorough. Weaknesses: the pset took a 100 hours to complete.",
                "No weaknesses, Abhishek is a goated lecturer, and the content was very interesting.",
                "I thought that more background into Verilog would have been beneficial across the board. In my opinion, a lack of discussion on Verilog best practices and debugging led to deadline extensions which ate away at the overall content that we were able to cover.",
                "A few of the psets probably still need to be flushed out in terms of starter code and scope. But otherwise really enjoyed both the lectures and the course",
                "The projects are well-designed. The instructor is very knowledgeable of the contents.",
                "The lectures for the class were amazing and very informative, but the assignments were very time consuming.",
                "Lots of work",
                "Strengths: Abhishek is a phenomenal lecturer. He's engaging, provides brilliant insights, and knows which topics to dive into vs which to glance over. He has strong understanding of almost every niche in computer architecture, can answer endless clarifying questions, and is at the forefront of advances in the field.\r\n\r\nWeaknesses: many course topics were simplified for psets, which makes sense given the already steep difficulty of some implementations, but also implies myself and other students seemed less comfortable with implementation details of more complex topics (e.g. branch prediction, Tomasulo's algorithm). Perhaps a Canvas quiz could go along with each pset to further reinforce these implementation details."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "Absolutely. Best lectures at Yale. Just be ready to grind grind grind grind grind",
                "Yeah, I'd recommend it. But get ready to work hard. You'll learn a ton.",
                "Yes, to students who already have some experience implementing and debugging digital circuits. It is a well-taught class with one of Yales most charismatic professors, and it covers a core part of computer science.\r\n\r\nYou may doubt if skills in architecture are important for software engineers, but the class addresses these concerns well. Understanding how a high-performance CPU is built helps you see what kinds of code will work well in practice or what a compiler can and cannot help you with. Besides, top tech companies are increasingly building their own hardware, whether for consumer devices (Apples M1) or cloud data centers (Googles TPUs). Being able to figure out the trade-offs of implementing feature X in hardware, software, or both will be a key skill for senior engineers.\r\n\r\nUnfortunately, it isnt the best way of learning Verilog from scratchit just doesnt have the timeso I recommend coming in with some preparation.",
                "If you have any interest in modern CPU design and micro-architecture, this class is essential. This class really bridges the gap between the top of the Electrical Engineering stack and the bottom of the Computer Science stack. It made a lot of what we learned in previous classes more rigorous and comprehensible. Take it!!!",
                "I would only recommend this class to a student if they are very comfortable self-learning verilog as well as deeply interested in computer architecture. Computer architecture as a whole is a very subtle topic, and requires a lot of independent consideration of edge cases. As this was the first time this class was offered, it was a little uncalibrated in terms of difficulty and content, as well as student support, but I believe that will improve as time moves on.",
                "If you have the extra bandwidth and somewhat enjoyed 323, take this class, you just learn so much about how computers work. Also take if at all interested in computer engineering.",
                "No. 100 hour psets should be done by no man.",
                "Yes, if you liked OS and 323 this is a great course to take. This along with compilers really made me feel confident in my ability to understand how computers execute instructions efficiently.",
                "I would recommend this course to other students as long as they come in knowing Verilog basics. This would be my main advice to them. I thought that the lectures were fantastic and very informative.",
                "Would defiantly recommend to another student. Lectures are great, you learn alot through Psets. Just be prepared to put in the work.",
                "A must take class at yale if interested in computer architecture.",
                "I would highly recommend this course, especially if it is taught again by Abhishek. It opened my eyes in many ways to what is going on within a CPU/computer under the hood, covering topics like pipelining, superscalar design, branch prediction, cache prefetching, multicore systems/SMT, cache coherence/consistency, memory controllers, and a deeper dive on virtual memory and the MMU (even tangentially discussing how such topics are related to GPU processing and virtualization). Abhishek was very thoughtful to explain the material in a way that really prioritized students' depth in the topics and expressed new material very clearly. The assignments did start off tough and it took some time to learn Verilog, but in doing so it brought about a good appreciation of many of the subtleties/complexity involved with designing hardware and we got to directly implement our own CPU with several important optimizations/key features. Abhishek was also very flexible and supportive in listening to his students and adjusting the assignments/lecture plans as needed to best focus on/suit student learning as opposed to being more strict with assignments/grading, which was really helpful in having a lighter end to the semester, while still providing resources for further learning from where the course ended.",
                "Yes. It was a very very informative course with excellent lectures.",
                "Yes, if you're interested about computer architecture"
            ]
        }
    ],
    "extras": {
        "title": "CPSC 420 01/CPSC 520 01/EENG 420 01/ENAS 820 01 - Computer Architecture"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral"
            ],
            "sentiment_scores": [
                0.6555925011634827,
                0.5990095138549805,
                0.7068495154380798,
                0.5530231595039368,
                0.600307822227478,
                0.653353750705719,
                0.9182627201080322,
                0.6127356290817261,
                0.6011590361595154,
                0.6425015330314636,
                0.5516737103462219,
                0.7082288861274719
            ],
            "sentiment_counts": {
                "positive": 2,
                "neutral": 10
            },
            "sentiment_distribution": {
                "positive": 0.16666666666666666,
                "neutral": 0.8333333333333334
            },
            "sentiment_overall": [
                "neutral",
                10
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive"
            ],
            "sentiment_scores": [
                0.8468519449234009,
                0.6650113463401794,
                0.6428917646408081,
                0.6816879510879517,
                0.7854661345481873,
                0.6837339401245117,
                0.8812685608863831,
                0.6098414659500122,
                0.6010311841964722,
                0.7879208326339722,
                0.7655056715011597,
                0.7382102012634277,
                0.5037304162979126
            ],
            "sentiment_counts": {
                "positive": 6,
                "neutral": 7
            },
            "sentiment_distribution": {
                "positive": 0.46153846153846156,
                "neutral": 0.5384615384615384
            },
            "sentiment_overall": [
                "neutral",
                7
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "negative",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.8461527824401855,
                0.7814287543296814,
                0.700701892375946,
                0.8740768432617188,
                0.7160162925720215,
                0.718224048614502,
                0.7419394254684448,
                0.9449464678764343,
                0.9101141095161438,
                0.8115895390510559,
                0.8300291895866394,
                0.8545587658882141,
                0.9483970403671265,
                0.7278133034706116
            ],
            "sentiment_counts": {
                "positive": 10,
                "neutral": 3,
                "negative": 1
            },
            "sentiment_distribution": {
                "positive": 0.7142857142857143,
                "neutral": 0.21428571428571427,
                "negative": 0.07142857142857142
            },
            "sentiment_overall": [
                "positive",
                10
            ]
        },
        "final_label": "neutral",
        "final_count": 20,
        "final_proportion": 0.5128205128205128,
        "final_counts": {
            "positive": 18,
            "neutral": 20,
            "negative": 1
        },
        "final_distribution": {
            "positive": 0.46153846153846156,
            "neutral": 0.5128205128205128,
            "negative": 0.02564102564102564
        }
    }
}