{
    "crn_code": "21988",
    "season": "202101",
    "enrollment": {
        "enrolled": 40,
        "responses": 33,
        "declined": 1,
        "no response": 1
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                0,
                1,
                3,
                14,
                14
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                0,
                1,
                3,
                14,
                15
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                0,
                1,
                1,
                19,
                11
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                0,
                1,
                6,
                13,
                12
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge<\/u> of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                0,
                7,
                25
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the <u>workload<\/u> of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                2,
                12,
                18
            ]
        },
        {
            "question_id": "YC601",
            "question_text": "Which of the following best describes your mode of learning in this course?",
            "options": [
                "recorded lecture",
                "live virtual lecture",
                "in-person lecture",
                "virtual seminar or other discussion format",
                "in-person seminar or other discussion format",
                "virtual lab",
                "in-person lab",
                "other or multiple (please describe below)"
            ],
            "data": [
                7,
                22,
                0,
                0,
                0,
                0,
                0,
                2
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Proof-based algorithm. Time complexity analysis. Thinking out-of-box.",
                "I learned so much about algorithms. This included dynamic programming, randomized algorithms, NP-hard, NP-complete, and much more.",
                "Overview of techniques for solving algorithms problems: greedy algos, DP, divide & conquer, Dijkstras\/MST\/max-flow, randomized algos, etc",
                "Problem-solving and proof-writing skills, ability to tackle challenging algorithmic problems",
                "I learned about Greedy Algorithms, Dijkstra's Algorithm, Minimum Spanning Trees, Dynamic Programming, Bellman Ford, Divide & Conquer, Fast Fourier Transform, Max Flow, Linear Programming, P vs NP, Approximation, Randomization, SAT, Semidefinite Programming. The main skill developed in this class is problem solving skills related to algorithmic design. Most of the class material can be divided into one of three categories: (i) designing an algorithm, (ii) showing an algorithm is correct, and (iii) analyzing the time \/ space complexity or bounds of an algorithm. Other themes that wrap throughout the course include improving on an existing algorithm, making key insights into a problem, and understanding the historical needs \/ problems that led to the development of an algorithmic solution. As a student, I also learned the importance of being able to allocate my time and of knowing when further effort is unlikely to yield a solution.",
                "learned a lot about reasoning about a lot of algorithms that cover a broad variety of algorithmic design strategies.\r\nCovers all the necessary stuff for difficult SWE interviews, but the intuition\/rigor\/intensity\/depth is a good introduction to reasoning about more complicated algorithms.",
                "Algorithms and proofs",
                "Essential techniques of algorithm design (DP, divide and conquer, formulating problems as network flow), NP-completeness theory and ways of dealing with intractable problems. Mostly the analysis of algorithm correctness (wiring proofs).",
                "I learned about different algorithmic techniques such as greedy, dynamic programming, divide and conquer, network flow, P\/NP, randomized algorithms, and approximation algorithms. This course also developed my ability to prove the correctness and running time of algorithms.",
                "I learned more about different types of algorithms and applying general algorithms and proofs we went over in class to more challenging problems. I became a better problem-solver and proof writer. I think I improved the most in writing rigorous proofs, making sure that they are complete and fulfill given requirements.",
                "I understand algorithms better, but I mostly learned my own weaknesses. I am not as good at proofs as I thought.",
                "Explored a lot of common algorithmic paradigms in more depth\/with harder applications, and some new ones (approx algs, randomization, LP).",
                "I learned a lot about writing proofs, analyzing algorithms, and different kinds of algorithms and what they're good at solving",
                "Many proof formats  (divide and conquer, greedy, dynamic programming, graph based algos), NP concepts (NP hard, reductions, SAT solvers), randomized algorithms, max-flow\/min-cut",
                "knowledge of algorithms and how to prove their correctness and time complexity",
                "I learned about a range of problem solving techniques and algorithms in cs",
                "I learned to use mathematical rigor in proving the validity and correctness of efficient algorithms that could be applied to solve classic problems in computer science that have practical uses in different fields such as economics.",
                "Learned how to think critically and analyze a range of computational problems to find a solution. Learned how to devise efficient algorithms for specialized tasks to beat brute force. Learned how to prove correctness of algorithms and analyze their runtime.",
                "I became much better at designing algorithms thoroughly.",
                "Improved ability to create and analyze algorithms.",
                "I grew a lot in my problem-solving and proof-writing ability, as well as my knowledge of algorithms and current developments in CS theory.",
                "Algorithms, P vs NP",
                "I learned a variety of different algorithmic techniques, including greedy algorithms, dynamic programming, graph algorithms, and randomized and approximation algorithms. I also learned about NP-completeness and reduction of decision problems. I developed my critical thinking and proof-writing skills.",
                "A pretty thorough introduction to several different classes of algorithms",
                "I gained a much, much deeper understanding of algorithms. From greedy algorithms to dynamic programming to divide and conquer to Ford Fulkerson to complexity theory to approximation algorithms to randomized algorithms, Professor Cai always challenged me to fully understand the concepts in order to solve the problem sets. This course greatly improved my ability to rigorously solve problems and write formal proofs--in fact, it was my first course which I had to use Latex because it would be practically impossible to hand-write."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Strengths: Yang Cai is a great instructor. Office hours generally helpful. Coverage of material is comprehensive.\r\n\r\nWeaknesses: Problem set difficulty was probably a tad beyond reasonable in some instances, given that we had to work alone. Office hours were immensely helpful in this regard, but I feel like ideally, a motivated student shouldn't feel forced to go to office hours in order to make substantial progress on a question.",
                "I think the professor couldn't be clearer.\r\nProfessor Cai is one of the best lecturers I have seen.",
                "good prof",
                "I loved this class. It's perfect for anyone who loves math and proofs; the concepts covered were all super interesting, the psets were hard but not impossible, and the lectures explained most of the stuff really well.",
                "Lectures were very high quality and the homeworks all seemed really polished. Office hours sign-up system was great as well. Some more student interaction might've been nice, but I understand that's pretty hard to do virtually.",
                "One of the best courses I have taken at Yale so far. The course content is extremely interesting and applicable, and the material builds on itself very nicely.",
                "The strengths of the course include the lecturing style, the problem sets, and the teaching staff. The lectures frequently begin with a naive solution and iterate to create a better solution, which is very suited to the lecture material and gives insight into how we as students should approach algorithmic design. Additionally, Yang gives plenty of opportunities for students to think about the next step in the proof and to contribute to class discussion. The problem sets are very well-designed and give students appropriate time to think of a solution. The answer keys are highly detailed (perhaps even too detailed), though students dont need to be as rigorous to earn full credit. The teaching staff and their availability in office hours are a big strength of the course, since they are very approachable and strike a good balance of dropping hints without revealing the answer. A weakness of the course is that the problem sets and the lectures are somewhat segmented; some of the best moments in class are when lectures loop back onto previous topics and I think it would be great to increase the interconnectivity between lectures even further. The problem sets exhibit this even more strongly; it is straightforward to deduce the lectures that are associated with each PSET, which takes away some of the real-world difficulty of deciding on an approach to use. As an example, knowing that a DP solution exists makes the problems easier than a real-world challenge. One idea might be to have an easy bonus problem on each PSET that draws randomly from previous course material.",
                "stregnths: solid curriculum, yang is a good lecturer, helpful TFs, very interesting problem sets\r\n\r\nweaknesses: no colab policy is a mixed bag, difficulty getting help (10 minute blocks for Office Hours, 3x a week), yang will sometimes explain things in reverse so from the most granular result to high level, and it gets tricky to follow at times. lecture notes + rewatching lectures helps",
                "Psets are hard as hell.",
                "The lecture is very clear though not inspiring in any way. The problems are difficult but satisfying to solve, and the no collaboration system is actually not that bad - the 10 minutes of ULA help at a time can help a lot. \r\nThe only problem is that it is difficult to retain lecture content when it doesnt help with the problems that much (90% is having inspiration), and the problems take up all of your time. The final asks you to reproduce proofs from lecture, which is a strange concept to me, as Ive always treated proofs as just illustrations rather than the end goal of a class (but thankfully those on the test are the easy ones!).",
                "The strength of this course is Yang Cai and his lectures. Lectures were very interesting but also extremely organized, and I really feel like I learned more in this class than any other CS class I've taken at Yale. PSETs are also very challenging and a great way to demonstrate understanding of the material in a reasonable amount of time. Prof. Cai was very accommodating and aware of students and their personal situations during a difficult semester as well. Grading remained very reasonable, with 80% weight on PSETs and a final based on class material. Prof. Cai also cancelled the last PSET and maintained the PSET drop. While most of the time ULAs are fantastic at helping and giving small insight into problems, the only weakness of this course has to be the 10-minute office hour sessions. Sometimes it can be difficult to get the necessary amount of help and guidance for problems.",
                "This course was lecture-based, so engagement was quite low on my end. I wish the professor would encourage more collaboration, such as through allowing us to work together on psets or having open office hours. Instead, most of the work you have to do yourself, which I guess also has its own merits.",
                "Strength: Great lectures. Weaknesses: Very hard, especially with just 10 minutes of help allowed, and only from course staff. I disagree that collaboration is bad.",
                "Strengths: Prof Cai is a fantastic lecturer, and (at least for me) did a great job presenting the proofs in a manner where harder lemmas were covered in detail, and easier ones were left to our intuition. Also, the problem sets were challenging but fair, with the harder problems being the most interesting ones as well. \r\n\r\nWeaknesses: Not really a weakness of the course, but just a comment about the office hours: Depending on the TA that I went to, I'd receive much more or much less insight as to how do to the problem. For example, during the DP pset, I asked about problem 3 and was told that I all could know was that I needed to use DP on 3 variables, which was basically obvious from the problem, while on pset 2, the TA essentially gave me the entire construction for the graph in 3b. Maybe this is unavoidable, as different things are clearer to different people, but since the 10 minute format often leads to prodding for insight into the problem, I think it's good to be aware of this gap in information received.",
                "This course is very challenging - be prepared to spend a bunch of time on the problem sets. The lectures are clear and the professor explains everything, including the really challenging concepts, very well.",
                "The lectures were interesting, I did not like the no collaboration policy on the problem sets, the final was unnecessary memorization, and the grading was strict. Overall nice concepts but undue stress.",
                "Class goes fast, but it is pretty thorough and the recorded lectures are nice to look back on",
                "This course was wonderful. The lecture is challenging but easy to follow, and the homework are well made and make me feel more confident about the new materials we learn in class. The TA\/ULA are especially helpful in giving comments and advice.",
                "This course was really interesting in that it taught different high-level algorithmic ideas that connected it to other parts of computer science.",
                "Yang is the definite strength of this class. His teaching and flow carries perfectly to an online format, and he makes sure everybody understands the concepts being taught. The class requires the psets to be done exclusively on one's own, which has it's pros and cons. The TAs are mostly knowledgeable and very helpful. 10mins slots look short but the TAs make the most of it.",
                "Good material",
                "Strength: Develop proof based thinking and skills.\r\n\r\nHard to list weaknesses. It is an overall difficult course.",
                "This is a solid introduction to algorithms, necessary material for any computer science student. All the material is great, and presented in a sensible order by a lecturer who knows what he is doing. The textbook is readable, and the course follows it closely. The problem sets are a lot of work, and the no-collaboration policy means that students have to spend a lot of time thinking independently on the problems. This is a lot of work and can be really frustrating, but builds strong understanding. The grading is fairly unforgiving - missing a key idea or a stroke of inspiration on a problem set or, god forbid, the final, can tank your grade.",
                "Very organized course, challenging but satisfying problem sets, very fair exam. It was annoying though that office hours were only 10 minute slots and no collaboration was allowed--I know it's meant to encourage solving the problems on your own but collaboration is usually my favorite part of math\/CS classes.",
                "Professor Cai's organization and explanation of proofs by hand-writing them going through them step by step really allowed me to understand what was going on. The ULAs were also pretty helpful during their office hours and could guide you in the right direction--so it was very important to start going to OH right when the problem sets were released. \r\n\r\nHowever, in the lecture, it could be hard to ask questions because it was hard to \"read\" the room on Zoom and ask a question without feeling like I was the only one that didn't understand what Yang was talking about. Furthermore, due to the no collaboration policy, the class felt really isolating and lonely. Although I can kind of understand the rationale behind this policy, it seems quite extreme and detrimental to building class friendships."
            ]
        },
        {
            "question_id": "YC602",
            "question_text": "Among the practices in this course geared toward learning during the COVID-19 pandemic, which succeeded and which could be improved? Please comment on course practices that allowed for virtual engagement. (Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Everything was recorded and there were plenty of office hours opportunities, which was great!",
                "The recorded lectures were put together very neatly. In fact, I think it may have decreased class attendance due to the ease of simply watching the content outside of normal class times. One practice that worked well in other classes was solving an easy question during the lecture, uploading the recording without that segment, and assigning the problem to be due 2 days after as a Canvas quiz. Students watching the lecture asynchronously would have to solve the missing problem on their own.",
                "i got vacced BRO",
                "Lectures were held live and recorded. Office hours were also held virtually. I don't think the virtual nature of these lectures and office hours took away anything from the course, as I still felt engaged with the material.",
                "I think that using Notability and screensharing was done really well. Yang Cai is a good lecturer and he adapted well to holding classes over Zoom.",
                "The iPad app (I think Notability) worked well as a substitute chalkboard.",
                "pretty much a standard covid class, so nothing here.",
                "The recorded lectures and the lecture notes are always readily available after class, so it makes reviewing really convenient.",
                "The office hours online work decently but 10 mins sometimes is barely enough, especially when the class is online and some concepts might be tougher to understand.",
                "There were plenty of opportunities to visit office hours, which helped learning.",
                "Uploading lecture recordings and notes online was helpful.",
                "Not assigning the 8th problem set was such a welcome change. It was getting very tiring to complete a problem set every one and a half weeks. This break allowed me to focus my energy on finishing my other courses strong."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "I'd cautiously recommend starting with 366 if you're unsure whether you should take 365 vs 366. You definitely learn the material in depth, and the quality of instruction is fantastic.",
                "Yes. If you like writing proofs.\r\nAlso, you need to have some knowledge of linear algebra, just saying.",
                "Yes!!!! Especially if you love the math side of computer science, it's really perfect. Hard so that you will learn a lot, but not so impossible that you will feel terrible each pset.",
                "Yes! Prof Cai is a great lecturer and the whole staff was helpful during OH, so homeworks weren't too scary.",
                "I highly recommend this to any student who wishes to grow their problem-solving skills and has the slightest interest in math\/CS.",
                "I would recommend this course to any student at Yale that has an interest in programming.",
                "very much so, take over 365 bc proofs are good  + depth\/motivations are fantastic",
                "I have pulled 6 all-nighters at Yale. 5 were for this course. Unless you have a love for proofs, do not take this course. The regular Algorithms course will cover roughly the same material for much less effort.",
                "If and only if you have taken intensive math classes, enjoyed them, and want to have more of a similar experience this semester.",
                "Absolutely. While a math background might be necessary to do well grade-wise, I definitely recommend this class to any serious CS major interested in learning about algorithms. This class really helps develop your creative and analytical problem solving skills that are essential to computer science. Even though I don't plan to pursue theoretical CS, I found myself extremely engaged in the lectures and problem sets, which is not always the case in CS classes I've taken so far. I really think that this is the type of course where it's worth it to spend hours just to understand the material.",
                "Yes, if you are willing to put in the work for it. The problems given are all very interesting and challenging, but they can be quite stressful to solve and write up.",
                "If good at proofs, yes. Otherwise no.",
                "If you're a CS\/Math major, I'd definitely recommend this class. You understand and appreciate a lot more of the power that algorithms have.",
                "Yes - if you're familiar with proofs and want a really in depth understanding of algorithms. If you want to put in the work, you'll learn a lot, but don't just casually take this class.",
                "Only take this course over 365 if you are very interested in proof based math. Coming from 230\/231, the proofs were far less guided and required more thinking. They also were graded much more rigorously. Finally, the workload in 366 >> workload in 365 so plan accordingly.",
                "No take CPSC 365. I did well in the course only because I had to grind a ton. Would not recommend and not worth it. Unless your ISOMA god, this course will be rough for you.",
                "Yes if you really enjoy proofs and algorithms. More of a math class than a CS class",
                "If you are a CS major and like proof, definitely take this course. It's great!",
                "Yes. This course was excellent, and I felt it really allowed me to gain a greater appreciation and understanding of important concepts in algorithms.",
                "Definitely, but on a lighter semester if possible. You really want to have time to think about the psets to truly derive benefit from this class.",
                "Fantastic class! Take if you really love proofs.",
                "Yes, very cool content.",
                "Although I think this is a great class, I would not recommend it to someone unless they have a very strong background in proof-based math or are planning on doing grad school. As someone who does not satisfy either of those, I found the class to be extremely difficult. There is a no-collaboration policy, and unlike some other classes, the TAs will not just give you the answers to problem sets if you come to office hours. This means that you will need to figure out everything through your own ingenuity. This class requires a huge time commitment if you want to do it properly. As such, I would recommend just taking 365. If you do decide to take this class, my advice is to set aside some time after every lecture to go through the corresponding material in the textbook to make sure you really understand it. This is one class you don't want to fall behind in, and reading the textbook will allow you to understand the material to the point where you can ask good questions in class to figure out the rest.",
                "If they are into intense proof-based classes. It was extremely time consuming for me to even understand the lectures, let alone finish the psets. Collaboration is also not allowed on the psets, and TA's don't give you direct solutions but just guide you in the general direction of how to solve the problems. So you have to do a lot of thinking by yourself, and can be frustrating since sometimes you don't know how to make progress.",
                "I would recommend this course to a computer science student with a strong mathematical background. If you were comfortable in MATH 244, do not bother with CPSC 365, as this course will be more intellectually stimulating. However, a student without such a strong background will struggle on the problem sets. I would also recommend this course to any mathematics student, to provide insight into a particularly interesting and useful style of problem solving.",
                "Yes, if you're interested in algorithms at all. It's challenging at times, but that's kinda the point.",
                "Yes! Definitely. Although it is more work than CPSC 365, you will learn SO MUCH MORE. Algorithms is the bread and butter of computer science so it is well worth your time to learn it well. Unlike some proof-based courses, the problems in this course are extremely practical. For example, what is the maximum flow that you can send through a system of pipes from the starting point to the endpoint? How can you assign different classes to different rooms without overlaps in a minimum number of rooms (a problem that Yale needs to solve every semester!)?\r\n\r\nI shopped CPSC 365 for the first two classes and found 366 to be much better taught and interesting. Especially if you have the prerequisite of MATH 244, you should absolutely seriously consider taking 366."
            ]
        },
        {
            "question_id": "YC601N",
            "question_text": "Please list any other mode(s) of learning, including any combination or variation of the above options.",
            "comments": [
                "N.A.",
                "I sometimes went to the live lecture!",
                "Lectures were given live and recordings were available afterwards, as well as slides. Additionally, Office Hours were divided into 10 minute intervals, which students could sign up for in advance.",
                "read the textbook",
                "I watched a combination of both live virtual lectures and recorded lectures depending on my schedule.",
                "Live virtual lecture and recorded lecture",
                "Live lectures were recorded.",
                "nope.",
                "The lecture recordings were also uploaded to canvas for those who couldn't come to synchronous lecture",
                "also recorded lectures",
                "recorded lecture",
                "Recorded lecture, office hours.",
                "Live virtual lecture + recorded lecture",
                "recordings",
                "Also watched recorded lecture occasionally."
            ]
        }
    ],
    "extras": {
        "title": " CPSC 366 01\/ECON 366 01\n        Intensive Algorithms "
    }
}