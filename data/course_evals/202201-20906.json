{
    "crn_code": "20906",
    "season": "202201",
    "enrollment": {
        "enrolled": 88,
        "responses": 80,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                2,
                4,
                3,
                20,
                31
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                1,
                4,
                7,
                21,
                27
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                1,
                2,
                5,
                21,
                34
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                3,
                7,
                10,
                21,
                22
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                2,
                14,
                47
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                0,
                7,
                56
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "I gained a working knowledge of different layers of abstractions and interfaces that allow the modern computer system to function. More specifically, we discussed the high-level operation of a CPU, data representation (e.g. 2's complement, IEEE floating-point), instruction set architectures (ISAs), x86 Assembly (32-bit and 64-bit versions), compilers, the process abstraction, operating systems (e.g. kernel, system calls, signals), the fork/exec paradigm, virtual memory management, dynamic memory allocation, and hardware caches.",
                "I learned an INCREDIBLE amount from this course. Before taking this class, I had no clue how the hardware of a computer functions or how its created, and I've just learned so much about how the hardware and software interact and everything. It's amazing how much you can learn in a semester with the right professor.",
                "Learned a lot of the stuff behind the CS things we take for granted in earlier courses (e.g. compilers, malloc)",
                "Debugging and problem-solving skills\r\nA lot of knowledge about systems - assembly, memory management, virtual memory, OS, processes, compilers",
                "I learned about operating systems as well as memory management.",
                "We learned a lot about compilers, assembly, computer architecture, OSes, etc. But also good programming practices and more about the \"science\" aspect of computer science.",
                "I become a much better programmer generally. My understanding of and competence using data structures drastically increased. I also learned a lot about computers at a very low level and how they work.",
                "I learned about systems design and programming in C, especially focusing on lower level functionality",
                "OS, memory, assembly, compilers, valgrind, malloc.",
                "I learned about systems, computer organization, interfaces, how to design well, and how to overcome great challenges.",
                "I learned so much in this course: from computer architecture to memory management.",
                "Knowledge of computer systems: operating systems, kernels, address translation, page tables, memory allocation, etc.",
                "- Systems, new programming technique, fundamental understanding of computers",
                "Honestly I learned how to be a better programmer. This class threw me in the deep end with how big the projects were, but it was always possible and there was always a ton of support.",
                "I learned about the lower layers of abstraction of computer systems from assembly, memory management, basic hardware components, etc. The course was centered around 5 programming assignments in C/assembly and one final project, so there is ample opportunity to apply the concepts learned in class",
                "I have learned different programming techniques, real-life implementations, different approaches, and lots of lower-level components of computer systems. The problem sets were helpful in consolidating understanding of concepts and also were good ways to practice programming. After taking this class, I am more confident in taking on larger and complicated programming projects than before. It was a good learning experience to be able to develop the skill of working with several moving pieces and programs with several files.",
                "Computer systems skills",
                "OS and thats pretty much it. Also how to spend 40 hours on a single project :))",
                "Introductions to computer architecture, assembly, virtual memory, compilers, operating systems, and caches. Became a better C programmer.",
                "I learned a large amount about computer science and computer architecture.",
                "I learned a huge amount about systems programming, from the way numbers are represented, to assembly & machine code, to compilers, to operating systems, to memory management. The projects also helped me streamline my code, and become a significantly better programmer, not to mention improve my time management when working on programming projects.",
                "I think my programming skills became a lot stronger!",
                "After taking this course, I feel as though I left as a significantly better programmer compared to any other computer science course I have ever taken. Specifically, this course taught me so much about the underlying systems that help to run our computers and gave a nice introduction to more advanced classes offered at Yale.",
                "Learned a massive amount about systems programming. I have a much more complete understanding of how a computer works, and an intro into many topics like compilers, OS, assembly, memory allocators, etc.",
                "I learned computer architecture, memory management, differentiating kernel and user code, page mapping, operating systems, and many more.",
                "I learned a lot about memory management, operating systems and shells. but importantly I learned that they are all just pieces of code like any other program and though they take time, they are just as doable.",
                "I learned about assembly, compilers, dynamic memory allocation, and operating systems. I realized through this class that I do not like systems programming.",
                "How to have no life",
                "I learned how to become a better programmer (in terms of organization of a lot of code) and debugger, and how computer systems work.",
                "learned an insane amount about systems programming including low level programming and virtual memory management (fun!)",
                "There are a few key skills (CS and otherwise) you will take away from the course if you challenge yourself and work hard with success in mind:\r\n\r\n1) Time management. This is the ability and foresight to start early on your psets, and work on them every day instead of cramming them until the last minute. You'll learn this primarily by necessity (there's not enough time to cram and do well unless you're very, very good with the material).\r\n\r\n2) Good code design. This is planning your code out in detail, proofing your conceptual design, and coding incrementally: creating one function, testing the hell out of it, then creating another, testing the functions individually and then together, and continuing to, block-by-block, build out your code. What happens is that you can take a massive, hard-to-implement problem that seems like an impossible challenge, and break it into small, doable chunks that you can consistently user test and prove for correctness, until voilayou have a working solution. The opposing version of this is equally bad: to not plan, write out as much code as you can without testing in small parts, and then, youre left with a failing solution that you need to spend 20+ hours debugging for the deadline. 323 will teach you that the former is the way to go.\r\n\r\n3) You will learn about systems, actually. I didnt think this was as important, but you will learn about the stack, the heap, code abstraction, ALUs, floating point numbers, one and twos complement, hardware, software, caches, CPUs, memory allocation, basic operating systems, system calls, kernels, and much more. These are all fundamental computer science concepts that I believe are essential for any good CS major. If you learn these once well, youll use them forever,",
                "So much. So, so much.",
                "I learned so much about computer systems and hardware.",
                "Surface-level understanding of some of the abstractions that the hardware and operating system provide to a system programmer. The most useful stuff in this class tells you more or less what goes on when you compile and run a C program on an x86 system, and this knowledge can help you make better decisions about your code. The rest of the course is trivia.",
                "I gained a deep understanding of hardware design and basic introductory systems programming. We learned about operating systems, hardware caching, compilers, assembly code, processes and more. It is amazing how much you can learn in this class.",
                "An understanding of how computers work. A better understanding of who I am as a man.",
                "I learned about computer systems and organization. This included topics in memory, caching, CPUs, OSs, and general architecture.",
                "Computer systems and organization, using office hours, time management",
                "I gained a really in-depth understanding of computers, from how they run instructions, to how programs are compiled. It was a really exciting deep-dive into how computers work that makes me much more excited to learn about more computer systems."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Strengths: lots of office hours, engaging content, awesome professor, relatively manageable timeline, interesting problem sets.\r\nWeaknesses: none?",
                "Strengths: Abhishek is really good, the assignments are all fair\r\nWeaknesses: it's a hard class. You know this already. Take 3-4 credits this semester, make sure all your other classes are easy, credit/D/fail or drop another class if you have to, and take care of your mental health during this.",
                "I LEARNED SO MUCH from this course. The last two projects are kind of really hard (the code base is massive), and sometimes you need to be a few lectures in in order to understand how to do the PSET.",
                "Strengths: Abhishek is a great professor. Weaknesses: Material is sometimes a bit difficult to comprehend.",
                "The lectures and conceptual components of this class are excellent. In terms of the problem sets, they were all over the place in terms of workload and style, and didn't always line up with what we were doing in class. This nature of the psets seemed to lend itself to office hours, and while they were strongly encouraged, I still found it difficult to go to them. Maybe a stronger incentive for this would be nice.",
                "This course has excellent infrastructure. The ULAs + office hours were very helpful for completing psets, and Abhishek is an excellent lecturer and professor. I enjoyed the way the psets were set up and how they helped us learn more about the content.",
                "I think one of the greatest strengths of the course is the fact that Abhishek is an incredibly prof and the content and psets really push you to develop an endurance for difficult material.",
                "There are plenty of office hours but I feel like it is easy to gain a dependency on them which made me feel unprepared for the final project.",
                "This course is doing too much, especially for a course that isn't optional for CS majors. I would cut the tex pset. Its purpose is to be a \"refresher\" on coding in C if 223 is rusty, but then its much harder than any 223 pset.",
                "Strengths: Abhishek and the teaching staff are approachable, brilliant, charming, dedicated, equitable, friendly, generous, helpful, inspiring, just, kind, lovable, methodical, nourishing, optimistic, patient, questioning, rigorous, sensible, tolerant, underrated, vital, welcoming, xenodochial, yogistic, and zesty.\r\n\r\nWeaknesses: Computer designers have made a lot of questionable design choices. You will learn about (and get tripped up on) about 99% of them.",
                "The lectures are amazing, the office hours are helpful. You get what you put into this course.",
                "Its a great course. Sometimes the lectures feel slightly disjointed from the psets, particularly in that the lectures are not too tricky to follow but then the psets are very hard. The walk throughs and optional lectures are good at bridging this gap.",
                "- a lot of work, but really rewarding",
                "The strengths are the professor and the organizations of the class was excellent. The class material tied in very well with the coding projects.\r\nWeaknesses: none",
                "The subject matter is taught very well by professor Bhattacharjee and in general is very interesting, and the course is structured to support the students as best as it can. That being said, this course has a very large workload. A homework assignment is given roughly every two weeks, and each one takes upwards of 10 hours (though I have heard of people finishing them much faster).",
                "Strengths: There is enough support whenever needed. The ULAs and TFs as well as the instructors are very responsive and willing to help. The hybrid format of the lectures (recorded + live + in-person) was also very helpful and allowed for much-needed flexibility. Jay's Friday lectures and problem set walkthrough sessions were useful in clarifying concepts or things regarding projects. Abhishek is also very good explaining concepts, and emphasizing key points.\r\n\r\nWeaknesses: There is often a disconnect between what is covered in the lectures and what we are asked to do in the problem sets. We normally discuss concepts and how things are supposed to work, but we never really looked into how they are implemented with code. Jay's lectures and some of the walkthroughs were very helpful in this regard, but I believe that it could have been improved by having small lab activities or a coding session/lecture with simple examples. It created a large amount of unnecessary stress, confusion and some sort of fear at the start of the problem sets especially (which collectively contribute to procrastinating from starting to work on the assignments).  For instance, it would have been helpful if we were introduced to WeensyOS and its components/available functionalities through simple examples/implementations before starting on project 5 (& things to that nature). Another weakness is not being able to know what private tests we missed were looking for. Some TFs are responsive at times in regards to explaining what a given private test was asking, but that is not always the case. After spending countless hours on implementing different features, it would be very helpful to know what we missed so that we can learn from our mistakes. By not having much idea about what the tests were looking for, I think we are missing out on key understandings.  Another weakness (not sure if it is because this semester has been shorter than normal semesters), but I think we went a bit too fast on some topics, which were significant in the different exams we had. I think spending more time on the topics, especially the ones close to the exams, would have been very useful.",
                "Very well organized, well taught",
                "The strengths were I learnt a lot about OS. Weaknesses being the biggest workload ever.",
                "Incredible professor who was passionate about the content and concerned about student well-being and performance. The psets were challenging but taught the relevant skills and concepts. I really appreciated the pset walkthroughs and exam preparation. Sometimes the lectures would go a bit overtime, so it was difficult to stay engaged with new material at the end of lecture because the content is already dense and challenging to understand. However, Professor Bhattacharjee is a great lecturer and gives detailed explanations.",
                "The course was taught well, but the assignments and exams were a bit too close together. For both exams, psets were due two days before and it was very hard balancing time to work on the psets vs studying for the exams. It may have been better if there was an offset in the timing of the pset due dates by a week.",
                "This course was well taught in general.",
                "CS 323 is a difficult class, but that's not a weakness of the course; it's just the nature of systems programming. There's a lot to learn in a short amount of time, and luckily, the projects and assignments are structured really well to facilitate learning quickly and making sure knowledge sticks. Every new topic builds upon past topics, and it's really a wonderful course; I learned so much despite its difficulty.",
                "I thought the lecture content was engaging the PSETs helped me improve my programming skills. I think though sometimes the work felt constant, but at the same time that is a big part of the course.",
                "There weren't many weaknesses with the course apart from a couple of mistakes/miscommunication within the specification document that could've been prevented. Otherwise, the strengths are the incredible professor, teaching staff, and ULAs working to make the course great.",
                "Strengths: this class went quite deep into many topics. It was both broad and thorough, and I went from knowing nothing about how a computer works to knowing quite a bit in several areas. Weaknesses: Abhishek often started lectures up to 15 minutes into the class period and then the content felt rushed.",
                "The course's only weakness is that the dmalloc and binary bomb pset was a bit too much to handle in a period of two weeks. The exams are perfectly reasonable and all of the PSETs are very well designed such that key concepts are reinforced through practice. The course is fast paced and the PSETs take much more time than you expect so start early.",
                "It is so much work! I stayed up so many nights,even when I tried to start problem sets early. Regardless, Abhishek really cares about the students and the material was so rewarding to learn. Perhaps the school could consider splitting it into two semesters though?",
                "Strengths: The course is very organized, there is a lot of communication between the course staff and the students, the instructor was enthusiastic, the instructor addressed a lot of the feedback we gave in a survey, the ULA's were good. \r\n\r\nWeaknesses: The lectures are good but I don't feel like they prepared me to tackle the challenges of the problem sets. The first exam was extremely hard and really crushed the small amount of confidence I had in systems programming up to that point. Getting help outside of class was difficult at times due to long ULA queues (I do want to mention that the instructor worked to fix this). I wish I received more feedback on my problem sets and knew where I made mistakes.",
                "Strengths - Professor Abhishek is the GOAT. He cares so much about the students and the course and the whole 323 team is really dedicated to helping you get through it. Lots of office hours, the ULA team is fantastic. \r\n\r\n\r\nWeaknesses - It's really time-consuming and hard.",
                "strengths: instructor, instructor, instructor (Abishek is a fantastic prof and explains everything in beautiful detail)\r\nweakness: not a weakness but its a ton of work",
                "Strengths: psets were well designed, ULAs were very helpful, and Abhishek is an caring and devoted professor who teaches well.\r\n\r\nWeaknesses: lectures are good, but I feel like we need to review fundamentals WAYYY more and do less fancy stuff because a couple smart people in the class ask questions that the rest of the class can't follow. Although I did well in the class, I was one of the many people in lecture who didn't really understand what the heck was going on, and I was joined by (anecdotally) what I would say was at least 75% of the class. You can't review logarithms before understanding exponents. Instead of going too in-depth and complex, make sure the fundamentals are really, really solid.\r\n\r\nPractical example: most people didn't understand what basic page table and page offset was, and then we started reviewing multiple level page tables and LDRP caching and all the rest.",
                "Content and it's presentation is engaging and interesting.",
                "This class was super well organized. Even though I would say workload wise it's like 3 classes in 1, it was structured so well that I always knew what was happening. If I was ever confused, I had a list of people I could email or talk to on Ed, and response time was always fast. Even though it was more work than 223 (took with Glenn), I would say I was overall less stressed (still very stressed though). I did have to work on this class nearly every single day in the semester, and somedays I would devote the entire day to the class. Office Hours was also very structured, and wait times usually weren't bad at all (even the day before PSETs were due). \r\n\r\nWeaknesses: If you don't plan to spend the bulk of your semester on this class, you will be forced to, so plan for it. If you come in knowing this, it will be a lot easier for you to do the work. Basically, it's good to come in a bit scared...",
                "There is a lot of material to cover but the professor explains each concept well. The problem sets were always fun to work through and definitely helped me integrate concepts from class. I appreciate the few late days we get for the psets, and I like that they are limited in a way that doesnt allow us to fall behind. The only things I didnt like was that there was a project due right before each exam, which made it difficult to focus on studying. Also, it was a little inconvenient for projects to be due at noon rather than midnight, because it often results in students staying up until noon. Overall it was a great course and Abishek distributes the grades across assignments nicely and wants you to succeed.",
                "Strengths: the project workload will force you to develop as a programmer and become more independent, which is great. The textbook (CSAPP) is amazing, and the questions answered in lecture are generally very illuminating. Overall Abhishek does a great job explaining the course content, even if the class can seem a bit rushed at times.\r\n\r\nWeaknesses: Way too much content for one semester, to the point of making the class borderline useless. Unless you're super motivated and have lots of free time, the amount of stuff you have to \"read on your own time\" and study for the exams is so large that cutting corners is the best option. And the thing is, you're not even penalized for cutting corners, because the exams are so outrageously curved that a 50% median score can be a B or A-. So what's the point? I mean the lectures sprint right through material with virtually no depth, the exams are curved to oblivion, and the projects are basically step-by-step rote implementations of a tiny subset of the mechanisms we learned in class. Overall the class is a whirlwind of information that you'll probably forget a week after the final, and you're left with just a vague impression of the most important concepts in systems programming sitting in your mind. It's cool if that was the goal, but the course could have been a whole lot less artificially stressful if that's the case. Instead of cramming everything into one semester to make the major easier to finish, this course should be an in-depth yearlong treatment of systems programming with actual standards and valuable outcomes.\r\n\r\nAlso one third of the second exam was on hardware cache concepts that were taught 48 hours before the exam. Like, we get it, the prof likes hardware and caches, but can we get a little balance please? And maybe some time to study?",
                "This was an amazing class and was very well taught by Abhishek. I think that the only downfall was that we were not able to work on the final project in office hours.",
                "Strengths: organization, communication, support, feedback, learning\r\nWeaknesses: material felt cut a bit short at end -- exam 2 focused a lot on cache which basically was introduced two days before",
                "The strengths are that the course has an extremely dedicated teaching staff. They understand that this is an intense class for students, so they are extremely responsive, helpful, and accommodating. It is also a really rewarding class.\r\n\r\nOne weakness is that the instructions for assignments are often confusing. The specs are long which would be fine if they were clear and concise, but they arent. The length of the spec does not correlate to its readability.",
                "I think the course as it is is set up very well in terms of support (through OHs and from the instructor) and how the content is layed out, but I genuinely think the CS department should seriously consider splitting 323 up into more than one course. I can see how this course alone poses a significant roadblock to anyone attempting the CS major in terms of the sheer amount of material to get through and size of deliverables, and having to sacrifice time / even ability to take other classes in one semester's schedule is an unfortunate effect. Getting through 323 is a feat itself, but for anyone that experiences a slip in the semester or becomes dejected from the workload--something I've seen in multiple classmates--the cost paid to finish the course can become unbearable. Although this course encourages valuable lessons in time management and problem solving, I think at least offering an alternative to taking this required course in one semester would be helpful for a large number of students pursuing the CS major.",
                "The course is difficult, but for good reason. All the sets match with what we are doing in class. Abhishek is very focused on getting constant feedback and working to improve the course to make it feel more manageable. The GAs and ULAs are all wonderful."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "[This class is hard but not as hard as most people will tell you it is.] If you as a CS major, then you have to take this course. If you can take it with Abhishek, definitely take it with Abhishek (best CS professor I have had at Yale and the only professor with whom I talked inside and outside of class). Systems programming is definitely not for everyone: there are a lot of small details that can make the psets take hours longer than they otherwise would. Through this class, I found a new area of interest in systems programming, and I am planning to explore it further in future CS classes here at Yale. You could be either of these people, and the only way you will know which you are is by taking the class.",
                "I highly recommend taking this course if you have any interest in systems programming. You will become a significantly better programmer by the end of the course, and you will learn so so much about computers and how they function. I'm a software person through and through, but learning all of the stuff in this course is so rewarding and satisfying.",
                "If you don't have to take it, don't.",
                "Yes. Even if you're not a CS major, understanding computer systems is interesting in general",
                "I would if it is a requirement. If not, do not take this class as it is extremely difficult.",
                "Unless it's for the major, no. If you are interested solely in systems, I'm sure there are more succinct and less work-heavy ways to go about learning these things.",
                "Absolutely.",
                "Yesyou become a better computer scientist and programmer, and learn better time management.",
                "Yes!",
                "Yes most definitely. Challenging and rewarding!",
                "Yes, it is a challenging but rewarding course",
                "I would recommend this course to any student.",
                "Yes, you learn a lot about yourself and about computer systems.",
                "No, the workload is far higher than almost any other course at Yale.",
                "- Yes I would!",
                "Only if you have to take it, which you probably do if youre reading this. Start the psets early. If you do that and attend each class, youll be fine. The professor genuinely was there to support us and the TFs were always willing to meet to discuss the projects. Its a tough class but the support is great too.",
                "I would recommend this course because it is required for majors but also because it you learn a lot. The course is valuable for Computer Science knowledge but also time management and project planning skills.",
                "Yes, please take this class with Abhishek.",
                "Yes, I would recommend this course to another student who is studying computer science. It teaches some important fundamentals that are essential to make progress in the sector.",
                "Very difficult but rewarding",
                "Yeah if youre a CS major",
                "Yes if they are majoring in cs. This class teaches a lot of key information that provides you with a better understanding of how computer systems work. If they are not majoring in cs, probably not because the workload was immense.",
                "I would. The class was very interesting, albeit fast paced.",
                "Yes, if you're even remotely interested in systems programming, this is a fantastic course. If you aren't confident in your programming ability, it'll be tough; but after CPSC 223, this is the next step, and it's a very good one. Obviously, it's required for CS majors, but it's not something you should dread; I loved the course, and it's given me an incredible foundation for my future programming projects. I look forward to seeing where the knowledge takes me.",
                "I would! It was very interesting.",
                "I would definitely recommend this course to another student. Conceptually, the course is not difficult (this is largely done by the brilliant teaching of Abhishek), but the workload is definitely immense. It is a really a test of time management skills more so than anything else.",
                "While I certainly learned a massive amount from this course and enjoyed the material, I wish it were designed in a way such that it would not have had to consume my semester to the extent that it did. Each of the five projects is very challenging and you can put in limitless hours writing and editing code and not see this work reflected in your project grade unless you begin to pass test cases in the autograder. The exams are designed to be a time crunch and test you beyond what most Yale exams expect of you. There are some optional lectures, held outside of class time, that are necessary to watch in order to succeed at a project or do well on a test. I understand that each of these methods aim to have the student put more time into the class, but they add up in a way that goes beyond a reasonable amount. I gained a vast knowledge of systems programming, but I wish that project code and comments were considered more in the grade, exams were a more typical length and all of the optional lecture content was presented during class periods.",
                "It is a major requirement, but I would highly recommend this course even to those who are simply fascinated with computer science. The workload is insane but you learn more in this class than any other CS class. Be sure to take it with Abhishek.",
                "Yes, though be prepared for the work. I think the workload may end up being different for different people depending on how quickly you can transform your thoughts into code. The class itself reveals a lot about how computers work though, and can help you make more involved programs in the future.",
                "No I would not recommend this course to another student. If you're a CS major you don't have a choice though. I think this class should either be broken up into two classes or it should count for more than 1 credit to justify the amount of work it takes outside of class.",
                "No unless you have to. Abishek pretends to care but he is actually a snake!",
                "This is a required course for CS majors. For non-cs majors, I would not really recommend this course for ~fun~ unless they have a genuine interest in what goes on under the hood of a computer. You really learn a lot about how computers work that isn't really covered in CPSC 201 and CPSC 223.",
                "you prolly have to take it, and you'll struggle and learn a ton",
                "Yes! Especially with this teaching staff!",
                "I would! Especially if its with Abishek. Even though the class was a lot of work, the content and projects were interesting and useful. I would recommend picking some light workload classes when taking 323, as you can expect to spend a lot of time on the problem sets.",
                "Simply because of the high workload, I would not recommend this course to anyone whose major does not require this class. That said, it is VERY well taught (especially if you take it with Abhishek) and the material is extremely interesting. The problem sets are actually quite interesting too and you get two weeks to do them, but be ready to attend 3 to 4 office hours for each assignment. The exams are really hard as well (the average for our first midterm was in the 40-50% range I believe) but it is all curved.  Overall, though, you will leave this class having a much deeper understanding of assembly language, operating systems, shells, and much more.  Oh and also, do NOT make the mistake of taking other hard classes along with this one like I did. Make sure that 323 is the focus of your entire semester.",
                "The structure of the class has many flaws, but the concepts are so fundamental and the time spent programming so valuable that it is impossible not to recommend this class to anyone interested in computer science or programming.",
                "Only if you need the course for your major. It's super difficult, but rewarding.",
                "Yes I would recommend this class to another student under Abhishek. He is a great professor and works very hard, often harder than his students.",
                "Yes. To have a good experience I think you need the right attitude. Plan your schedule for the semester around dedicating a lot of time to this class. It definitely is a lot of work, but you will learn a lot. You will have a much better understanding of computers and a sense of accomplishment for completing it. Just understand the time dedication required, and you will learn a lot and feel good having took it.",
                "I would recommend this course to people taking the cs major.",
                "Yes I would. But I would warn any student with time management issues and perhaps other problems (like stress management) to think carefully about how they will approach the coursework. It requires a lot of careful planning and attention. Its definitely possible, but you have to dedicate lots of thought to how you will manage the deliverables.",
                "This course is required for the CS major and generally thought of to be the hardest course at Yale--I think that's accurate, but I also would say it's very doable with the help of ULAs + TFs! Try your best to stay on top of deliverables and use the help provided, but also manage your expectations about time + other coursework (you will probably have to make sacrifices). If you don't have to take the class, be cautious of what you're getting yourself into in terms of workload. Otherwise, the material is pretty important for all facets of CS, and you'll come out a better programmer because of it.",
                "Yes. It is hard but you learn so much from it. At minimum you become a better programmer, but most likely you will actually understand a lot more of why the computer systems we use are the way they are."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 323 01 - SystemsProgramng&ComputerOrgzn"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9986961483955383,
                0.9989018440246582,
                0.9986886382102966,
                0.9983470439910889,
                0.9986433386802673,
                0.99883633852005,
                0.9987515211105347,
                0.9988019466400146,
                0.9860312938690186,
                0.9988400340080261,
                0.9988669157028198,
                0.9970406889915466,
                0.9985162615776062,
                0.9988879561424255,
                0.9987155199050903,
                0.9988922476768494,
                0.9770450592041016,
                0.9984790682792664,
                0.9985756874084473,
                0.9987168312072754,
                0.9988862872123718,
                0.9986845850944519,
                0.9989277720451355,
                0.9987146854400635,
                0.9987509250640869,
                0.998676598072052,
                0.9908344745635986,
                0.9984523057937622,
                0.9988025426864624,
                0.9986572265625,
                0.9987951517105103,
                0.9973846077919006,
                0.9987571239471436,
                0.9977578520774841,
                0.998878538608551,
                0.9987278580665588,
                0.9986199140548706,
                0.9979357719421387,
                0.9988871216773987
            ],
            "sentiment_counts": {
                "POSITIVE": 36,
                "NEGATIVE": 3
            },
            "sentiment_distribution": {
                "POSITIVE": 0.9230769230769231,
                "NEGATIVE": 0.07692307692307693
            },
            "sentiment_overall": [
                "POSITIVE",
                0.9230769230769231
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9988784193992615,
                0.9984702467918396,
                0.9987277388572693,
                0.9988106489181519,
                0.9914775490760803,
                0.9989126920700073,
                0.9989190101623535,
                0.9978190660476685,
                0.9994271993637085,
                0.9981232285499573,
                0.9987371563911438,
                0.9988516569137573,
                0.998878538608551,
                0.9989066123962402,
                0.9984285235404968,
                0.9988319277763367,
                0.9988534450531006,
                0.9983794689178467,
                0.9989091157913208,
                0.9974749684333801,
                0.9988476037979126,
                0.998935878276825,
                0.9986808896064758,
                0.9989099502563477,
                0.9987205862998962,
                0.9989132881164551,
                0.9988138675689697,
                0.9983161687850952,
                0.9988296627998352,
                0.998738706111908,
                0.9988186955451965,
                0.9988196492195129,
                0.9988884329795837,
                0.9989377856254578,
                0.9883427023887634,
                0.9989018440246582,
                0.9983939528465271,
                0.9988480806350708,
                0.9874476790428162,
                0.998868465423584
            ],
            "sentiment_counts": {
                "POSITIVE": 37,
                "NEGATIVE": 3
            },
            "sentiment_distribution": {
                "POSITIVE": 0.925,
                "NEGATIVE": 0.075
            },
            "sentiment_overall": [
                "POSITIVE",
                0.925
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9987629652023315,
                0.9989374279975891,
                0.9994934797286987,
                0.9979959726333618,
                0.999496340751648,
                0.9979277849197388,
                0.9985396862030029,
                0.9986881613731384,
                0.9982553124427795,
                0.9988728165626526,
                0.9989022016525269,
                0.9988658428192139,
                0.9987033605575562,
                0.9941598176956177,
                0.9986485838890076,
                0.9988528490066528,
                0.9989251494407654,
                0.9986061453819275,
                0.9988920092582703,
                0.9988277554512024,
                0.9780855178833008,
                0.9987778067588806,
                0.9982622265815735,
                0.9989364743232727,
                0.9985252022743225,
                0.9987887740135193,
                0.9986312985420227,
                0.9989299178123474,
                0.9987554550170898,
                0.9994516968727112,
                0.9993847608566284,
                0.9918965697288513,
                0.9987404942512512,
                0.9986680746078491,
                0.9980720281600952,
                0.9985394477844238,
                0.9989370703697205,
                0.998719334602356,
                0.9988892674446106,
                0.9989088773727417,
                0.9988523721694946,
                0.9948221445083618,
                0.9987655878067017,
                0.9988190531730652
            ],
            "sentiment_counts": {
                "POSITIVE": 37,
                "NEGATIVE": 7
            },
            "sentiment_distribution": {
                "POSITIVE": 0.8409090909090909,
                "NEGATIVE": 0.1590909090909091
            },
            "sentiment_overall": [
                "POSITIVE",
                0.8409090909090909
            ]
        },
        "final_label": "POSITIVE",
        "final_count": 110,
        "final_proportion": 0.8943089430894309,
        "final_counts": {
            "POSITIVE": 110,
            "NEGATIVE": 13
        },
        "final_distribution": {
            "POSITIVE": 0.8943089430894309,
            "NEGATIVE": 0.10569105691056911
        }
    }
}