{
    "crn_code": "17211",
    "season": "202303",
    "enrollment": {
        "enrolled": 102,
        "responses": 58,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                2,
                3,
                16,
                19,
                14
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                7,
                14,
                17,
                10,
                6
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                6,
                12,
                17,
                15,
                4
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                7,
                19,
                18,
                6,
                4
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                3,
                9,
                19,
                23
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                1,
                3,
                20,
                30
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "Basic C\/C++ programming, data structures including array lists, linked lists, BSTs, graphs, stacks, queues, heaps.",
                "More programming skills in C: learned a lot about different types of data structures, debugging code, working with larger projects, etc..",
                "Data structures, object-oriented programming, C and C++",
                "C\/C++, basic data structures and algorithms (strong focus on implementation)",
                "Design and implementation of various data structures - lists, trees, queues, etc. Analysis of computational problems using these data structures. More generally, how to think like a computer scientist.",
                "Data structures, C, C++",
                "I learned a lot about coding in C and C++, including memory management, a variety of data structures, the basics of algorithmic complexity and object oriented programming, how to debug, how to test code",
                "I gained newfound knowledge of data structures and C programming.",
                "Data structures such as stacks, queues, linked lists, heaps. Fundamental concepts of computer science and programming.",
                "I have learned about various data structures and programming techniques.",
                "- Gain comprehensive knowledge of various data structures, including arrays, linked lists, stacks, queues, trees, and graphs.\r\n- Learn the theoretical foundations of algorithmic complexity, including time and space complexity analysis associated with different data structures and algorithms.",
                "C Programming (focus on memory (de)allocation), Data Structures (Dynamic Arrays, Linked Lists, Stacks, Queues, Hashmaps, balancing BSTs, Heaps). Brief Ideas of OOP.",
                "Designing data structures, C, C++, gdb, valgrind, pointers.",
                "This course introduces you to two languages, C and C++, as well as how to implement searching and sorting algorithms and common data structures.",
                "Several types of data structures and their implementations. Also learned C and C++",
                "I learned how to code in C and C++. I also gained a solid understanding of important data structures and algorithms in computer science that will be useful as I pursue my career.",
                "Coding\/implementing data structures in C\/C++: resizing arrays, linked lists, hashmaps, stacks, queues, binary search trees, heaps.",
                "Data structures, C, C++, valgrind, as well as various programming paradigms.",
                "I learned valuable programming techniques and ways to come up with space and time efficient ways of designing programs.",
                "I learned about various data structure types and programming techniques in C and C++, as well as memory management and other topics.",
                "Pointers, memory allocation, C++, heap, queue, AVL trees, Red-Black trees",
                "I honestly struggled through this class and realized CS may not be for me. Despite the difficulty of the content, I really appreciated Ozan. I wish the psets were smaller and more interspersed to align with the class content.",
                "I learned a lot of valuable data structures through this class, skills wise I feel much more confident in being able to program longer-projects, I thought the psets were hard but very helpful in developing my programming skills.",
                "I learned how to program in C and C++, as well as data structure theory and basic algorithms!",
                "Data Structures and Algorithms, Better Programmer",
                "Data structures: heaps, AVL trees, RB trees, BST -- Languages: C++, C -- Skills: Memory management, Debugging, Hashing -- Ample Preparation for Technical Interviews",
                "I learned how to code in C and C++ as well as many foundational topics such as memory management, structs, trees, ie.",
                "I gained knowledge of c c++ valgrind gcc makefiles and data structures. We learned in class classes trees linked lists heaps memory management etc. I learned how how do think with creativity during my psets.",
                "Programming in C and C++; object-oriented programming; testing and debugging; data structures (arrays, structs, stacks, queues, linked lists, hash tables, heaps, graphs, trees - BST, AVL, RB); sorting and searching; memory allocation and management; data abstraction (templates, function pointers); asymptotic analysis of programs",
                "So much! I learned a lot about programming in C and C++ and about the many data structures common in programming today."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Weaknesses: \r\n- there are no unit tests for pset gives students a limited idea of what's being tested and what things students should test for\r\n- lack of transparency concerning grading and the final curve: left many credit\/d the class because they didn't want to take the gpa hit\r\n- lack of office hours and helpful responses from ULA only one TA rest are students, so when school get's busy they are busy and a lot don't have experience with our homework and thus can't help us\r\n- Expected for students to complete a Two part pset the first part was due the Sunday before and grades were given back the Wednesday after which left students only four\/five days to fix their original pset, create their own unit tests, and work on the second pset then refused to extend late days of over fall break where students who couldn't finish all these tasks had to continue working \r\n- psets were often littered with mistakes and sometimes the code from the lecture would be wrong as well",
                "Strength: the TA\/ULAs were very helpful. Weaknesses: lots of red flags for a CS class: no public tests; no pset grade gets dropped; lots of style requirements. The requirements for comments are absurd: I documented every function using _actual C++ library style_ and the feedback still said I didn't write comments appropriately. In the end there is no guideline for us to improve on either correctness or style.",
                "There were some logistical challenges since this class is still in a relatively new stage, but I think that in the second half of the class, everything was very smooth, so I think in future iterations, this class will be very good!",
                "Although the lectures can be a bit boring and confusing, Ozan is a great guy and will always offer help. At the moment, the class still feels very unorganized and it feels like there isn't enough support for how large the class is. Many of the psets also need some reworking, there were constantly bugs and edits made.",
                "weakness: pset schedule a bit disorganized at times, especially around october\/november with pset hookbook part a\/b\r\nstrengths: lectures and topic schedule are organized",
                "Excessive Difficulty:\r\n\r\nThe course is excessively difficult, with problem sets demanding an average of over 20 hours.\r\nLimited Support:\r\n\r\nOffice hours are insufficient, with long queues and little assistance provided.\r\nIsolation in Learning:\r\n\r\nStudents are discouraged from seeking help from peers, and there's a risk of being accused of cheating.\r\n\r\nLectures are perceived as a waste of time, making students prioritize completing problem sets over attending class.\r\nTime Management Challenges:\r\n\r\nThe expectation to finish a problem set within 24 hours of midterm and final exams adds unnecessary pressure and challenges to time management.\r\nUnanswered Discussions:\r\n\r\nThe ed discussion has numerous unanswered questions and comments, indicating a lack of support and guidance.\r\nLack of Transparency:\r\n\r\nThere's a lack of transparency regarding grading, averages, curves, and overall progress in the course.\r\nInaccessible Test Cases:\r\n\r\nStudents cannot see half of the material they are tested on, making it challenging to succeed in assessments.\r\nWeight of Problem Sets:\r\n\r\nEach problem set is worth 10% of the grade, and a mistake on one can significantly impact overall performance.\r\nManagement Issues:\r\n\r\nWhile the instructor is described as understanding, there are concerns about poor course management, contributing to a high drop rate.\r\nNegative Impact on Major Choice:\r\n\r\nThe course has led to a discouraging and demotivating experience, resulting in the decision to drop the major.",
                "strengths: Slides were provided for every class. Multiple midterm review sessions were provided. Sections to review material were held.\r\n\r\nWeaknesses: PSET grading could use some improvement. First off, all of the PSETs should have had a public test suite to test our implantations. It's nerve-wracking to have almost nothing to use to ascertain your code works to a certain degree.  The instructors did start providing these after PSET3. \r\n\r\nI also think that either one of two changes should be made in a potential PSET reform: the grading of Psets should be more lenient, or the lowest Pset score is dropped. One or two lines of missing\/wrong code shouldn't turn a PSET that would get a high grade into a 0. An reasonable argument can be made against it, which in that case drop the lowest PSET grade so those one or two lines result in someone having to potentially drop the class. They used to drop the lowest Pset score last semester but this one is different according to the professors",
                "Strengths: TFs and Ozan\r\nWeaknesses: Would be nice to have public test cases on Gradescope, I don't know if this functionality is possible?",
                "Strengths: very informative, helped significantly improve my coding skills, professor really cared about his students\r\nWeaknesses: scheduling of both midterms at the same time with difficult PSETs, large learning curve",
                "Strengths: Relatively easy exams, useful content\r\nCons: PSets take an extremely long time and are harshly graded for minor errors",
                "The course skips some fundamentals! We received basically no instruction on how to approach big programming assignments, how to debug efficiently, or how to actually write code (the classes were about the theory behind the code but didnt show much about writing the programs). I wish wed gotten more help with that!",
                "This course overall introduces students to data structures and C\/C++ programming. However, the course doesn't know what it wants to achieve, and I suppose that is due to the way Intro CS is structured at Yale. Since students are forced to spend a semester in 201 learning an obsolete programming language, this course has to teach students to code in C. This simply takes time away from the actual data structures part of the course, and the professors do their best with this deficiency. Learning C was by far the most difficult part, and it was very rushed, as it simply had to be. The ULA's were a godsend to help students fix their code. Also, the timing of the psets is very peculiar, and that is something that the staff of the course can fix. We are given a month to do two trivial psets. But the turnaround between much harder psets is only a week in some cases. This doesn't make much sense from a logistical and learning perspective. \r\n\r\nThe strength of the course is that even though we learn 2 programming languages, it does a good job of getting initial exposure in a short period, functioning a lot like a boot camp. And I personally enjoyed Professor Erat's way of explaining data structures. I just wished we had more time to go over more topics.",
                "Very long problem sets, 10-25 hours each, once every two weeks. Exams (only 2 midterms, no final) were very representative of the 7 problem sets. The class is hard, but (1) that's the point, as 323 is the next course in the CS track and (2) the TAs\/ULAs and professors were very, very helpful on EdStem and at office hours. A lot of people had bad experiences, but personally, if you are able to schedule yourself to get help when you need it (for a few hours for the 4ish hard problem sets there might be), you should be fine.",
                "I think the course content was well structured and definitely provided a really good foundation in data structures. \r\n\r\nI have heard that the course is also meant to help with interview preparation. I did not know that going into the course and even now do not think the course achieved that goal, if indeed it was one of the goals. The closest thing to interview prep the course featured was a few questions in a practice exam. I dont think that it is strictly necessary in any sense for CPSC223 to cover interview preparation but I think that if this is a desire of the course managers then the critical thinking thinking required in interviews should be dispersed throughout the class instead of a few questions being thrown in at the end of the semester.\r\n\r\nWhile the course content was well structured I did not find that the course schedule was well ordered. On two occasions we would have a midterm as well as a very difficult problem set within a few days of each other and this was not at all conducive to learning. On one such occasion, the instructors decided to lessen the penalty for late days as well as add extra points to those that submitted on time. I understand that they were reacting on the fly but the decision still seems rather unreasonable to me. Moreover, as far as I understand, there was absolutely no student input either.\r\n\r\nProblem set feedback also took a very long time to arrive and very often the problem sets did not have public tests which I feel like was detrimental to the learning process. I understand wanting students to be able to learn how to edge case and run their own tests but I think the problem sets were already of a high enough difficulty without that added work.",
                "Strengths: The course provides a comprehensive coverage of various data structures, ensuring a well-rounded understanding of the topic.\r\nWeakness: The unavailability of test cases for problem sets makes it hard for students when completing psets.",
                "Strengths: PSets align fairly closely with lecture material, so you get practice with both theory and implementation (except for the final part on graphs... we never implemented BFS, DFS, or Dijkstra, which would have been really helpful). Weaknesses: instruction was honestly not great. The slides were helpful, but in-person lectures were often confusing (code just not running or producing inaccurate outputs). Geeksforgeeks and youtube videos were needed to clarify ideas.",
                "Strengths\r\n- Ozan was very kind and interacted on a personal basis with a lot of students who came to lecture\r\n- most ULAs were helpful\r\n- no final so it was good to be done with the class before reading period\r\n\r\nweaknesses\r\n- terrible course organization. we had two of the most difficult psets due right before or right after the two midterms. I cannot emphasize this point enough. The organization of the midterms and the psets made this class so much worse than it should have been.\r\n- not enough ULAs\r\n- the jump in difficulty from the first pset to the second is insane. do NOT get fooled by the first pset being easy. you WILL spend at least 10-30 hours per pset unless you wrote compilers in high school and have extensive C background already.\r\n- there was a noticeable gap between the way Ozan wanted to teach the class and the way Alan wanted to teach, and that caused a LOT of pain for a lot of students",
                "I felt like the lectures were not very clear in their presentation of the content. Often times a simple concept would be introduced very abstractly in a way that lost us before we even learned what the concept was. I would recommend doing a little bit of your own research of the different concepts online to get a better understanding. The problem sets are pretty time consuming, but are also essential for internalizing how the language and data structures work. Overall, I think this class made me a much more conscious programmer.",
                "The timing could have been better between problem sets - if we could have done maybe 1 week each for the very easy starting problem sets, or 1 week for the first one and 2 weeks for the second one, there could've been better time for the really hard problems set that we got 1 week for - HookBook part B for my class. I also thought that there was one especially difficult topic - pointers and pointer arithmetic needed a lot more attention for the way they were tested on the first midterm.",
                "Overall the course felt poorly organized. The psets were generally very difficult, and the due dates for some of the psets were very poorly timed. Although the ULA's were very helpful, there were several times where it felt like there wasn't much support for the class. (Though this may be an issue outside of the professor's control)",
                "I feel that this course does a great job at exposing students to a variety of important topics. However, I sometimes felt that the pace of the class was fast, which sometimes made it hard to not fully understand some concepts.",
                "Strengths: data structures are really cool and interesting. Ozan is very funny, charismatic, and genuinely cares about our learning. Weaknesses: Lectures were quite dry and the course felt a bit disorganized: namely, the Psets were incredibly challenging because class didn't teach how to concretely implement the data structures we learned about in the way the Psets demanded i.e., I felt like I knew and understood the theory really well but at the end of the course, I still felt like I hadn't learned how to exactly code any of the data structures that we learned about. TA office hours were pretty terrible because of horrendously long queues. Unforgiving autograder on specific edge cases that we didn't know we had to take into consideration.",
                "Strengths: you learn a lot including C, C++, valgrind, various programming paradigms. Exams were fair. Assignments were mostly fair. \r\n\r\nWeaknesses: the class is still somewhat unorganized, and there were issues with live coding. There were a couple assignments that I found unreasonable (i.e. would take 4-5 times longer than any other assignment, suggesting a lack of consistency in assignment challenge). There were also a number of problems grading the assignments, and it took awhile for grades to be returned to us. \r\n\r\nI was often frustrated because the content we were learning was not super intellectually challenging, however the assignments still took dozens of hours (most of which was spent debugging, while only 15-20 minutes was spent doing the intellectually interesting thinking or program design).",
                "I think the strength of this course is that the problem sets are very strong and can help improve students' programming skills. However, I think the course needs to improve the instruction of the material by incorporating more worked examples to help students tackle the problem sets.",
                "The course is rigorous and gives a lot of content. Weaknesses include the professors not teaching topics clearly, a lack of assistance available for Psets.",
                "The course organization needs to be improved significantly. I absolutely hate this class. The assignments (except for Blotto) are very ambiguous, but when I asked on Ed, the professors mistook the ambiguity in his assignments as signals that the concept was challenging and thus refused to give clear answers or sometimes did not even answer my questions. The ULAs did not understand these ambiguities most of the time either. Plus the forever time these assignments took to be graded and that there were no public test cases, I did not have enough time to avoid repeating the same mistakes or even fix my Pirate 1 before embarking on Pirate 2. Moreover, the scheduling of the exams and assignment deadlines could be improved as well. Having a project due 2 days before\/after the midterm(s) is not a good idea. The lectures are sometimes helpful, though I end up learning everything from online resources.",
                "Ozan is really kind and understanding. He is a strength of the class, despite the mandated coursework that makes Data Structures so difficult. He's transparent about the difficulty of the course, and I appreciate him a lot. He tells good jokes in class too.",
                "The course is difficult and not friendly to new programmers, but that makes sense due to the prerequisites. On the other hand I would say the teaching (with Ozan) is excellent, and the amount of material covered is pretty incredible, along with the support for understanding said material.",
                "The lectures were quite boring. Although, I did find the materials interesting at times. There is a big jump from 201 which has a lot of public test cases to this class, in which there were virtually none. This created some unfortunate surprises for a lot of students, please give us a least basic test cases. And if you don't, try to give at least give a workshop on unit testing code. Even still, I found a lot of the psets fairly interesting and gave me a greater understanding of the material we covered in class.",
                "I think that Ozan especially made a really great effort to explain the importance of each topic and how it might come up in interviews. He was always enthusiastic and made you motivated to learn. I think that psets were all challenging, but I wish that there were more structured into check-ins (weekly, like HookBook A and B) since OH would get very crowded in the last days of a pset being due. I think that the tests that we were given for our psets were generally ok, although I think providing unit tests for every one of the psets is important. If there's an issue with one line of code in a function that you do not use, the private testing script may use it and you will receive minimal credit for the pset, instantly putting you at about an A-. I feel prepared for 323.",
                "Such intense homework assignments in which most of the class was averaging over 15 hours per week serves to deter students from studying computer science, not improve their skills. In addition, having homework assignments due very close to the midterms was incredibly stressful. I did enjoy how the class was structured and the content we were taught that translated well into the homework assignments.",
                "Office hour wait times were horrendous, but the ULAs were helpful when it came your time. I didn't know what quite to study for in terms of course material, the slides at times were cluttered.",
                "Strengths were interesting pset material and Ozan.\r\n\r\nWeaknesses were serious lack of support for students, very difficult psets (looking at you evil Hookbook), high level of cheating reports, office hours with 30+ students for 1 TA regularly, horrible scheduling with pset\/exam overlap, irrelevant lecture content.",
                "PSETs could be more clear, but overall engaging. Office hours too busy, but crucial to good understanding of course.",
                "The subject material is interesting and incredibly useful as a foundation if you want to do anything involving CS. Ozan's lectures were great, and he was understanding and receptive to feedback. I believe that both professors tried their best with regards to teaching and the assignments, but the class was still not that well organized, with a major assignment due right before the first midterm and with frequent issues relating to the autograder and starter code. I was also frustrated by the lack of public test cases for the earlier psets, which led to many students losing unnecessary points. The weekly discussion sections and exam review sessions led by Ben were great. The live Q&A doc during lecture is an excellent idea that other courses should implement too! Office hours were a mixed experience - some TAs were helpful whereas others were not, and I and my peers frequently had to wait 23+ hours before receiving help. I think students would get more out of the class if there were more shorter assignments rather than a few psets, which sometimes took 2530+ hours. EdDiscussion was definitely a strength of the course.",
                "I enjoyed the format of this course. I think the lectures were interesting and really well done, for example, our instructor would introduce the concept in a familiar way, describe it more in depth, and then show us an actual example. Im a very hands-on learner, so every example that I can see and especially do to be familiar with a concept really helps me. This leads to my suggestion to combat a potentially weakness. I would really appreciate more guided activities outside of huge formal psets to practice what weve learned in lecture maybe like smaller assignments\/problem sets that help you to complete the larger ones. It sometimes felt like I was just thrown into these huge summative problem sets with very little practice, and the only time to practice was through those graded problem sets. I realize this also probably isnt viable given how psets are mainly reused each year, but its also be helpful to see correct solutions to our pests to know other, potentially more efficient ways to correctly code.",
                "Strengths: Ben's weekly section and review sessions. Weaknesses: poorly organized course overall with no connection between lecture material and psets. chronically understaffed ULA office hours, autograders that never worked (several psets literally weren't graded until a couple days before final grades were due), and poor guidance on coding expectations and test cases. If you want to gain more coding experience with a reasonably well organized course look elsewhere, this is not the class.",
                "Strengths: instructors, creativity of problem sets, application of material, exam structure\r\nWeakness: flexibility of grading (would be nice to have a drop pset\/exam option)"
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "No \r\n- this course was soul crushing and made me reconsider being in the field as a whole \r\n- limited resources for black\/brown students \r\n- students who seemed to succeed in the course were freshman\/students with extensive cs backgrounds \r\n- the stress and anxiety this course causes isn't worth the risk \r\n- i feel like i learned, but not enough at the same time.",
                "You probably need this class anyway, so there is no negotiation. But if you do have a choice, consider whether you want to spend a semester doing nothing rewarding. I am already experienced with C\/C++ and data structures and I still often feel lost in class, not because the material is hard but just because it's confusing. The TA's material is much more useful than the lectures. You can probably learn the same amount of C\/C++ and data structures just by reading a good book in two months.",
                "Yes",
                "Yeah, but be prepared to be challenged",
                "As it was taught this year, I cant really recommend this course, but with each iteration I think it will get better and better. Ozan is awesome! Hes an excellent lecturer and approachable professor. However the structure of the course is still very much a work in progress. They did improve majorly throughout the semester, and eventually I think Ozan and Alan will make this a great class. ULAs are extremely hit or miss.",
                "This course is ridiculously difficult, with problem sets taking an average of over 20 hours. Get ready for this class to consume your life. Office hours have long queues with little help. You can't get help from your friends, and be prepared to be accused of cheating at least once. You are expected to know everything about data structures, and this course is not kind to people who started CPSC in college. If you went to an amazing high school with a great computer science department, you will do just fine. Lectures are somewhat a waste of time, and you're never going to want to go to them because you will be wanting to finish the pset for the week. Midterm and final are manageable, but you'll have to finish a pset within 24 hours of these exams, so plan accordingly if you can. The ed discussion has over 670 questions and comments that go unanswered. I think the worst part of the class is the lack of transparency. Want to know the average for the psets? You are out of luck. Want to know if there's a curve? No can do. Want to know if you have a passing grade? Sorry, no. There is no information whatsoever, and you really are left to fend for yourself. Oh, the kicker, you can't see half the things you are tested on, so have fun spending 30 hours on a pset just to get a literal 30 on it because you can't pass any of the test cases that the TAs don't even have access to. Each pset is also worth 10% of your grade, so be careful messing up on one because that can make or break your grade. There is very little room for a comeback in this class. I won't lie, Ozan is a sweet guy and super nice and understanding most times, but he poorly managed the class. There is no reason the class should have SUCH a low drop rate in a class that isn't considered to be a weed-out class. The class actually got me to DROP the major because of how frustrating and demotivating it is. Very discouraging class.",
                "Requirement for CS major. Everyone else only if they are familiar with another programming language.",
                "Yes, if engineering, S&DS, or computer science",
                "If passionate about and interested in CS. Workload is very high at times and PSETs can be very frustrating.",
                "If you're a CS major, have to. If not, only if you're really interested in CS and have time on your hands.",
                "The class is very very hard but you will find you have learned a great deal at the end. Its pretty much impossible to complete the assignments without understanding everything youre doing, so youll find that if you didnt get something before, you probably will once you turn it in. The later problem sets took me 30+ hours, the early ones 10-15. Your experience will be infinitely better if you start the psets when assigned, because youll be able to actually get help rather than waiting 3 hours at office hours before you get help. Take the course with Ozan if possible, he is the best!",
                "I would recommend the course to other students. I think these topics are important for people to know, and the skills you learn in the course will set you up with a solid foundation to continue into CS or other technical fields. Improvements could still be made to the course, but overall I think it is not as bad as many people make it out to be.",
                "Sure. Just be prepared to do some work. It's not a weed-out class, and it's not a gut. If you put the time in, you'll get a lot out of it.",
                "Yes, especially if you are in CS. You will learn concepts that are fundamental to the field and help you succeed in interviews. Take it with Ozan if you can! Ozan truly cares about his students, is funny, and sympathetic. He wants you to succeed and will always help out.",
                "I would as for what Ive heard the course is already much improved from last time. I think the instructors care a lot and I am sure that they will continue to improve the course.",
                "Yes, it introduces you to the world of data structures.",
                "Most ppl take it cuz it's required for a major or certificate so you don't really have a choice... but I don't think it's super helpful if you're not in that category. Even for people who just want to get better at LeetCode for SWE, you would probably be better off practicing yourself, because the skills do not carry over as effectively as you would expect. This course focuses more on the theory of data structures, not as much about their techniques and applications, so it's not super helpful for the purpose of interview preparation.",
                "Yes. You will learn a lot. The course itself is very frustrating, though.",
                "This is a very fundamental computer science course, so I would recommend it to anyone interested in computer science. Understanding the concepts may require some external research if they are new to you, but it is not bad because all of them are very basic and well known. Make sure to start the problem sets early because I found just getting started and understanding the assignment itself to be the most difficult part. The exams were very fair and the professors cared a lot about their students.",
                "Only if you need to take the course or find yourself needing to know data structures and coding in C\/C++",
                "Yes. This course is rigorous, but I felt that I came out of it with a much better understanding of useful data structures and programming techniques in computer science.",
                "Not really, unless you need it for the major. It's not really worth the sleepless nights since they made the class hard again unless you don't mind your GPA potentially tanking a bit. But let me just say... Blotto Pset will have you on your knees, only for AVL\/Red Black Trees to finish you off, once and for all...",
                "Students seem to be heavily opinionated about this course, but I thought it was totally fine. Could it have been a bit clearer and more organized? Could the problem sets have been more consistent? Could there have been clearer expectations on assignment testing? Yes to all. But does this class teach you the basis of data structures, C, and C++? Yes it does, and I would say it does a pretty reasonable job of it too. If you need to take a class on data structures, this is the only option. So best to just grin and bear it.",
                "This is an okay course if you are able to put a lot of time into it. It teaches some important topics but be prepared to learn much of the material outside of class.",
                "CS students have to take it either way. But, if you do not have to take it, DON'T! You can learn everything in a much more organized way from online resources and do not have to suffer through Alan.",
                "I would! I learned a lot and Ozan is an excellent teacher. In addition the communities that form in the wake of the psets are excellent.",
                "Yes both as a major requirement, or a course taken for interest, this class is a great introduction to C and C++, memory management, and important data structures. Ozan is a spectacular professor whose love for programming is contagious, and his positivity and enthusiasm make the class enjoyable and engaging. Ozan repeatedly tied content covered in the class to LeetCode topics, allowing us to also draw connections for technical interviews.\r\nI wouldn't pay too much attention to X",
                "If you have to take this class, fine. If not, there are better classes to improve your coding skills and basic foundational knowledge.",
                "Yes",
                "I am definitely a better coder after taking 223. Did it make me question my mental sanity? Absolutely. You're in for a rough ride no matter how successful you were at coding in the past. CS50 and 201 do little to prepare you, so keep in mind this course is very different and much newer (less developed) than its predecessors. Some of the psets are really cool, just not rigorously tested enough. The course regularly had major issues which somehow penalized the students. \r\n\r\nBottom line, this class is certainly a weed out, especially for women and racial minorities. The CS department needs to take a hard look at the effects of 223  if they want any success or diversity for the major.",
                "Yes, if you actually enjoying coding - the data structures weren't the major challenge for me, it was C.",
                "I would recommend this course since the content itself is well-organized and foundational for becoming a proficient programmer. I think this course will improve with each iteration since Alan & Ozan only started teaching it in Spring 2023, and there are definitely aspects of the assignments and grading that still need to be ironed out. Perhaps this is a theme of the CS department, but the environment around psets was often stressful, with even office hours itself being disorganized. You will get something out of the course (the caveat being that students in the course have a very wide variety of backgrounds in CS) but not as much as you could've gotten if it was better organized is my view.",
                "Yes! As challenging as it was, you truly learn a lot.",
                "Empathically no. I realize many students have no choice and must take this course, however for the rest I strongly strongly encourage you to avoid this course. You've been warned. I waited as long as I could to take this course, hoping the horror stories I heard from previous semesters would resolve with additional time for the professors to improve the course. I was wrong. Lectures were a total waste of time, and any meaningful learning came from Youtube. Office hours were poorly staffed and the variation in ULA quality and assistance received varied greatly. The workload expectations are just totally unreasonable, psets easily took 20-40 hours to complete, or more if you count the endless hours spent waiting in office hours to get your question answered. As the semester went on it became increasingly clear that many of the challenges and obstacles that stood in the way of succeeding were in fact intentional, and intended to make 223 more \"rigorous\" to allegedly prepare students for 323. They were features, not bugs. The course was frustrating and unfulfilling, I don't feel like I learned much, and really just glad to move on and never think about it again. If you have any choice whether to take this class or not, then avoid at all costs if possible.",
                "Yes!"
            ]
        }
    ],
    "extras": {
        "title": "CPSC 223 01 - DataStructres&ProgrmmngTechnqs"
    }
}