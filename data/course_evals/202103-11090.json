{
    "crn_code": "11090",
    "season": "202103",
    "enrollment": {
        "enrolled": 155,
        "responses": 123,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                3,
                26,
                34,
                33,
                10
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                15,
                29,
                48,
                11,
                3
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                9,
                24,
                38,
                30,
                5
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                7,
                39,
                37,
                19,
                5
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                9,
                30,
                51,
                17
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                4,
                27,
                52,
                24
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "I learned how to code in Racket. In particular, this course teaches a lot of recursion, which I think I improved dramatically in. This course also teaches Unix, but it only brushes the surface of Unix.",
                "Recursion",
                "Racket, recursion, functional programming, UNIX",
                "I honestly do not know what I learned from this course. I am struggling to come up with anything. We seemed to cover a lot of not-very-useful programming topics in an obscure language.",
                "I learned a lot in this course.  It's definitely more of a \"throw you in the deep end and try and swim\" course than a guiding one.  Computer systems, run times, and recursion were the main elements developed by the course.",
                "You will learn about recursion. You will learn about formal languages and state machines. You will learn about Von Neumann architecture. You might even get a deeper understanding of what it is to hate.",
                "You will become an expert in recursive programming, Racket (our beloved), basics of logic gates and circuitry, basics (and more) of UNIX, and a short field trip in to the world of linguistics and context-free grammars.",
                "I learned about Racket, UNIX, recursion, Turing machines, and more theoretical concepts for the foundations of computer science.",
                "Working knowledge of essential CS concepts--recursion, formal language theory, UNIX, binary, logic gates and circuits, computer architecture, etc. Also proficiency in Racket.",
                "This course really opens your eyes to just how wide-reaching the field of computer science is, that is the \"science-y\" aspect of computer science, not the programming. You learn UNIX and about Yale's Zoo Systemtwo things crucial to being successful in this department if you decide to major in CS. The PSETS were challenging but honestly pretty fun seeing as you essentially build entire systems from scratch per assignment. Racket, of course, is not ideal ... but functional programming is pretty neat. Take this class if you have a strong feeling that you want to major in CS or want to know a load more about what computer science is, otherwise, I would say the workload and depth of this course just isn't worth it.",
                "Racket language, recursion, deep recursion, computability, Turing Machines, boolean expressions, gates and circuits, computer architecture (TC-201, etc.), runtime",
                "Racket. Recursion. Gates/Circuits. Compilers. Strings/Languages.",
                "computer science theory; turing machines, tc-201, formal languages, racket",
                "Deep recursion which is the only useful thing\r\nThe other concepts were interesting like Turing machines etc. but arent super helpful or practical today",
                "Racket, a surface level over pew of some computer science concepts.",
                "Introduction to many topics in computer science: Recursion, Turing machines, Booleans/Circuits, Architecture/Assembly Language, Strings, and runtime",
                "How to program, especially recursively",
                "I became a better theoretical coder and better at recursion.",
                "I learned basic computer science concepts like Turing machines, boolean logic, DFAs/CFGs, assembly language, and runtime. It also teaches Racket.",
                "Covers introductory topics in computer science. For people who took AP Computer Science or have some sort of programming background, the first half of the semester, topics should be familiar, but the second half consisting of UNIX, Turing machines, von Neumann computers, and CFGs and DFAs, could be unfamiliar.",
                "Racket",
                "Racket, Recursion, Trees, Turing Machines, Toy Computer 201 (TC-201), Booleans, Natural Language Processing, Time Complexity",
                "I learned about functional programming languages, which I thought was interesting as a first-timer in the field.",
                "recursion & computer architecture",
                "We learned the basics of programming in Racket, with emphasis on recursion (we were not allowed to use for loops or while loops). We then covered computer science topics including Boolean functions, gates and circuits, computer architecture and machine language, strings and languages, and running time of programs.",
                "Learning to code in the functional code racket, RECURSION!, Turing Machines, a lot of knowledge on the background behind why and how a computer works",
                "I gained a broad understanding of many fundamental computer science concepts that I will explore in upper-level computer science courses.",
                "How to code in Racket and use lots of recursion.",
                "Racket and Recursion. That's it.",
                "I learned recursion, turning machines, languages, grammars, computer architecture",
                "Theory behind computer science, and a lot of Racket. Recursion, Turing machines, circuits, languages, running time, and unix basics.",
                "Programming in Racket, learning how to use recursion effectively, fundamental computer science topics such as Turing Machines, logic gates, Strings, and building programs in assembly language.",
                "I learned how to code in Racket",
                "Recursion",
                "This was my first cs class at Yale. You learn Racket which is pretty useless. You get really good at recursion as well. Definitely will develop some intuition for coding I think",
                "Recursion, computer architecture, languages and grammars, DFAs",
                "This covers the fundamentals of computer science - both practical and theoretical. This isn't a class where you learn how to code. You cover recursion, computability, turing machines, before moving on to topics like boolean expressions, regular expressions, CFGs/DFAs, compilers etc. You'll get a much deeper understanding of how computers work and be a better computer scientist.",
                "Learned about basics of several computer science concepts. Set us up for Data Structures.",
                "How to use the racket programming language",
                "I somewhat learned racket and recursion.",
                "RECURSION RECURSION RECURSION. Also, how to do well in a class without showing up to lecture.",
                "I honestly really enjoyed the content of this course. Coming into this class with little background, I feel like I have a much better understanding of the fundamentals of computer science.",
                "I learned how to code in Racket and how to write programming functions. We covered topics regarding computability, gates and circuits, computer architecture, strings and languages, and the runtime complexity of programs. There was also a significant UNIX portion.",
                "Learned a significant amount about computer architecture, binary, how computers work, state machines, turing, etc",
                "This course is all about recursion, boolean expressions, TC201 machines, machine & assembly language and strings/languages.",
                "programming",
                "I developed problem solving skills when it comes to computer science tasks and also learned about the concepts of recursion and tail recursion. I also learned about some basic computer design and structure.",
                "I learned how to code in racket, and I learned the basics behind turing machines and simple computers. I also learned a little about running time and efficiency of programs.",
                "Learned various topics in cs including recursion, turing machines, dfas, cfgs, tc201 (assemby code basics), and got a better feel for coding after only having taken cs50.",
                "Basics of computer science taught through Racket programs and problem sets. Also the basics of UNIX commands.",
                "Racket",
                "I learned the foundational tools necessary to learn any computer language.",
                "Racket, assembly, basic computing, turing machines, recursion",
                "Introduced to recursion in programming and deeper understanding of the workings of a computer.",
                "Learned Racket",
                "I learned the foundational concepts of computer science. I also learned recursion.",
                "I learned a lot of computer theory. How a computer works and recursion, specifically. The topics we covered gave me a good understanding of CS topics for the future.",
                "Working knowledge of racket, and and understanding of basic theoretical CS topics.",
                "I learned about recursion and how to code in Racket.",
                "idek bro",
                "Basic computer science.",
                "Learned how to code in racket, basics of turing machines, assembly, and languages",
                "Recursion, functional programming, and most interestingly the foundations of how computers work through boolean logic and assembly and machine code.",
                "We learned about recursion, UNIX, basics of computer architecture, turing machines, and a few other concepts in CS theory",
                "Recursion. Lots of recursion.",
                "It covered a breadth of topics in computer science. I think it helped the most with recursion.",
                "I learned many fundamental topics of computer science, such as recursion, Turing machines, circuits, gates, regular expressions, time complexity, and functional programming.",
                "Racket and recursion"
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "The strengths of this course:\r\n- Proficiency with recursion\r\n- The ULAs and office hours\r\n- There are good YouTube tutorials to help follow along with\r\n\r\nThe weaknesses of this course:\r\n- The lectures are unwatchable.\r\n- Racket is a useless language\r\n- It's difficult to self study as the textbook is unreadable and since Racket is so useless, there are few tutorials for Racket on the internet\r\n\r\nThis course could be greatly improved if the professor recognized that nobody in the class knows how to code in Racket at the start. Learning how Racket works is a major learning curve that makes the first few weeks of the semester extremely frustrating.",
                "Strengths: clear and expected problems on homeworks and exams.",
                "The course really was not engaging at all.",
                "The lectures were painful.  The information could have been condensed, and often times I failed to see the relevance to the coursework.  I was able to digest a week of lectures into an hour period through watching them at 2x speed at a later time. \r\nOffice hours are where I did a majority of my learning, however the availability and management of them was poor at times.  Office hours were either 20 kids managed by 3 TAs or 3 kids managed by 10 TAs.  The office hours in the later part of the course were meager, which is personally when I needed it most.  \r\nThe assignments and online materials are beneficial.  \r\nThe tests are beneficial but if there were online, I could guarantee I would do 50 points higher on each one given the connections my brain makes to typing as opposed to hand writing code.  To prepare for exams, I literally wrote out code and tested it.  This skill is not necessary to develop and tests should absolutely be moved to keyboard.  There are anti-cheat platforms that could be used so that students could not use outside sources  this is a CS class afterall.",
                "This course was overall quite an interesting experience. I would say the greatest strength of this course was the material that was taught, and the greatest weakness was the instruction. This course could be improved if Professor Slade removed his head from his own ass.",
                "Strengths: Course is required for CS Majors. Lectures are sometimes accompanied with live code demonstrations to explain how certain principles work. Assignments are released early with lots of lead time to get them done. Frequent office hours hosted by ULAs.\r\nWeaknesses: Lectures are dull. Professor tends to read off full-sentence notes from his website that you can read on your own time.",
                "The course was a little boring at times, but the problem sets were fun and helped reinforce the concepts taught during the lectures. However, the problem sets could be long and frustrating, so I think having more office hours / peer tutoring could be helpful.",
                "Weaknesses: Lectures were often boring, incorporated little student input and opportunities to engage, and were simply read directly from an HTML script that we already had access to and was being projected on the board.\r\nStrengths: The PSets are really fun and cool, and they're where pretty much all the learning in this course happens. Doing them was a pleasure and taught me so much. Tests are not that hard, are graded fairly, and actually assess your knowledge of the material quite well. Exactly how tests should be--learning focused! Prof. Slade is nice, quite funny, and often goes off on long digressions to tell stories about tangentially related things, which are always delightful. All course materials are easily accessible, and the course is very organized.",
                "Strengths : The PSETS are super well designed, TA's are really great. Slade is just a whole character. You come out knowing a lot more about CS than going in.\r\n\r\nWeaknesses : Slade is not the most engaging lecturer. At times, you feel as if you want to smash your computer into bits while taking this course. Bit of a disconnect between usefulness and informativeness. I really wish a different language was used to teach the course, something like Python where you can use it in real life.",
                "Strengths: learn recursion/deep recursion which is super useful, lots of ULAs and OH which are definitely needed for the hws, professor gives useful hints for hws during lecture, Weaknesses: you kind of need to learn the material on your own via the hws/reading the lecture notes, classes are not very helpful/are basically just what's in the lecture notes",
                "Strengths: people say learning Racket is useless but I disagree--it did not take too long to learn and was an interesting way to deal with important CS concepts; I don't think Racket should dissuade anyone from taking this class; problem sets were really good and solidified each concept nicely; they each took about 10-15 hours and got progressively harder; the assignments are doable on your own without too much additional help, though help is available in a variety of forms which eases stress; Slade's instruction is...useful at times and after awhile the purpose of the class begins to make more sense. Weaknesses: Slade and the lecture notes are dry and not very well presented; the concepts filtered through Slade click sometimes but mostly stay ambiguous, and his references and jokes often don't make sense in context or simply aren't amusing; the tests unnecessarily take up 60% of the grade despite the problem sets taking up as much time and energy as they did; the class should not meet three times a week, as it is often only 30 minutes of actually content and 20 minutes of classical music and dry jokes that aren't amusing; three times a week meeting is more of a nuisance and dissuading attendance.",
                "Strengths: Lecture notes were well organized. The section on assembly/compilers in which you build a program to simulate a small computer was interesting and provided a clear understanding of pointers. Weaknesses: A good portion of the course is used to learn Racket. I think 99% of the concepts could have been taught in a more straightforward way in another language.",
                "lecture is incredibly boring, but psets are cool",
                "Increase the weightage of the homeworks! \r\nIts a CS class, reduce the weightage given to handwritten coding problems in an exam setting and for gods sake stop testing people on weird Unix commands.",
                "I feel like we didnt go very in depth with the material. While we learned a lot of concepts, we didnt have an understanding of how they fit together or why those concepts are important.",
                "Better lectures",
                "Lectures are not as great but notes and problem sets were good.",
                "Office hours and ULAs were great. Lectures could have been structured a little bit better.",
                "Doing homework and reading detailed notes were suffice to acquire key knowledge. Lectures feel trivia, but this is expected given that its a big intro class.",
                "Strengths: The class is super well organized and offers a lot of support from ULAs. The content is decently useful and interesting. The psets are pretty cool and really allowed for me to better understand the topics being taught in lecture. Weaknesses: The lectures are pretty boring and the class is taught in Racket.",
                "Fun psets. If you are providing an online option, please make sure it works properly. Too many lectures were recorded improperly and made learning harder.",
                "Love-hate relationship with this class. LOVE the PSETs. The strength is the PSETs. Also the lecture notes are clutch. The PSETs force you to engage with the material and learn through practice. They are literally the best learning tool because I used them to learn the entire course's material and I skipped all the lectures. Rob Brunstad is a clear strength, his review sessions were where we learned the things we should have learned in lecture, and the office hours are great as well, should have more online office hours, easier for both parties. The weakness of this course was Professor Slade. There were just too many tangents and too little focus on working examples of core computer science concepts. He is too out-of-touch with what students need to know to succeed in his own course. I am glad I did not skip this course, even though everyone likes to hate on Ratchet and the course as a whole, because it forced me to solve a myriad of different flavors of problems and truly improved my problem-solving abilities. The problem-solving, logic-based environment that the PSETs and UNIX and exams created has probably more than doubled by logic and problem-solving abilities. Bro I would literally spend weekends on end working on the problem sets, especially when the deadlines were back to back. This is what happens when the teaching is not good but I guess it is helpful since material is retained better when I taught myself with the lecture notes.  I spend more time on this course than all the time I spend on the work from the rest of my five credits combined. I would rate it higher but I am just not satisfied with the teaching and how Rob Brunstad could have probably taught all of this course's material and half of 223's material too if he was the professor instead. Also in general, literally NO feedback on the PSETs and exams, like you just know he wants to reuse the PSET/exam questions for future years so he is too stingy to release the answers, which would help students reflect on how to improve. Like no.",
                "I think that having recorded lectures is extremely helpful as I can always reference them when I am working on the homework later on. However, I would prefer if rather than three 50 minute sections, I would prefer to have two 1 hour 15 minute long sections a week. Sometimes, I felt we barely started to talk about the topic of the day and the class would already be over.",
                "strengths: course website is easy to navigate, helpful that professor records lectures and posts them on Canvas, lecture notes are also very clear and easy to understand even if you have very little cs background, Rob is also very responsive to emails \r\n\r\nweaknesses: not enough TAs resulting in long wait during office hours",
                "Strengths: The lecture notes were very good, and I found it very helpful to have Ed Discussions open as well. I thought the topics were very interesting, and I liked the structure of learning basic programming techniques in the first weeks and then learning more of the theory in later weeks. It was also helpful that lectures were recorded and posted online.\r\n\r\nWeaknesses: Lectures sometimes felt a little slow, and while I liked the stories that Prof. Slade would sometimes tell at the beginning of class, they didn't feel very connected to the content (I liked the logic puzzles, though). Because working with others on homework wasn't allowed, I never really interacted with anyone else in the class. I would have enjoyed a group project or anything to foster more community among CS majors.",
                "The strength is that there are a good number of homeworks that help students understand the material and apply it, but its not structured like projects, but more so like a normal homework assignment. The course could be improved with more office hours, especially to accommodate times leading up to deadlines of homework assignments, and more reasonably spaced out deadlines.",
                "The course covered many fundamental computer science concepts but lacked an in-depth explanation of such concepts.",
                "The CS201 YouTube channel and office hours are how I learned the course's content. Lectures are usually just Professor Slade reading off of a single page on the website for 50 minutes.",
                "The strength would have to be Rob and the CS instructors on the CS queue. Literally saved me so many times. Also, the CS201 Youtube channel helped a lot. Weaknesses would probably be in lecture, you literally go to lecture and you learn almost nothing. It's so hard to try to understand the content and the professor does a poor job at motivating as well as teaching the concepts in class. In this class, you learn outside of lectures.",
                "Strengths: the YouTube videos, homework walkthroughs, online notes\r\nWeaknesses: Lectures dragged on (if you can watch recordings on 2x speed then do that), sometimes material was not taught but then we were expected to know it, the final was ridiculous- it took me the full 3.5 hours and I did not finish all of the problems. I was not struggling with the course at all but the final was awful",
                "The ULAs/TAs saved me in this course, homeworks are near impossible without their help. If more teaching happened during lectures (and not just reading from the notes), it would have provided a better foundation for us to start the homeworks with. The homeworks were integrated really well with the topics covered during lecture though, and actually coding the concepts helped general understanding of the topic. Homework help videos on Youtube are also immensely helpful.",
                "Strengths: you learn a lot just by doing the assignments\r\nWeaknesses: lectures are long and slow, workload is so much",
                "I think the psets were really helpful for the tests and lecture notes were well-organized. However, the lectures themselves could be improved. There were times when the lectures were off-tangent.",
                "Strengths were that several of the problem sets were pretty cool. Lecture was not very engaging at all.",
                "Weaknesses\r\n- Lecture material was not helpful to the course",
                "Strengths:\r\n- Notes and online resources - incredibly comprehensive, detailed and well-written. \r\n- Rob Brunstad - he led some incredible review sessions and is a much better teacher than Slade, creating his own powerpoints and resources for us to look at prior to any midterms/finals. \r\n\r\nWeaknesses:\r\n- Slade, Slade, Slade. Every weakness ties to Slade. His extortionately long tangents on classical music; the long, rambling dialogues on utter nonsense --- it was just awful.",
                "Lectures can be a little tedious to get through. There are cool stories but the content is hidden within. Assignments are interesting to work through.",
                "Great fundamental racket skills, difficulty of psets are very unpredictable",
                "There were numerous weaknesses in this course. The first weakness was the lectures. I am someone who never skips class, so I never missed any of the lectures. However, I gained almost nothing from each lecture. Prof. Slade droned on and on about anecdotes and barely covered what was covered on the PSETS. My classmates who did not go to lecture learned about the same amount as I did, and that was from the homeworks and the ULAs. \r\n\r\nThe second weakness was the PSETs and PSET due dates. There were weeks where we had two or three weeks to do a PSET, and there are weeks where we had 3 PSETS due in two weeks. This course could be organized better.\r\n\r\nThe third weakness was Racket. I still do not know why we learned a useless language. It is frustrating and will not help me in the future.\r\n\r\nThe only strengths of this course are the ULAs and Rob's review sessions. \r\n\r\nMy final thought about this course is that I should have slept in every morning instead of going to this course.",
                "Weakness: Stephen Slade. This man needs to up his game. I don't know if he's tenured or something, but the lectures were atrocious. There was quite literally zero reason to go to lecture in person when you could just read the lecture notes at a faster pace than Prof Slade read them at. Moreover, I know this class has been around for a long time, but in the name of all that is good and holy, STOP TEACHING RACKET. This might actually be the reason Yale CS is FAR behind its peers, and I don't want to hear the argument that other institutions like Brown and Northwestern teach it. We should strive to be the best, and right now, the best (MIT) would never in a million years teach their Intro to CS class in ancient language. Coding in Racket is literally like using Windows XP, netscape, and Aol. MIT teaches their intro CS class in python and its about time we do too. \r\nStrengths: Rob. Wonderfully helpful and nice guy, especially on ED.  Also, I think the content was good to learn as a base for CS, but again, it did not need to be taught in Racket.",
                "This course kind of feels like the department threw as many resources as possible into this class to account for the fact that Dr. Slade is honestly a horrible teacher. \r\nThe strengths were Rob, the course manager, who was excellent at explaining topics and organizing help, the ULA army who were invaluable, and the homeworks themselves. The homeworks were really well structured so they kind of guided you through the relevant topics. \r\nThe weaknesses were Dr. Slade, who bascially stood at the lectern, played some classical music, talked about his family/past for 15 minutes, and then literally read from his lecture NOTES (not even slides!!!) for the next 35. He also often went really in depth into topics with little explanation that then never came up again, so I always left feeling incredibly confused. You could do well in this class without going to a single lecture. \r\nAnother weakness was the fact that it's in racket--it feels like it could be easily translated to a much more relevant language, and Dr. Slade's reasons for teaching in racket were bullshit. Additionally, while learning UNIX is useful, I felt dropped into the deep end because it wasn't really part of the homeworks but always about ~10% of exams.",
                "The problem sets for this lecture were very well designed although coding in Racket is a pretty niche skill and does not feel like it will be particularly useful going into future computer science courses. The TA's were amazing though!",
                "I believe the course had too many exams. 1 midterm and 1 final would be more reasonable in my opinion, rather than the 2 midterms and final.",
                "Strengths: ULAS!!! The office hours were the best part of this class. The ULAs were so patient and helpful and helped me learn all of the main concepts of the course; RECORDED lectures; online lecture notes and CS201 website in general\r\n\r\nWeaknesses: It's such a large class, an improvement might be to make the class feel smaller by creating optional randomly-assigned study groups. This would help students feel more supported and build more of a CS201 community. One idea is to randomly assign students to small study groups at the beginning of the semester. Students could decide whether or not to participate, but at least they would know a few more familiar faces in the course.",
                "I, unfortunately, have a really bad learning experience in this course. The in-person lectures are not really helpful and I basically learn everything from youtube videos and google.",
                "The homework is challenging and fulfilling.  After completing each problem set, I felt as though I had gained a new skill/finally understood a new concept. I feel as though the exam formats could better follow the homework, and the lectures could be better paced.",
                "A strength of this course is the format of homework. The problem sets are nicely spaced and interesting and a good way of testing and learning.\r\nA weakness of this course are the lectures/classes. They are super slow paced and give little helpful information. Most relevant information can be gleaned through a quick pass over the notes.",
                "Stephen slade is a really funny guy and gives good lectures. The trivia of the day was always fun. Homeworks are entertaining puzzles that I actually looked forward to starting. The exams felt fair. \r\nOne weakness might be that I felt like I learned the material the most when I was doing the homeworks so I didnt gain as much from lecture but lecture was still important for giving an introduction to the new material.",
                "Strength: office hours, Rob, psets are well-designed for learning. Weaknesses: the professors lectures are useless and a complete waste of time",
                "Strengths: PSETs are fun to do. Material is interesting\r\nWeaknesses: Lecture can be unengaging.",
                "The course was academically rigorous in part because lectures were not helpful in reinforcing the material. I wish we spent more class time going over concepts instead of PSET-focused discussions.",
                "Strengths: Learn lots of interesting stuff, good support staff, good pacing\r\nWeaknesses: Lectures weren't very clear, wish information was more organized",
                "Very useful notes online. Spade does not teach very much in class. Goes on lots of tangents",
                "The psets are definitely the strength of this course. Lectures were definitely the weaknesses as I didn't find mysefl very engaged with the material being taught.",
                "Lecture is not engaging and not well delivered. TAs are a strength though.",
                "Problem sets were interesting and well made. There were a lot of resources to help students figure stuff out (especially the youtube channel--super helpful!).\r\n\r\nSometimes lecture was not that engaging because Prof Slade would just read us what the homework problems were.",
                "Strengths: Interesting topics\r\nWeaknesses: Lectures were not that helpful as all the professor did was read off the notes",
                "Strengths: Problem sets were extremely well designed, fun, and informative. Exams were fair and reflected what we had learned, though the final was extremely challenging. \r\nWeaknesses: We should not have had to learn Unix to the degree we did. Slade's lectures are quite dry.\r\n\r\nThe course could be improved by dropping a lot of the Unix stuff and talking more about computability and complexity.",
                "I thought the lecture notes were very well written and encapsulated everything we learned in the entire course.",
                "i learned a lot from the psets, pretty much nothing from lecture...the biggest weakness was professor slade, incredibly dull lecturer",
                "The course content is valuable and the content is well organized. However, lectures are not as useful as they could be. I found myself getting the most out of them when working on a specific PSET problem, but beyond that, I found myself independently reading lecture notes and figuring stuff on my own.",
                "Strengths: the problem sets tended to be interesting and the TC-201 was fascinating. Weaknesses: lectures are rarely useful with maybe 20% being related to the content of the course.",
                "The course utilized a recursive language known as Racket - which from my lens felt quite outdated. I understand that at such an early level, the language learned isn't all that important, however I feel I didn't take away too much from this class (coming from a strong CS background already). That being said, I do think there is a sizable amount to learn for those with less programming experience. Lectures themselves were quite monotonous - would be nice to see them be more engaging in the future.",
                "Smaller psets due more often; evenly spaced",
                "I liked the use of the Ed Discussion for answering class questions. I liked the midterm/final review sessions and powerpoints as well. The psets were challenging but I wish the deadlines were more evenly spaced out- I felt like sometimes they were due two weeks apart and sometimes they were due four days apart. I was not a huge fan of using Racket in this course as I don't think I will ever use it again.",
                "Strengths:\r\n- Teaches a lot of things\r\n- Lots of resources\r\n- Website is organized\r\nWeaknesses:\r\n- Teaches a lot of things in a short period of time\r\n- Easy to fall behind",
                "I think I learned a lot of content, but most of the learning was through the psets and not the lectures. I found the lectures more tangential than helpful.",
                "The classes were recorded which was nice but the lectures could be very boring at times and racket felt incredibly unnecessary to learn and office hours were lacking at points"
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "I would only recommend this course to other students if they are interested in the computer science major, as this is one of the prerequisites. There's no point in taking this class beyond the prereq.",
                "If you are interested in learning some of the basic principles of computer science, then definitely take this course.",
                "yes. required if you're a cs major and don't have enough experience programming",
                "Yes. The student would certainly have to have a strong foundation in computer science.",
                "Let me preface this by saying that I did fairly well in this course. There is definitely a correlation between how well students do in a course and how positive their feedback is. So take it from me, this course sucks. Fuck this course. Even in the hellhole that is Yale stem, I could not find a course taught with less empathy. The frustrating thing is that the concepts you learn in this course are actually quite interesting, and the class material is a pretty good introductory survey of computer science. Unfortunately, its taught in the most ass-backwards, fucked up, godawful way. A prehistoric bog mummy could have taught this class better. The lectures are worse than useless and you will have to learn it entirely on your own. Additionally, the psets contain about 15% useful learning material and 85% stupid waste of time racket plumbing. For example, when we were learning about boolean algebra and circuits, instead of learning about useful things like de morgan's laws, k-maps, or transistor diagrams, the pset was literally 10 hours of coding in the behavior of the gates from scratch in racket. Why? Why?????? Who even finds that helpful?? I knew this stuff already and I swear to god I lost 10 IQ points bashing my head onto my keyboard. And don't even get me started on the tests. I literally aced one of them, and I still left that room angry. knowing the material isn't enough, you have to watch your back because he will try to get you on stupid technicalities that are in no way relevant to the concepts you are being tested on. Take this course, and by take I mean take it to fucking Mauna Kea and throw it in the lava.",
                "You have to take this as a CS Major, but for non-majors I might recommend CS100 (50) instead.",
                "Only if you plan on majoring in computer science, since it's a requirement for the major to take this class.",
                "Yes--learning to code and the basic concepts of CS teaches you to think in new ways that are easily applicable outside of the realm of computers and programming. Fun class, not much work.",
                "Yes, but only if you want to major in CS or have a strong desire to learn CS (aka there are better QR credits out there). This isn't really an \"intro\" course to CS, I'd recommend having some prior programming knowledge if you want to succeed. The learning curve is quite strong, but once you get it, you get it. \r\n\r\nJust ask for help, be engaged with the PSETS (they are pretty cool), and try to keep up with lectures. Do this, and you will be well on your way.",
                "It is required for the CS major so yes, also it teaches recursion/deep recursion which is very useful, but racket is very obsolete as a language",
                "Yes. It must be taken for CS major or certificate but it is more generally a good programming class where you program while learning useful and more broad CS topics. Learning Turing machines, boolean expressions, grammars, and TC-201 was insightful, even if filtered through Slade's instruction.",
                "if you're a CS major yea. otherwise might be boring and tedious at times. join the order of the lambda my children",
                "Not unless you have to take it for the major.",
                "The material covered is genuinely interesting, but it never feels like you understand why it matters. Really a good class for getting an overview of theoretical CS but if you want to learn to program take something else.",
                "yes, this is a required course for computer science majors",
                "good introduction to computer science",
                "Yes, if you are interested in computer science beyond just learning how to program",
                "No. Its a fun course but the skills you learned arent really applicable in modern world of CS.",
                "Yes, I do think it's a worthwhile course. If you are thinking about skipping to 223 and have a lot of cs experience already, I would say that this class does have some legitimate value and you should think about why you are skipping it. The class doesn't teach you how to be a good programmer, but it does teach you basic computer science fundamentals that help you better understand how computers work and some of the basic theories behind them.  Additionally, the psets are kind of fun and it's a nice introduction to CS at Yale.\r\n\r\nIf you are taking this course for fun or to learn how to code (and don't plan on majoring in cs), don't. There are better courses for that.",
                "Decent intro",
                "Love-hate relationship with this class. LOVE the PSETs. The strength is the PSETs. Also the lecture notes are clutch. The PSETs force you to engage with the material and learn through practice. They are literally the best learning tool because I used them to learn the entire course's material and I skipped all the lectures. Rob Brunstad is a clear strength, his review sessions were where we learned the things we should have learned in lecture, and the office hours are great as well, should have more online office hours, easier for both parties. The weakness of this course was Professor Slade. There were just too many tangents and too little focus on working examples of core computer science concepts. He is too out-of-touch with what students need to know to succeed in his own course. I am glad I did not skip this course, even though everyone likes to hate on Ratchet and the course as a whole, because it forced me to solve a myriad of different flavors of problems and truly improved my problem-solving abilities. The problem-solving, logic-based environment that the PSETs and UNIX and exams created has probably more than doubled by logic and problem-solving abilities. Bro I would literally spend weekends on end working on the problem sets, especially when the deadlines were back to back. This is what happens when the teaching is not good but I guess it is helpful since material is retained better when I taught myself with the lecture notes.  I spend more time on this course than all the time I spend on the work from the rest of my five credits combined. I would rate it higher but I am just not satisfied with the teaching and how Rob Brunstad could have probably taught all of this course's material and half of 223's material too if he was the professor instead.",
                "I would recommend it if the student is going to major in CS. For students who are interested but don't want to major, I think CS 112 would be better.",
                "Yes if they are willing to put in the hours to learn Racket. The learning curve is pretty steep in the beginning, but it gets better over time. Doesn't really matter if student has coding background or not because a lot of the concepts covered in the class don't require prior programming experience or knowledge.",
                "I would definitely recommend this course. I came in with a fair amount of computer science experience, so I already knew the basics of programming. However, this course pretty quickly moved from programming techniques into slightly more fundamental computer science topics, such as Booleans, gates, machine language, etc. I didn't know much about those, so I found it really interesting to learn about. The homeworks were broken into lots of small, manageable parts, so they felt more like logic challenges than work. I actually found myself enjoying the homework and eagerly checking the website to see when the next one would be posted.",
                "Its a prerequisite for the CS (and other joint majors), but still, I think that it was a great experience for me. I liked Racket, I liked the concepts we were taught, and I genuinely think that the things that I'm doing are somewhat useful.",
                "I would recommend the course. Although many of the topics were not covered very well, the broad spectrum of computer science fundamentals taught is something all computer science major should learn.",
                "Nope, wouldn't take it voluntarily. But it's a requirement for CS majors.",
                "Voluntarily I would not recommend this course. If you are not a CS major that has to take this class because it is a requirement, then I strongly urge you not to take this course. Not a fun time this course.",
                "If you are a CS major you have to take it. It isn't the worst class to get through and some of the topics are really fun. The psets are also usually not too bad and relatively fun",
                "Only if you need it for some requirement or want to major in CS.",
                "This course taught me a lot, but it was an incredibly high workload. If you dont need this class for a grade but still want to take it, take it Credit/D. Just be aware that even if you Credit/D this class, you will need to put in a lot of work to achieve the grade you need.",
                "Yes I would recommend to anyone looking to study cs. If you are comfortable at all though I would consider skipping straight to 223.",
                "Yes, as a prereq to the CS major, it is helpful",
                "This course is incredibly well-designed, with great notes and resources. Psets were honestly quite fun (roughly 50% public test and 50% private tests?), though, as you are probably aware, we use Racket. Racket has no use outside of this class, but it isn't a difficult language. It's recursive-heavy (for loops were only introduced a year or two back), and so serves as the perfect language for this class - and so I get the choice.\r\n\r\nIn any case, this course would be great IF Slade was not teaching it. Slade just reads off Dana's notes (who left in 2014, I'll add), with some stories and dry humour to fill the time between. Slade is a reader, not a lecturer. Most students don't go to lectures, instead opting to read notes, watch recorded lectures on 2x speed and abuse the (very helpful and accessible) ULAs. \r\n\r\nYou only really should take this class if you want a solid understanding of recursion and computer science (emphasis on the science) - this course covers Turing Machines, CFGs, functional programming etc. If you're confident with that stuff, skip to 223, if not, take 201. Don't take 201 if you don't want to major in CS, there's no reason to.",
                "Yes. It is a good intro to further computer science. Some resources are different to access.",
                "If youre a CS major you need to unfortunately",
                "I would never recommend this course to another student. If you can, skip to 223. However, if you are a CS major and cannot skip to 223, then you must take this course.",
                "Only if you plan on doing the major.",
                "I would only recommend this if they had a deep interest in CS and knew how much time it would be going into it.",
                "Would recommend this course if you want to major in CS or do the certificate, but for those who want some computer science experience without going through the whole track, there are probably better and more useful languages to learn than Racket.",
                "I would recommend this course to a student interested in exploring computer science or computer architecture.",
                "I would if they are considering being a CS major and have some programming experience",
                "No, unless you are a CS major student who have to take this course",
                "Yes, it's required, but I also think if you put in effort and really challenge yourself in the course, you will learn some interesting and useful concepts.",
                "Yes, I thought the material was interesting and I learned a lot.",
                "Yes, this course is great for someone starting out in cs. This class is an engaging way to learn important concepts and by the end, you will feel that you have a strong base.",
                "Only if you are a CS Major.",
                "I would recommend this class only to students for which it is required. Otherwise, the programming language used is not super known nor applicable to any programming language you would use on a job.",
                "Yeah. It's required. It's also a good primer on CS.",
                "Only if you are a CS major.",
                "I'd recommend this to anyone looking for the CS major so they can satisfy the major requirements.",
                "Only if they had to take it for the major.",
                "I would recommend this course to someone interested in the concepts underlying compiter sciemce, or who hopes to study it more.\r\n\r\nI would not recommend this to someone who is hoping to learn a coding language useful for employment/pick up some basic coding skills.",
                "If needed for your major yes. If youre taking it for fun cs class to show you a wide range of real world applications then no.",
                "Definitely, if they want to know about CS as a discipline and not just how to code.",
                "I would if they are interested in majoring in computer science as it is a fundamental course and a requirement.",
                "not unless you really need it, it's just not practical",
                "Only if you need it for the CPSC major. The course is a big-time investment and not always the easiest.",
                "If you have a strong understanding of recursion and the basics of some core concepts like memory allocation, turing machines, and assembly, you should most likely skip this course. I felt it wasn't worth the time. Otherwise, the course does a good job at implementing some underlying basics of computer science and teaches you linux along the way. There was more learning done in Psets than in lectures and I occasionally found them fun.",
                "I would recommend the course to students interested in the CS major as well as those who are interested in the concept of computing. For those looking for a programming course, CS201 is not quite that.",
                "To someone coming from a strong CS background (multiple years of prior programming experience), NO.\r\nTo someone who has only done AP CSA or equivalent or who has only dabbled with it at a surface level, YES.",
                "I would not recommend this course to another student unless they have a decent background in programming and intend to major in computer science. Do not take if you are merely looking for a QR credit or want an introduction to computer science- this is not the class for that.",
                "Only if you are taking it for the major.",
                "Yes, I would recommend it because you learn a lot. However, lectures could be improved.",
                "only take this course if you have to take this course"
            ]
        }
    ],
    "extras": {
        "title": "CPSC 201 01 - Intro to Computer Science"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9986177682876587,
                0.9968650937080383,
                0.9943869113922119,
                0.9995017051696777,
                0.9976251721382141,
                0.9986217021942139,
                0.9988182187080383,
                0.9987356066703796,
                0.9986650943756104,
                0.9971854090690613,
                0.9970546960830688,
                0.9859774112701416,
                0.9873417019844055,
                0.9980964064598083,
                0.9955162405967712,
                0.9980311989784241,
                0.9899815917015076,
                0.99854975938797,
                0.9986171722412109,
                0.9977396726608276,
                0.9967514276504517,
                0.9659174084663391,
                0.9983398914337158,
                0.990385890007019,
                0.9986386895179749,
                0.9987311959266663,
                0.9988547563552856,
                0.9975676536560059,
                0.9956467747688293,
                0.9984672665596008,
                0.9979403614997864,
                0.9987824559211731,
                0.9979933500289917,
                0.9968650937080383,
                0.9973964691162109,
                0.9899466633796692,
                0.9988994598388672,
                0.9984752535820007,
                0.943732738494873,
                0.9916521906852722,
                0.9935706853866577,
                0.9988995790481567,
                0.9987266659736633,
                0.9987471103668213,
                0.9984784722328186,
                0.9610385894775391,
                0.9987214207649231,
                0.996751070022583,
                0.9988226294517517,
                0.9983208775520325,
                0.9967514276504517,
                0.9988574981689453,
                0.9910287857055664,
                0.9988813996315002,
                0.9911543130874634,
                0.9987327456474304,
                0.9988646507263184,
                0.9985744953155518,
                0.9986220598220825,
                0.985584557056427,
                0.9873629808425903,
                0.9987069368362427,
                0.9984890222549438,
                0.9985734224319458,
                0.9950236082077026,
                0.9988629817962646,
                0.9987311959266663,
                0.9937626719474792
            ],
            "sentiment_counts": {
                "POSITIVE": 56,
                "NEGATIVE": 12
            },
            "sentiment_distribution": {
                "POSITIVE": 0.8235294117647058,
                "NEGATIVE": 0.17647058823529413
            },
            "sentiment_overall": [
                "POSITIVE",
                0.8235294117647058
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE"
            ],
            "sentiment_scores": [
                0.9992759823799133,
                0.9971633553504944,
                0.99950110912323,
                0.983230710029602,
                0.9978216886520386,
                0.9891160130500793,
                0.9987661838531494,
                0.998830258846283,
                0.9987249970436096,
                0.9950476884841919,
                0.9977315068244934,
                0.9975643157958984,
                0.999208390712738,
                0.9920682907104492,
                0.9994843006134033,
                0.9981774091720581,
                0.995198667049408,
                0.9986094236373901,
                0.9985918402671814,
                0.99784255027771,
                0.9976077079772949,
                0.9930803179740906,
                0.9938675761222839,
                0.9988813996315002,
                0.9988603591918945,
                0.997452437877655,
                0.9988577365875244,
                0.9990979433059692,
                0.9827330112457275,
                0.9994776844978333,
                0.9988675117492676,
                0.998316764831543,
                0.9988011121749878,
                0.9995014667510986,
                0.999163031578064,
                0.9966379404067993,
                0.9988113641738892,
                0.9982929825782776,
                0.9995121955871582,
                0.9992303848266602,
                0.9995036125183105,
                0.9986710548400879,
                0.9994619488716125,
                0.9988985061645508,
                0.9995052814483643,
                0.9988489151000977,
                0.9971305727958679,
                0.9988818764686584,
                0.9910497665405273,
                0.9979096055030823,
                0.9754393696784973,
                0.9988353848457336,
                0.9930076599121094,
                0.997118353843689,
                0.9994354844093323,
                0.9986477494239807,
                0.9988993406295776,
                0.9987533092498779,
                0.9989206790924072,
                0.9994801878929138,
                0.9955428242683411,
                0.9890027046203613,
                0.9978364109992981,
                0.998786985874176,
                0.9967554211616516,
                0.9985016584396362,
                0.9994136095046997,
                0.9994794726371765
            ],
            "sentiment_counts": {
                "NEGATIVE": 27,
                "POSITIVE": 41
            },
            "sentiment_distribution": {
                "NEGATIVE": 0.39705882352941174,
                "POSITIVE": 0.6029411764705882
            },
            "sentiment_overall": [
                "POSITIVE",
                0.6029411764705882
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "NEGATIVE"
            ],
            "sentiment_scores": [
                0.9994820952415466,
                0.9988389611244202,
                0.9886291027069092,
                0.9910778999328613,
                0.9995101690292358,
                0.9976771473884583,
                0.9910043478012085,
                0.9988930821418762,
                0.998759388923645,
                0.9983490705490112,
                0.9988260865211487,
                0.9843438863754272,
                0.9949447512626648,
                0.9944825172424316,
                0.9979378581047058,
                0.9987447261810303,
                0.9980615973472595,
                0.9993126392364502,
                0.980205237865448,
                0.9974269270896912,
                0.9983567595481873,
                0.9972531199455261,
                0.9986730813980103,
                0.9989110231399536,
                0.9989109039306641,
                0.9989187717437744,
                0.9979696869850159,
                0.9995046854019165,
                0.9981576800346375,
                0.9756490588188171,
                0.9875406622886658,
                0.9975971579551697,
                0.9964116215705872,
                0.9817204475402832,
                0.9987829327583313,
                0.9941985607147217,
                0.99937903881073,
                0.9490818381309509,
                0.9984846711158752,
                0.9843240976333618,
                0.9988504648208618,
                0.9918863773345947,
                0.9986322522163391,
                0.9989027976989746,
                0.9987918734550476,
                0.9989232420921326,
                0.9706292748451233,
                0.9980308413505554,
                0.998777449131012,
                0.7300329208374023,
                0.998849630355835,
                0.9918475151062012,
                0.9869104027748108,
                0.997634768486023,
                0.9979788661003113,
                0.9962052702903748,
                0.9994813799858093,
                0.969848096370697,
                0.9931349754333496,
                0.9988493919372559,
                0.99539715051651,
                0.9995002746582031,
                0.9922806620597839,
                0.9988481998443604,
                0.9984713196754456
            ],
            "sentiment_counts": {
                "NEGATIVE": 28,
                "POSITIVE": 37
            },
            "sentiment_distribution": {
                "NEGATIVE": 0.4307692307692308,
                "POSITIVE": 0.5692307692307692
            },
            "sentiment_overall": [
                "POSITIVE",
                0.5692307692307692
            ]
        },
        "final_label": "POSITIVE",
        "final_count": 134,
        "final_proportion": 0.6666666666666666,
        "final_counts": {
            "POSITIVE": 134,
            "NEGATIVE": 67
        },
        "final_distribution": {
            "POSITIVE": 0.6666666666666666,
            "NEGATIVE": 0.3333333333333333
        }
    }
}