{
    "crn_code": "20813",
    "season": "202301",
    "enrollment": {
        "enrolled": 54,
        "responses": 46,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                3,
                3,
                18,
                14,
                0
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                3,
                6,
                15,
                10,
                3
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                2,
                3,
                9,
                21,
                2
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                2,
                4,
                13,
                16,
                2
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                1,
                5,
                19,
                9,
                3
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                1,
                2,
                23,
                9,
                2
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "OOP",
                "Object-oriented programming in python, miscellaneous Python functionality, basic C++, design patterns.",
                "Principles of object oriented programming in Python and comparison with some other languages",
                "You learn about OOP design and principles. You get a lot of practice with OOP and also learn about very relevant tools applicable to SWE (git, code smells, etc.)",
                "I learned about the fundamentals of object oriented programming in Python and a little bit of C++.",
                "Object oriented programming theory, Python, logging, tkinter, databases, testing, C++, design patterns, git, concurrency and refactoring",
                "The first half of this course covers basic object oriented programming concepts and the Python programming language. In the second half, you get a quick introduction to C++ followed by a tour of many different coding design patterns.",
                "Object-oriented design and industry-related skills.",
                "Learned OOP, design patterns, UML diagramming. Honestly the biggest takeaways from this course were practicing code modularity and testing code, along with refining Python skills. If you're in CS, take this course! Very practical and helpful for real world.",
                "I learned the core fundamentals of object-oriented programming as well as important concepts for writing maintainable code. On the OOP side, this class covers the fundamentals of OOP using Python and C++, and a number of design patterns. We also discussed testing, GUIs, and git to make our programs reliable and interactive.",
                "Understanding of what object-oriented programming means, when to use it, and what its advantages are. Thorough introduction and practice with developing object-oriented Python applications, and introduction to object-oriented C++ (basic prior experience with Python and substantial prior experience with C are assumed). Developing a GUI application using the tkinter GUI toolkit, and working with databases through SQLAlchemy. Crash-course on OOP design patterns and code smells, learning good approaches to common OOP problems and how to improve readability, reusability, and modularization of OOP code.",
                "The ability to model problems using OOP proved useful. It was also good to learn about design patterns.",
                "Basics of computer science design patterns, unit testing, some C++/Java",
                "OOP concepts",
                "A deeper knowledge of Python, how to use testing suites, how to use git (in a basic way)",
                "Object-oriented programming principles in Python and C++. Logging, design templates, debugging, and more.",
                "I learned quite a lot about using Python, Object Oriented Programming principles, and general software design and programming principles.",
                "Learned all of Python from this course alone, as well as things in C++ I did not know about before.",
                "OOP, testing, GUIs.",
                "I gained knowledge of object oriented programming in Python and C++, design patterns, and testing."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Good Psets and ULAs. Lectures are atrocious and disorganized.  Course needs a complete overhaul and to actually make the stuff interesting, which isn't difficult.  I read the text book and watched people teach it on youtube, and it was 10 times more enjoyable.",
                "Good coverage of a wide range of topics in OOP, interesting assignments",
                "I really enjoyed this class. It is very relevant and probably one of the more applicable CS courses Yale offers, and I say that as a graduating senior after taking 15 CS courses.",
                "I think that the course material is very beneficial and will be very beneficial to my future, but I feel that a lot of the material was rushed at the end.",
                "Strengths: Concepts are interesting, lectures are informative, homework is not too hard and useful for putting the concepts from class into practice. Weaknesses: Not many. Lectures were a little dry at times.",
                "If you dont have extensive programming experience with Python or object-oriented programming (ie. Your only experience is 201 and 223), this course will definitely arm you with some industry-ready skills that are great to learn. If you already know the basic ideas behind OOP, youll likely find the first half of the course dreadfully boring. I did appreciate the unit on testing since almost every other Yale class ignores the idea of testing altogether. I also appreciated that the course felt well organized. Assignments were released on time and each provided a Gradescope autograder to validate basic functionality.",
                "Strengths - good lectures, assignments, and fair exams. No weaknesses.",
                "All weakness no strength",
                "Strengths: psets are awesome, I actually had fun with them. Cool how they approximate real world applications and require us to practice code organization, modularity, etc. \r\n\r\nWeaknesses: The c++ portion didn't feel as well thought-out as the Python portion. Probably bc there was necessarily more focus on syntax. I don't know if the C++ crash course was worth it over going more in depth actually implementing design patterns in Python code, as an exapmle.",
                "Strengths: The class material is introduced in a logical manner and it builds on itself. Class material and examples are all accessible on Canvas, and assignments are well documented.\r\n\r\nWeaknesses: One weakness was that the lectures weren't too engaging.",
                "Overall the course is well structured to facilitate learning. The combination of homework programming assignments with lecture quizzes is very effective at reinforcing lecture content. The programming assignments are always interesting and to do and are immensely useful as they are very close to real backend programming situations and specifically teach you to use widespread important Python libraries such as logging, GUI toolkits, unit testing, and interfacing with SQL databases. However, it didnt make a lot of sense to present a rapid-fire sequence of OOP design patterns at the very end of the course when we only had one assignment in which to apply them. The content sequence would be more logical if design patterns were presented before specific libraries such as logging, GUI, and SQLalchemy, and this would allow students more opportunities to practice applying design patterns. Also, exams placed too much weight on memorization of details from lectures that were not relevant to the programming assignments and were therefore not reinforced. It would also be very helpful if later programming assignments explicitly supported C++ to provide students with an opportunity to choose which language they want to practice more.",
                "The office hours times sometimes felt odd, so I couldn't attend them that much. Regrade requests can take some time before they get responded to. The crash course on C++ could be improved I feel like. I did like how straightforward Tim Barron's slides were.",
                "I think the design pattern content was really helpful and honestly makes me feel like this class should be mandated for the CS major. \r\n\r\nWeakness: the format of the lectures, I just didn't process all the code and content in the lectures. I could tell the rest of the class was also not following along, but I'm not entirely sure how to improve that. Maybe more comprehension check poll questions, and if the majority of students don't reply with the correct answer then reviewing the material?",
                "Great lectures, tough exams",
                "A strength is that this course feels like one of the most practical electives offered in computer science such as object-oriented programming, design patterns, git, and databases. A weakness is that sometimes it felt like there was too much material for the course and we were rushing through topics.",
                "Second half of the class was not relevant to industry, C++ part was way to heavy for what was advertised",
                "Way too fast towards the end; the design patterns were covered far too quickly",
                "Strengths: very useful skills for real-world programming, lots of information taught, good resources available.\r\nWeaknesses: difficult to pay attention in class - unchanging pace made worse because this semester it was a 9AM",
                "The course covers a good amount of material and I felt I learned lots. It could have been supported by more structured revision notes. This is especially the case for areas where online materials are scarce (eg online documentation of TKinter is terrible; I needed to buy a supplementary textbook). \r\n\r\nThe course was a touch dry - but thats perhaps the nature of the material and I still found I improved considerably throughout.",
                "The class content is useful, however not very challenging or intellectually stimulating. Lectures were boring, and compulsory live attendance made matters worse. Quizzes were tedious, and pointless, as attendance was taken anyways. Class needs more TA's. Would not take again, no matter how practical the content is. Could have been self taught in a few weeks."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "Only if they want to learn coding techniques.  Lectures are atrocious. Learn from the TA's and the psets. Class would be a lot better without exams.",
                "Yes, if they want to improve their Python skills.",
                "Yes! Very useful class. I come out of it a better programmer.",
                "Yes, I felt it taught me how to program properly",
                "Absolutely. Especially if you are a CS major and aspiring to go into SWE, this is very applicable. As I said earlier, it is very relevant and probably one of the more applicable CS courses Yale offers, and I say that as a graduating senior who took 15 CS courses. Barron's lecture's can be dry at times, but he keeps you engaged by creating participation polls through pollEv which are also helpful for practicing for the exams. The PSETS give you substantial practice with OOP in Python. The exams are more than fair as well... Take this class ASAP as it will definitely help you with job/internship interviews too. I know a lot of people say that you can teach yourself this content. Sure, that may be true. However, most people won't soooo just take this class and get a relatively easy credit for CS while learning important skills. Also, I will say that having an expert like Barron who you could ask questions while learning such a core topic in SWE is pretty great. Barron is a nice guy and just wants you to learn, he's chill, organized, and isn't trying to trick you in any way (like some Yale CS professors do who I shall not name here). Overall, I regret not taking this class sooner.",
                "I would as a beneficial CS elective with a relatively low workload.",
                "Yes! It's a chill CS elective, and the concepts are interesting and also relevant if you want to go into software engineering. There were 6 psets, some of which were pretty easy, and even of the hardest ones didn't take very long. The exams need some memorization and review of the material, but aren't very conceptually difficult, either.",
                "If you havent done extensive OOP before and are looking to gain industry-ready skills, definitely! If you (like me) already know many of the topics on the syllabus, I would stay away. Yes, you will find the course easy, but is that really the best use of a Yale education? Dont make the same mistake I did",
                "Yes, you learn a lot of useful things and become an overall better programmer.",
                "Yes! Super valuable for those who want to do SWE. The programming projects aren't super hard in the same way a 323 pset is -- the focus is more on organizing and designing your code, which is super valuable and not super common in other CS courses as an explicit focus.",
                "Yes, I would recommend this class to CS majors and non-majors. For CS majors, this class will teach you good habits in writing code that will help you in later classes. For non-majors this class counts towards a certificate in programming, and this class is a great fit for that program--advanced yet approachable.",
                "I would absolutely recommend this course to anyone who wants practical programming skills, as it teaches you how to quickly learn APIs/libraries and rapidly prototype solutions in Python applying powerful OOP design principles.",
                "OOP seems very useful so I'd recommend it.",
                "Yes, I feel like its a good class to take after 223",
                "Yes, the most useful cs class Ive taken so far",
                "If you just need to clear CS classes",
                "Useful if you're intending on completing the programming certificate and don't want to take 323",
                "I would definitely recommend it if you're looking to code in Python for a company. The first two months of content we covered I remember using working as an intern last summer. I wish I'd taken this course before then.",
                "Yes, since you learn a tonne in the course, even if it can be a bit dry.",
                "It's a good course, but not to be taken with a lot of heavy workload courses, as the deadlines for continuous assessment may catch one unaware.",
                "No. The content is practical, but too boring and simple to justify taking a semester long class."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 327 01 - Object-Oriented Programming"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE"
            ],
            "sentiment_scores": [
                0.9813678860664368,
                0.9717408418655396,
                0.9980261921882629,
                0.9989149570465088,
                0.9982105493545532,
                0.9969666600227356,
                0.9988139867782593,
                0.9984139204025269,
                0.9989204406738281,
                0.998884379863739,
                0.9988229870796204,
                0.9986897110939026,
                0.9888006448745728,
                0.9384347200393677,
                0.9981511235237122,
                0.9986188411712646,
                0.9986982345581055,
                0.9988160133361816,
                0.980927586555481,
                0.998752236366272
            ],
            "sentiment_counts": {
                "NEGATIVE": 1,
                "POSITIVE": 19
            },
            "sentiment_distribution": {
                "NEGATIVE": 0.05,
                "POSITIVE": 0.95
            },
            "sentiment_overall": [
                "POSITIVE",
                0.95
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE"
            ],
            "sentiment_scores": [
                0.9994820952415466,
                0.9988889098167419,
                0.9988983869552612,
                0.9960134029388428,
                0.9988625049591064,
                0.9958111047744751,
                0.998892605304718,
                0.9985020160675049,
                0.9987315535545349,
                0.9989261031150818,
                0.998819887638092,
                0.9853439927101135,
                0.9985963702201843,
                0.9987552165985107,
                0.9986106157302856,
                0.9994919300079346,
                0.9994833469390869,
                0.9977165460586548,
                0.9987360835075378,
                0.999503493309021
            ],
            "sentiment_counts": {
                "NEGATIVE": 5,
                "POSITIVE": 15
            },
            "sentiment_distribution": {
                "NEGATIVE": 0.25,
                "POSITIVE": 0.75
            },
            "sentiment_overall": [
                "POSITIVE",
                0.75
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "POSITIVE",
                "NEGATIVE"
            ],
            "sentiment_scores": [
                0.9994860887527466,
                0.9975966811180115,
                0.9988483190536499,
                0.9987812638282776,
                0.998916745185852,
                0.9926901459693909,
                0.998815655708313,
                0.9993034601211548,
                0.9987249970436096,
                0.998839795589447,
                0.9988821148872375,
                0.9989223480224609,
                0.9987958669662476,
                0.9987623691558838,
                0.9986796975135803,
                0.9971049427986145,
                0.9620879888534546,
                0.9987800717353821,
                0.9987622499465942,
                0.9987521171569824,
                0.9995033740997314
            ],
            "sentiment_counts": {
                "NEGATIVE": 3,
                "POSITIVE": 18
            },
            "sentiment_distribution": {
                "NEGATIVE": 0.14285714285714285,
                "POSITIVE": 0.8571428571428571
            },
            "sentiment_overall": [
                "POSITIVE",
                0.8571428571428571
            ]
        },
        "final_label": "POSITIVE",
        "final_count": 52,
        "final_proportion": 0.8524590163934426,
        "final_counts": {
            "NEGATIVE": 9,
            "POSITIVE": 52
        },
        "final_distribution": {
            "NEGATIVE": 0.14754098360655737,
            "POSITIVE": 0.8524590163934426
        }
    }
}