{
    "crn_code": "20943",
    "season": "202201",
    "enrollment": {
        "enrolled": 81,
        "responses": 72,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                1,
                8,
                25,
                18,
                2
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                4,
                7,
                19,
                16,
                9
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                3,
                5,
                15,
                20,
                11
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                4,
                9,
                17,
                19,
                5
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                2,
                8,
                31,
                11,
                2
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                12,
                30,
                11,
                2
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "Learned a lot about programming in python, how to build a project by separating the design into objects and using certain strategies. Concepts such as abstraction, encapsulation, design patterns, object relationships, and brief graphical interface programming.",
                "OOP. Working on a team. Design Patterns.",
                "Basic principles of Python and object-oriented programming, unit testing, comparison to Java/C++ during first half, various design patterns (essentially following refactoring.guru/design-patterns/catalog) and concurrency during second half",
                "UML, GUIs, unit testing, design patterns, refactoring tips",
                "I learned a lot of practical skills that are extremely important for most programming projects. For example, we dove into the specifics of the most popular OOP languages (primarily Python, but also C++ and Java), the importance of when to use OOP, the different ways of how to use OOP (design patterns), and even touched on a few bonus topics like Git and concurrency. We learned primarily through lectures, coding examples, and coding assignments that were well designed and easy to understand (like building a \"bank\" system holding bank accounts and incurring interest/fees, etc.).",
                "What object oriented programming is, how to code in python and C++, design patterns",
                "I learned the basics of OOP and how to design larger programming projects",
                "OOP and related topics",
                "I learned what is object oriented programming and how to code according to concept in python. You also learn about tkinter, GUIs, and SQL a little bit. I'd say it was a good introduction into OOP and what it is like to code it.",
                "OOP, design patterns, lots of useful stuff",
                "You learn about classes, design patterns, and unit testing. This course is mainly in Python, and you will get very familiar with Python programming.",
                "I learned a wide variety of object-oriented principles and patterns. This course definitely helped me write better code and better understand the design of systems.",
                "Learned about design patterns, python, a bit of C++",
                "I learned a lot about object oriented programming principles.",
                "Python (and comparisons to other languages), modeling problems with objects, class relationships, inheritance, exceptions, GUIs, testing, design patterns, concurrency, refactoring, etc.",
                "OOP techniques, UML diagrams, design patterns",
                "Developed strong skills in object oriented programming, including the design process. The homework assignments in this course really help you become proficient in Python. We also learned a bit of C++ to draw comparisons.",
                "General python skills and a bit of C++. Object oriented principles and design patterns.",
                "OOP",
                "object oriented programming, python, design patterns, a bit of c++",
                "I learned various components of Object Oriented Programming, including design patterns, strengths, weaknesses, and comparisons between certain object oriented languages, mainly Python, C++ and Java",
                "I learned a lot about coding in python as well as object oriented coding in general (classes, polymorphism, testing, design patterns, etc.)",
                "I learned and applied some good concepts in Python for general OOP, testing, and error handling. I learned some practical examples in which these are all used.",
                "There's this website called youtube where you can self-learn. Also, I gained incredible googling skills and polished my abilities to ask the TA what is going on because I learned nothing from lecture",
                "Art of object-oriented programming, Concepts in Java, C++, and Python. Developing efficient code",
                "Theory about object-oriented programming which means languages like Python, C++, and Java, which are built around using objects. UML diagrams, design patterns, etc."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "The class quizzes were about the only thing that kept me engaged. The professor isn't bad, but the material is definitely not exciting (unless you love objects for some reason). Exams were fair and projects were somewhat interesting. I did learn a fair bit though about project design/organization.",
                "Weaknesses: None\r\nStrengths: Daily quizzes help maintain understanding of course material and count for a good chunk of the grade. Psets are very manageable with sufficient time given. Generous late day policy. Exams can be a little difficult but there aren't any insane curveballs. Overall a very fairly design course to incentive learning.",
                "Strengths - useful content, easy problem sets\r\nWeaknesses - boring lectures, inefficient coding during class, unnecessarily introduces C++/Java, not enough emphasis on design patterns in application",
                "Strengths: everything. The content, curriculum, assignments, teaching style, feedback/support were all perfect.\r\nWeaknesses: none",
                "I dislike the lecture quizzes immensely",
                "I think with most CS classes a lot of the learning happens in the PSETs because it's hard to grasp things during lecture when you just get started in a new language and trying to learn OOP when you've never done it before. I think the PSETs were often rewarding and they really got you to learning good code practice and how to code in OOP.",
                "The lectures were mid but the quizzes were so crucial to actually understanding concepts at the end of the day",
                "Thought it was pretty well taught, homeworks were good",
                "Strengths - this covers basically all the hard skills you need to know for programming. The content you see in class will be seen over and over again if you work as a software engineer. \r\n\r\nWeaknesses - The course material can be a little intellectually unstimulating. Like you're not learning about super in depth theory or things that are really academic. I personally think this is okay because the knowledge you learn is applicable to SWE as a job.",
                "This course was very organized and covered content in a meaningful and thoughtful way. Assignments were applicable and of appropriate difficulty.",
                "The lectures are not engaging and it was difficult to follow along with examples in class. There was little continuity within each topic and felt like a bunch of information compacted together.",
                "the quizzes were killer. Every class had a quiz posted after and theyre inconsistently posted. Missing a couple can really hurt.",
                "This is an amazing class for the content. The professor absolutely sucks. If you know OOP avoid taking this class and take another one. The exams are straight up memorization and don't test concepts. The question for the exams are horrible and the professor gives really poorly designed problem sets.",
                "Strengths: content is very practical and useful\r\nWeaknesses: taught in an incredibly dry manner, so much so that it is hard to pay attention",
                "Includes a very relevant curriculum that gives you the tools to do a lot more in the world of computer science.",
                "This course was very well organized and well taught. The assignments and exams were fair and aligned with what was taught in the class.",
                "The class covers a lot of useful topics which are very applicable and the homeworks felt like a good opportunity to apply a lot of the topics. Lectures could be a bit monotonous at times though.",
                "Homeworks are pretty interesting, but there are quizzes for every lecture that make the class somewhat of a burden. Removing these, streamlining them to once a week, or changing their content to be more practical would make the course a LOT better.",
                "strengths: content itself was interesting and the he assignments were fun\r\nweaknesses: lectures were not very engaging",
                "This course taught me a TON of very useful material. However, the learning curve was pretty steep for people with less computer science experience like myself. It wasn't that bad once you got over the first few hurdles though.",
                "The problem sets are fairly balanced and there are a lot of office hours. Sometimes the quizzes and grading is nitpick.",
                "The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing. The lecture structure is confusing.",
                "Well taught course, fun PSets.",
                "Professor Barron is a genius who knows everything about OOP. I wish we students were also geniuses so that we could keep up with him in class and understand enough to have questions. Fortunately, the ULAs this year happened to be pretty good so we could learn primarily from office hours."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "Workload is pretty low (pset every 2 weeks, takes 5-10 hours max), exams are fair. The content is definitely not the most exciting; however, you do learn a fair bit. That being said, most of what you learn could be learned from a youtube video/online tutorial. If you're looking for a chill CS elective that is applicable to real life, this is it. If you want an interesting class that makes you a better programmer and explores a new area of CS, this class is not for you.",
                "I would definitely recommend this course. I think it's important to take this early on to get a good grip on object oriented programing principles and learning python too which will be useful in future classes/internships. You will learn a lot on how to create efficient and effective code for many things including databases, event-driven programming, and GUIs.",
                "Easy CS elective, barely useful for industry",
                "Yes. Great class for learning practical skills.",
                "I would highly recommend this course to another student, especially anyone that will be doing any kind of programming in the future. You learn really useful skills in this class, and python is really easy to take up and use in interviews too.",
                "Took this on a whim and glad I did. One of the few Yale CS classes with actual relevant applications  I ended up interviewing for and landing an OOP internship two months into the class. For someone who had never used Python before this was a great intro. There was an optional lecture on github and we got a chance to use it in the final project. This is also the first class to actually explain how to test your code. Definitely recommend!",
                "Yes its a very good elective",
                "Yes, if you are doing CS. You will learn applicable topics that you can use in industry and technical interviews. Your code will come out cleaner and more orgnaized.",
                "I would, but it is a bit more work than I thought. Definitely not nearly as bad as 223 but be prepared to be a little frustrated during the PSETs. But I definitely learned a lot and got exposed to different topics, so if you want to learn python and about OOP then I would recommend.",
                "CS gut, but its still a CS class so take that with a grain of salt",
                "Yes. I think the content is very useful and practical, every CS major should take this in my opinion. The content I learned felt very practical",
                "I 100% recommend this for anyone, even if you haven't taken any other CS courses. I would probably take this my first year or second year, before my first internship. This content will rocket ship your familiarity with code paradigms that you will see and use in industry.",
                "I would recommend this course for its organization and applicability of the content. Assignments ramped up in complexity but were reasonable and applicable both to lecture content and general design principles.",
                "No",
                "If you are persistent in reading through extra material to properly learn the material, yes.",
                "No.",
                "I would recommend this course if you want to learn Python and/or OOP fundamentals. For CS majors who already have experience with object-oriented programming, you can probably learn all of the topics covered in the course by looking them up, though taking the class does force you to learn the materialespecially all the design patternsand will make you a better programmer.",
                "Reluctantly, if you are in CS. The topics are useful, but the class itself is very dry.",
                "I would definitely recommend this course to other students because you a learn a lot of relevant coding patterns that you will use for a lot of your coding career. It also walks you through at a very good pace that by the end, you are surprised about how much you know.",
                "This was one of the best computer science classes I have taken at Yale. It was very applicable, reasonable, and overall enjoyable.",
                "Yes, especially if they would like to brush up on their python abilities. The class is not as much work as some of the other programming intensive CS classes, but the topics it covered are useful in a wide range of applications.",
                "Yes, if you want a CS credit that's not too hard",
                "It is a nice intro to OOP, but I wish we got the opportunity to work on even larger projects to see how concepts like design patterns translate into them. Overall, it is a good class to gain an understanding of the paradigm, but I would say you have to be motivated with independent projects during the break or semester following to get the most out of it. I did get a nice understanding of Python, which I had never used before, though! Take it if you are interested in picking up some python (and kind of C++) and some understanding of OOP.",
                "good for a CS elective",
                "I would recommend this course to another student because it has lots of practical implications that you can take into the real world",
                "Yes! Professor Barron is amazing.",
                "Yes, if you are looking for a not too difficult CS class that teaches a lot of useful information.",
                "This was literally one of my favorite classes in the CS major. If you're considering it, I'd take it after 323 because it's just a lot easier. It really changed my relationship to coding  the problem sets required thinking but weren't challenging enough to cause serious stress, which is such a change from most of ht major. I really can't recommend it enough  TAKE IT!!!!",
                "I would recommend it. OOP is probably one of the most practical CS classes at Yale. Working in Python is great, and you learn how to implement testing/error handling libraries that most wouldnt when doing personal projects in the language. This is stuff that you can and I have seen applied in my internships. I like how the first few assignments also build on each other. You have the choice of working with their version of the code, but I tried to keep on building on the original code I had written and it really pushed me to keep my code clean and readable. Tragically, while I like the assignments in this class, I think the lecture, specifically after Spring Break was difficult to engage with. I did not go to lecture after Spring Break, but felt very prepared in learning the design patterns with a day of self-study on Google. I maybe could have had a better perspective with the live code reviews of the patterns, but honestly, the incentive seemed to be low for me. The Design patterns seem applicable, but I think too much of the latter half of the class probably focuses on them. I feel like I would use these patterns ad hoc in my careerlearning them by rote now doesnt seem necessary, and the resources online are honestly very robust.",
                "Tired of CS classes where 90% of the learning comes from youtube? Wanting to take a gut that teaches valuable skills with the opportunity to work on a project to add to your portfolio? Hoping to take a for-fun class that will help you take a break from higher-workload courses? \r\n\r\nWell, keep looking! \r\n\r\nAlso, here are some reasons why you should not take the class:\r\n\r\n- We had the longest and final PSET due on spring fling.\r\n\r\n- Professor took some time to upload PSETs\r\n\r\n- Also, it is very hard to follow the lecture. Especially at the end of the semester, I did not know exactly what the topic was. Yes, the slide said \"Singleton\". But then are introduced to a piece of code and we are told \"you could do this...and by the way, this is like C++, but you might not how C++ works because...\" and eventually I don't even know if we are back talking about singletons, C++, or marvel's new movie. So, everytime the professor says \"so probably you might want to\", or \"by the way\", or \"maybe\", there is usually a divergence from the main topic coming up.\r\n\r\n- In lecture, the professor uses a lot of \"these\", \"that\", \"those.\" This lends to confusion since sometimes you wonder what he's referring to but doesn't eventually clarify.\r\n\r\n- Look. The first half of the class, you can self-learn in any intro to OOP youtube course. Or some coursera-like website. The second half of the class, it takes a bunch of googling and watching youtube videos. I'd recommend to email the professor to ask for the syllabus, and then commit yourself to learning the topics on the syllabus on your own, while also building projects that use these concepts. \r\n\r\n- Professor speaks very fast. The rate of speech is that of a conversation, as if you were talking to someone about something you both know about.",
                "Yes, loved it! Must take easy CS elective",
                "Compared to other CS classes, this one is less brutal in terms of content difficulty and workload. But if you have no experience in Python and C++, I recommend self-learning how to write them before taking the class because Professor Barron will not wait for you."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 327 01 - Object-Oriented Programming"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.5527355670928955,
                0.6577506065368652,
                0.6609841585159302,
                0.5016205906867981,
                0.8135967254638672,
                0.6395795941352844,
                0.632239043712616,
                0.618155837059021,
                0.6750484108924866,
                0.9164592623710632,
                0.7117743492126465,
                0.9005938768386841,
                0.5083327293395996,
                0.6536636352539062,
                0.7462354898452759,
                0.5909329652786255,
                0.902977705001831,
                0.6785990595817566,
                0.6452672481536865,
                0.5041681528091431,
                0.662406325340271,
                0.751627504825592,
                0.8663703203201294,
                0.7231358885765076,
                0.6459910869598389,
                0.7135577201843262
            ],
            "sentiment_counts": {
                "neutral": 14,
                "positive": 12
            },
            "sentiment_distribution": {
                "neutral": 0.5384615384615384,
                "positive": 0.46153846153846156
            },
            "sentiment_overall": [
                "neutral",
                14
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "positive",
                "neutral",
                "neutral",
                "positive",
                "negative",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "negative",
                "negative",
                "negative",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "negative",
                "positive",
                "positive"
            ],
            "sentiment_scores": [
                0.5273236036300659,
                0.5086385011672974,
                0.6083210110664368,
                0.8968788385391235,
                0.8358418345451355,
                0.5887566208839417,
                0.5887828469276428,
                0.4817439913749695,
                0.6510228514671326,
                0.6439033150672913,
                0.8230336308479309,
                0.8449174165725708,
                0.8629204630851746,
                0.6547137498855591,
                0.7271419167518616,
                0.729852557182312,
                0.8257817625999451,
                0.6110470294952393,
                0.5455144047737122,
                0.500562846660614,
                0.6675525903701782,
                0.5041376948356628,
                0.7251740097999573,
                0.7407659292221069
            ],
            "sentiment_counts": {
                "positive": 10,
                "neutral": 9,
                "negative": 5
            },
            "sentiment_distribution": {
                "positive": 0.4166666666666667,
                "neutral": 0.375,
                "negative": 0.20833333333333334
            },
            "sentiment_overall": [
                "positive",
                10
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "neutral",
                "positive",
                "negative",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "negative",
                "positive",
                "positive",
                "positive",
                "negative",
                "neutral",
                "negative",
                "neutral",
                "negative",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.5573330521583557,
                0.9105958938598633,
                0.8125435709953308,
                0.9027444124221802,
                0.9158108830451965,
                0.8903877139091492,
                0.8837606310844421,
                0.6694038510322571,
                0.49194374680519104,
                0.5810424089431763,
                0.949164628982544,
                0.8320976495742798,
                0.6119620203971863,
                0.6012932658195496,
                0.7916680574417114,
                0.5932044982910156,
                0.5205759406089783,
                0.6475158333778381,
                0.9210805892944336,
                0.9623672366142273,
                0.6726053953170776,
                0.7355921268463135,
                0.6294237971305847,
                0.8237635493278503,
                0.6286662220954895,
                0.954349160194397,
                0.6796004176139832,
                0.9589950442314148,
                0.8455501198768616,
                0.6427621245384216,
                0.9418284296989441,
                0.6315877437591553
            ],
            "sentiment_counts": {
                "neutral": 8,
                "positive": 19,
                "negative": 5
            },
            "sentiment_distribution": {
                "neutral": 0.25,
                "positive": 0.59375,
                "negative": 0.15625
            },
            "sentiment_overall": [
                "positive",
                19
            ]
        },
        "final_label": "positive",
        "final_count": 41,
        "final_proportion": 0.5,
        "final_counts": {
            "neutral": 31,
            "positive": 41,
            "negative": 10
        },
        "final_distribution": {
            "neutral": 0.3780487804878049,
            "positive": 0.5,
            "negative": 0.12195121951219512
        }
    }
}