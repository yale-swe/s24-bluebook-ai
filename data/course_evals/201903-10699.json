{
 "crn_code": "10699",
 "season": "201903",
 "enrollment": {
  "enrolled": 67,
  "responses": 48,
  "declined": 11,
  "no response": 8
 },
 "ratings": [
  {
   "question_id": "YC402",
   "question_text": "Your level of engagement with the course was:",
   "options": [
    "very low",
    "low",
    "medium",
    "high",
    "very high"
   ],
   "data": [
    0,
    2,
    6,
    11,
    10
   ]
  },
  {
   "question_id": "YC404",
   "question_text": "What is your overall assessment of this course?",
   "options": [
    "poor",
    "fair",
    "good",
    "very good",
    "excellent"
   ],
   "data": [
    1,
    1,
    9,
    12,
    6
   ]
  },
  {
   "question_id": "YC405",
   "question_text": "The course was well organized to facilitate student learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    0,
    1,
    7,
    18,
    3
   ]
  },
  {
   "question_id": "YC406",
   "question_text": "I received clear feedback that improved my learning.",
   "options": [
    "strongly disagree",
    "disagree",
    "neutral",
    "agree",
    "strongly agree"
   ],
   "data": [
    1,
    4,
    12,
    11,
    1
   ]
  },
  {
   "question_id": "YC407",
   "question_text": "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge<\/u> of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    0,
    12,
    13,
    4
   ]
  },
  {
   "question_id": "YC408",
   "question_text": "Relative to other courses you have taken at Yale, the <u>workload<\/u> of this course was:",
   "options": [
    "much less",
    "less",
    "same",
    "greater",
    "much greater"
   ],
   "data": [
    0,
    2,
    10,
    14,
    3
   ]
  }
 ],
 "narratives": [
  {
   "question_id": "YC401",
   "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
   "comments": [
    "I learned a lot about computational intelligence, AlphaGo & AlphaZero, and different ways to approach game playing from a programmatic standpoint. I got better at python and learned a bunch of new board games.",
    "How to develop game agents using classical techniques as well as machine learning. Programming in Python and using Python's scientific computing libraries.",
    "You learn a lot of deep learning\/computational intelligence algorithms, as well as how to implement games in code",
    "I learned about a variety of different games and ways to optimize strategy. In the context of computer science, I also learned techniques to compute such optimal strategies, along with their proofs and implementation in python.",
    "Some game theory, some knowledge of AI, some Python",
    "I learned a lot about different games and strategies for solving them which was very interesting. Besides learning about tree search algorithms we did some reinforcement learning and neural networks which was interesting.",
    "I garnered a wealth of knowledge about ongoing computational intelligence projects, neural networks, deep learning, and different search methods for exploring playouts of games.",
    "A great class. It doesn't say AI or machine learning but you do get to learn a lot about these topics. The implementations may be rudimentary, but you do get to have a decent conceptual understanding.",
    "We learned about combinatorial games (Nim, Chomp) and proving equivalence of games, then moved on to talking about different times of search algorithms (Minimax, Scout, Alpha-Beta pruning, Monte Carlo), and finally closed out the semester by talking about reinforcement learning and applying artificial intelligence to game play.",
    "I learned to analyze game theory and apply principles of machine learning and artificial intelligence to my coursework.",
    "How to program a computer to play games. Start from simple logic up to neural nets, machine learning algorithms. Learn a little about the history of these techniques as well.",
    "I learned a bit about classical game theory, as well as programming techniques to develop programs that can play games.",
    "This class actually taught me some really cool things! We learned how to implement different optimal play strategies. We also did a bit of machine learning with monte carlo tree search and q-learning. The last pset involved implementing a neural network.",
    "An awesome introduction to game-playing AI in computer science. Starting with simple problems and gradually moving on to games and methods much more complex, this course covers a wide variety of topics that all build on each other.",
    "Learn about all sorts of games, the mechanics behind them, and the strategy used by computer models to play them.  The course covers very basic games early on and builds up to an understanding of Google's Alpha Go as well as machine learning methods for games around the complexity of Yahtzee.",
    "You develop a good understanding of how computer make decisions.",
    "Learned a lot of games, and techniques computers use to play these game, including neural networks, genetic algorithms, dynamic programming, q learning...",
    "A lot of knowledge about game algorithms and machine learning stuff",
    "Variety of Algorithms that analyze and solve a variaty of games.",
    "The class introduced me to a survey of game playing techniques from combinatorial games to stochastic games."
   ]
  },
  {
   "question_id": "YC403",
   "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
   "comments": [
    "Many of the later assignments feels more like gold mining and fine-tuning parameters than doing anything useful to actually improve programming skills.",
    "This course is awesome! Granted, I'm someone who already really liked board games, but I loved learning about the different methods to solve different games and what considerations and thought processes are necessary when approaching a game. \r\n\r\nThe only weakness I think of this course is an inevitable one: grading. For the early psets this wasn't a problem, because it was a case of \"if you understand the algorithm and implement it correctly, you will score points\". For later psets like MCTS, Q learning, and ANNs, the grading was more \"if you understand the algorithm, implement it correctly, and then spend a ton of time optimizing and improving until you hit a threshold, you will score points\". This is a kind of necessary evil in my mind, since I can't think of an alternative metric of grading, but sometimes it's frustrating to fully understand the concepts, implement the algorithm precisely as it's defined, yet get performance 1 or 2 percentage points below the target. More time is spent trying random different things in hopes of boosting performance that tiny extra bit, at which point no meaningful real learning is being done, just various little tweaks and experiments. But again, I do believe the current grading system, while not perfect, is likely a case of the \"best bad option\".",
    "Very interesting material; the Professor sometimes went on too many tangents in class.",
    "Strength: material is very interesting and cutting-edge. The exams are very fair (and easy).\r\nWeakness: some of the later homework assignments waste a lot of time because of parameter tuning; implementing the algorithm takes very short time but tuning the parameters can take so long and you don't feel like learning a lot in the process. Homework grading is also a bit slow.",
    "Strengths: Incredibly interesting subject matter. Accessible as a non-CS major. Very fun. Intuitive and straightforward assignment\/exam structure. \r\n\r\nWeaknesses: On the later p-sets it felt like concepts were introduced in class but werent covered in the necessary depth to apply them to the problem sets. A section or structured office hours to discuss how to apply the concepts learned in class to the homeworks would be very helpful",
    "Generally fun\/interesting topics. Some of the later psets were deeply frustrating and didn't seem to reflect a student's understanding and ability as much as it did their luck in getting the right parameters or having friends that knew the right parameters to try.",
    "Course was pretty interesting. I think the homework assignments, especially the assignment on q learning could have been improved. It took a lot of time to fine tune parameters which did not actually help me become a better programmer and felt like a great waste of time. The other assignments however were very reasonable and pretty interesting.",
    "The course is well-taught with demonstrations of concepts through code. However, the abundance of concepts is quite large for a class, and often times, the notes the professor posts only include diagrams and no commentary on concepts. I believe having notes that provide more context to the concepts being illustrated would be beneficial to the class.",
    "Strengths: fun, JGlenn\r\nWeaknesses: things ramp up MAD FAST. Assn1-4: chilling. Assn5-6: death.",
    "Strengths - Professor Glenn is super knowledgeable about this field and you will come to have a deeper understanding of reinforcement learning and other search algorithms. The problem sets are very interesting and always have an application to a game. The lectures are usually engaging and easy to follow along.\r\n\r\nWeaknesses - The problem sets were honestly not trivial. You can have the tiniest of bug in your code and it will not be hitting the winning percentage it is supposed to hit. This means that you really need to understand the problem sets \/ algorithms very well.",
    "Some strengths were the usefulness of the concepts in making us think about game concepts.\r\n\r\nWeaknesses to note are the confusing nature of topics and the lack of coding principles that are exercised in class to guide us.",
    "I think psets are pretty interesting. The last two psets were frustrating as it relied on mainly luck and willpower to find a winning combination of elements to increase your score, with little logic to go by.",
    "The course material is very cool, and the problem sets focus directly on the material. The later problem sets are extremely time consuming however, and it's not always clear what as to what you should do (since the goal is often to reach a target score of some sort, with few guidelines on how exactly to get there). These problem sets were also stochastic, so they would take a loooooooong time to test if you wanted to account for variance.",
    "The psets were fun and interesting! They did not take too much time because Glenn talked through the psets in class (definitely go to class). The only issue was debugging because the psets relied on stochastic variables. That being said, the psets were very interesting and went well with lectures. The material overlapped and I got to see how different concepts we learned could actually be implemented.",
    "The material addressed felt slightly unbalanced. We spent so much time doing Nim calculations, which I feel like I understand super well, wasted a day playing the NFL game, and a lot of time going over history, and spent comparatively less time on Q learning, genetic algorithms, etc. I wish we could have spent more even amounts of time on conceptually difficult topics. \r\n\r\nAlso, it would be helpful if grading on some of the simulation psets could be clarified. For example, we were evaluated on min\/max scores achieved on some psets. If I'm aiming for relatively good avg with very low stdev, my max is naturally going to be lower, and I'm being penalized for something I actively tried to implement because I didn't know about the grading scheme",
    "The PSets get more difficult but also more interesting and exciting. Lectures are interesting, though sometimes a little slow, but great for a CS course. Only downside is that when stuck in a pset it can be very difficult to identify the issue given the nature of the grading (how well your AI performs in repeated plays of the game).",
    "Strengths- fun, good overview of Artificial Intelligence related to decision making\r\n\r\nWeaknesses- none",
    "Lectures are really fun and psets are fun too! But the last 2 psets are stressful.",
    "pros: fair assignments and easy exams\r\ncons: vague slides",
    "Strengths: the assignments are clear and well structured for the end goal and the actual structure of the syllabus is nice. It's not too much but not too little. \r\n\r\nWeaknesses: Just about everything else."
   ]
  },
  {
   "question_id": "YC409",
   "question_text": "Would you recommend this course to another student? Please explain.",
   "comments": [
    "YES!!! I love this class so much. I'm biased because I really love board games and I'm a fan of Professor Glenn, but this is my favorite CS elective I've taken so far. The material is fascinating and the psets are a ton of fun. Definitely consider taking this course.",
    "If you are interested in the topic and don't find Glenn too boring.",
    "Yes, if you want an easy-ish CS elective and some interesting machine learning stuff on your resume.",
    "As a non-CS major I absolutely loved this course. The material is so much fun and, although the problem sets get increasingly challenging, its a very enjoyable course overall. Prof. Glenn himself is clearly passionate about and engaged with the material and provides incredibly clear instruction during class. Overall would recommend this to anyone whos finished 223 and would like more exposure to CS",
    "It's a relatively chill elective where you get to learn\/implement some game-playing strategies so if that's what you're looking for, yes.",
    "If you have taken AI a lot of the strategies covered you will have seen already i.e. MCTS, Minimax, Neural Networks, Q-learning. However there is still some other interesting topics that are taught. I would recommend the course if you haven't already taken AI. You will learn some pretty cool things.",
    "Yes, I would recommend this course. It provides a fine introduction to concepts surrounding the development of forms of artificial intelligence that can beat games such as Yahtzee, chess, checkers etc. However, be prepared to work and be in attendance at class, because a significant amount of learning comes from the class lectures and the problem sets, which he will give good clues on how to tackle them in class.",
    "Yes if you're interested in learning about search algorithms for game play and how AI fits into it. The problem sets are honestly not THAT challenging but they can be quite time consuming (especially the last few psets in the semester). They are not trivial and still require quite a bit of work.",
    "Yes and no. If you want to learn more about combinatorial games, etc. Take this course to challenge yourself, but if you are simply curious and don't have much background or practice with thinking about these topics, shop and look ahead to future assignments to see.",
    "Yea. Psets aren't too bad and the class topics themselves are really interesting and applicable. Good intro to some basic ml and ai fundamentals.",
    "Honestly yeah, the concepts are interesting, and the problem sets are cool. The only thing is the problem sets get much harder in the later half.",
    "Yes! It was an amazing and fun CS elective that taught me a lot. The work is not too hard, but debugging is the worst. Nonetheless, it is a very fulfilling class!",
    "For anyone interested in AI, basic machine learning, game-playing, or in general a difficult but fair and exciting CS course, absolutely.",
    "Yes, definitely take this course if you enjoy intellectually stimulating Psets as well as relatively fun course material. Glenn is very passionate about the subject so lectures are worth attending.",
    "Recommend if youre interested in artificial intelligence.",
    "Yes! Professor Glenn is great so if you like games and artificial intelligence this will be really fun.",
    "Yes, a fun class to take.",
    "Absolutely not."
   ]
  }
 ],
 "extras": {
  "title": " CPSC 574 01\/CPSC 474 01\n        Comp Intelligence for Games "
 }
}