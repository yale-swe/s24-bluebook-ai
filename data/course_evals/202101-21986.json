{
    "crn_code": "21986",
    "season": "202101",
    "enrollment": {
        "enrolled": 94,
        "responses": 77,
        "declined": 3,
        "no response": 6
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                0,
                0,
                5,
                23,
                40
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                0,
                1,
                12,
                18,
                38
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                0,
                1,
                6,
                28,
                33
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                2,
                2,
                9,
                35,
                20
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge</u> of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                1,
                4,
                17,
                46
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the <u>workload</u> of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                0,
                7,
                61
            ]
        },
        {
            "question_id": "YC601",
            "question_text": "Which of the following best describes your mode of learning in this course?",
            "options": [
                "recorded lecture",
                "live virtual lecture",
                "in-person lecture",
                "virtual seminar or other discussion format",
                "in-person seminar or other discussion format",
                "virtual lab",
                "in-person lab",
                "other or multiple (please describe below)"
            ],
            "data": [
                12,
                58,
                0,
                1,
                0,
                0,
                0,
                1
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "I gained a in-depth view of computer systems and how the hardware interfaces with software in order to run programs efficiently.",
                "Basics of computer architecture, how memory allocation/processes/files/etc work at a low level",
                "na",
                "Great introduction to architecture (Intel x86-64), systems programming, Unix, and fundamental computer science principles.",
                "CS coding and knowledge of architecture.",
                "Walking away I feel extremely confident that I can make anything in C. This class was an amazing overview of all of the things that go on behind the scenes in a computer, and every day I learned something interesting as well. At all points I felt intellectually stimulated, and challenged by the work!",
                "A good understanding of low-level programming, memory management, and other systems topics.",
                "An overview of systems and how computer systems abstract away from the hardware to build efficient, correct and safe software systems. I learnt a whole bunch about lower-level programming and how hardware interfaces with the software.",
                "Basics of computer organization, representations of integers and floats, under the hood of malloc, page tables, caches, assembly.",
                "You develop knowledge on computers and computer systems. This includes operating systems, compilers, data representation in memory, the memory storage hierarchy, etc.. In terms of skills, this class really turns you into so much of a better programmer. You learn to organize your code and write it in ways so that you and others can understand it. Honestly, I feel pretty powerful with C.",
                "Deeper understanding of C, OS, knowledge of compilers, virtual memory vs. physical memory, hardware caches, malloc and free, assembly language, the shell / Unix environment",
                "I learned how to think critically about computer systems and how to work through extremely difficult problems sets.",
                "Knowledge of systems, C, assembly, compilers, linkers/loaders, operating systems, memory, catches, page tables, data representation",
                "Overall, this course covers a lot of breadth in topics from computer systems, computer architecture, and operating systems. I became a stronger C programmer (and programmer in general), learned how to debug tricky assembly and kernel code, and got to work with some OS codebases on projects. This course definitely gave me a much better understanding of how lower-level systems work.\r\n\r\nWe covered the following topics this semester (based on my notes from class, the slides, the projects, and the readings):\r\nComputer Systems, Chip Design, and Power\r\nData Representation: Number Systems and Integers, Floating Point\r\nAddress Space, Stack Management, and Dynamic Memory Allocation\r\nNuances of C Programming and Structured Data\r\nLinkers, Loaders, and Compilation Flow\r\nAssembly: x86-64, Registers, Addressing, Stack Management and Calling Convention\r\nAssembly: CPU Cycles, Architectural v. Physical Registers, Memory References\r\nRegister Allocation, Control Flow Graphs, and Liveness Analysis\r\nCompiler Optimizations\r\nShell Programming\r\nOperating Systems: Kernel and Exception Handling\r\nProcesses, Syscalls, and the Fork-Exec Model\r\nThe Shell, Pipelines, and File Descriptors\r\nSignals\r\nVirtualization, Page Table Translation, and Virtual Memory Management\r\nDynamic Memory Allocation (malloc, sbrk, mmap), Allocator Design, and Fragmentation\r\nCaches and the Memory Hierarchy",
                "broad over of systems programming and computer architecture",
                "Caches and virtual memory, TLB, address translation, dynamic memory allocation, fork-exec model, pipes, basics of compilers including liveness analysis, register allocation, and optimizations like code motion, strength reduction, common sub-expression, decimal/hexadecimal/octal/binary conversions, sign and magnitude, one's complement, two's complement, floating point arithmetic, C programming, stack and heap management, linkers and loaders, assembly language, Moore's law, etc. Kernel programming, working with a toy OS on psets.",
                "Understanding different components of computer systems.",
                "This class teaches a lot about computer organization. We started learning about binary representations of integers, floats, and other data types in computers. We moved to learning about compilers and operating systems and ended up learning about memory management.",
                "This class gave a broad study of computer systems topics and went into depth on important topics like data representation, operating systems, and memory.",
                "Writing components of operating systems, linkers, compilers, and the standard library in C. Debugging and writing simple code in x86 assembly. Introductory knowledge of a lot of what goes on under the hood in computers.",
                "Probably one of the courses that I learned (and suffered from) the most at Yale. Topics included Assembly, Operating Systems, and Memory Management. \r\nOn top of learning about how computers are organized and how systems work (from Silicon to C), I became a better and more organized programmer.",
                "I learned a lot in this course! About different hardware components, assembly language, virtual/physical memory, memory allocation, the fork-exec model, etc.",
                "I learned so much about systems architecture!!! This was an amazing and very difficult class, but I've gotten so much out of the course.",
                "I learned about systems programming, memory management, and other low level architectural considerations in computer science and computer design",
                "Virtual memory, Linux file I/O and processes, x86_64 assembly, compiler optimizations, hardware caches",
                "Learn in depth content about how a computer works, low level computer programming",
                "This course gave a very good overview of computer architecture and the interactions that happen between software and hardware. It did not go into much detail fro the hardware side due to the scope of the class, but it did provide a solid outline of these interactions and taught what was needed for the class and at this level. Assembly, data representation, and a lot regarding memory management towards the end of the year. The class was very challenging with exams and psets that were way too long to be healthy, but the length of the code and the hours devoted to it did help in being able to manage large codebases and to structure your code to be manageable. It especially helmed me learn about debugging.",
                "This course follows a typical introduction to systems programming, with an extra emphasis on hardware. I improved my C programming a lot, and learned about the many layers of software and hardware underlying modern computer systems.",
                "It taught me how to think about systems programming, particularly memory management.",
                "I leaned about low level computer architecture, including topics such as virtual memory, operating systems, assembly, and dynamic memory allocation.",
                "I learnt a lot about how systems work and how a computer operates at the very basic level. Learning about the interaction between software and hardware was extremely interesting and rewarding.",
                "low level programming, overview of how instructions go from C code to machine code to the physical hardware",
                "Learned how to actually plan code. In every prior CS course you were able to throw yourself into every assignment. You CANNOT do this for this course. Abhishek has constructed one of the most brilliant Yale courses I have ever taken and he forces you to plan and devise clever solutions.",
                "I learned more about C programming, memory management, CPU architecture, assembly language, plus a little about compilers and many other topics.",
                "This course encompassed topics in systems programming, such as compilers, assembly, virtual/physical memory, etc. Additionally, this course pushed me to improve my programming skills, and more importantly, my debugging skills.",
                "Operating systems and C",
                "Developed how to approach challenging tasks, as well as programming with systems",
                "Systems level programming and knowledge of computer architecture",
                "This course was extremely challenging, yet extremely rewarding. This semester I have have gained a lot of computer science skills such as debugging and overall understanding of how computers work.",
                "a dive into computer system principles, including hardware, compilers and os abstraction. developed skills in low-level programming through the homework assignments.",
                "Many mysteries of how a computer actually works have been resolved. Throughout each of the projects in 323 you will learn:\r\n    - Smart software engineering practices and project planning\r\n    - How a linker and loader work as well as a high-level view of how a compiler works\r\n    - How to read assembly code and simple binary reverse engineering  (This project is especially cool)\r\n    - The functions of the shell\r\n    - How virtual memory and caches work\r\n    - How dynamically allocated memory works\r\n\r\nAttention enterprising first-yeas who wants to take this class their first semester at Yale:\r\nI admire your dedication to the grind, but do yourself a favor and wait till you take 223 before taking this class.",
                "Systems programming, C programming, computer organization",
                "Broad introduction to various topics regarding intro to systems programing and some kernal/OS.",
                "I developed a really strong foundation in computer systems and computer architecture. Lots of new insight into how computers work on the software side (and a small bit also on the hardware side). I also gained a lot of skill in coding in C (and coding practices in general), along with time management",
                "Introduction to Systems Programming topics, including page tables, memory management, ELF files (linking & loading), how operating systems work, memory hierarchy and caches.",
                "You learn how to become an independent and efficient programmer on top of all of the low-level OS, and computer functionalities.",
                "Significant coding time in C, understanding of data representations, compilers, operating systems, cache levels, C library implementation details, and so much more",
                "I learned a lot about CPUs, memory hierarchy, hardware caches, storage, OS, etc. I also developed better code management and code debugging skills.",
                "This course is an excellent introduction and overview of the subject material - from assembly to understanding the allocation of memory to user processes. But this is also a core class in the major, and it therefore designed to teach core skills in addition to, and as important as the curriculum itself. Some of the projects are assigned with large codebases, which require students to learn how to get into an extant project and build on it. In addition, as the material addresses many levels of abstraction, from touching on hardware design to virtual memory, this course teaches students to become adept at understanding systems on different levels and leveraging this understanding to building large, robust systems."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Office hours could often get clogged, and the appointment system was an alright solution but the appointment times were too short to get meaningful help and often ended up rolling over into the following session. Some of this will be solved with in-person office hours, where multiple people can have the same question answered at once, but maybe offering longer appointments could additionally ease the burden on regular office hours",
                "The material is really interesting and vital for CS majors to understand at a low level. All the TFs and ULAs are very helpful at office hours, and you can always get help if you need it.",
                "na",
                "Strengths: incredible professor, well-crafted content. Weaknesses: some problem sets felt like they did not align very well to what we were learning in class. This was not a big deal, since the p-set specs were often quite comprehensive, but it would still be nice to have more alignment in this regard.",
                "If its not online",
                "The class was overall well thought out and designed nearly perfectly. It also spanned content that Yale offers in more in depth courses, which really made this course a great jumping off point to try things like the OS class. I also loved the teaching staff, all of which were extremely encouraging and helpful. Its really hard for me to come up with any critique at all because this class was most definitely the best class Ive ever taken at Yale. One thing maybe would be having one running course notes document, similar to what aspens has for 202. Its helpful for studying when its all laid out concisely in one place. Another thing would be emphasizing growth centric grading where possible.",
                "The psets are OK and I think the average time spent on each of the 5 is something like 20 hours. There is a lot of office hours support too and the teaching staff are very responsive. \r\n\r\nA weakness is I think the course is really ambitious in the breadth and depth of material it is trying to cover, which makes it a hard course. Also, even though we had lectures, it felt like I taught myself 80% of what I learned in this course by doing the psets.",
                "Strengths: Prof Abhishek is an amazing instructor. He lectures well and explains concepts clearly, is responsive and encouraging towards student questions, and answers emails very responsively and in a detailed manner. His assignments are closely tied to lecture content and elevate students' understanding and learning of the material. He cares for students and repeatedly reaches out to see if anyone needs help and to encourage us. He makes accommodations for students amidst a challenging semester. The problem sets are generally clear and fair, and they weren't as time-consuming as others make it out to be. Exams were challenging though but the curve is fair. Good help is given at office hours by the teaching staff - Richard, Karthik, Linc were all very good at responding to questions. Karthik was very active on Ed and that's much appreciated by all students.\r\n\r\nWeaknesses: Not many, but one issue is the some TFs were very unprepared during office hours. For example, Ketaki could not answer any of my questions during her OH sessions that I attended, was often lost as to what our questions are, often made wrong assumptions about the project specification which clearly shows she didn't read or understand the projects, was not active on Ed at all, and was often rude or unapproachable to students during office hours. Her suggestions were often very generic and unhelpful, for example suggesting \"use the debugger\" without providing any guidance or further elaboration. This caused significant anxiety and frustration amongst students.",
                "Strengths: content is very interesting and applicable; problem sets are well-designed.\r\nWeaknesses: exam questions were not always clear; sometimes it feels like we're jumping around from lecture to lecture, and sometimes the problem sets are more helpful than the lectures for learning.",
                "Honestly, even with the intense workload in mind, I don't really see any weaknesses. The heavy workloads is there for a reason, and it really does transform you into such a better programmer.",
                "The strength of this course is definitely in the teaching staff. Abhishek is a great professor, and he genuinely cares about his students learning the concepts. The TAs also do a good job of walking through the problem sets and providing helpful pointers of how to tackle the assignments. They were also all really responsive on Ed, which is almost necessary for a work-intensive lecture course like this. The material is also good to know in general. I feel like I actually gained a deeper understanding of how computers actually work, and how software interacts with hardware on a low level, which I didn't really know much about before taking this class. I also actually enjoyed the problem sets--even though they were long, I felt like I became better at programming through them. Lectures in the course were also strong. Abhishek is always very clear in his discussion, and it really shows how knowledgeable he is about the topics. Overall, even though most people taking the course have to take it for the major, I still probably would even if it wasn't required, because I think it's such a fundamental course for CS. No real weaknesses--just be prepared for hard exams and long problem sets.",
                "The only problem with the course is how difficult it is.",
                "Strengths: Abhishek is a wonderful professor. The material is extremely interesting, at least if you like to know how computers actually work. I really liked how we were actually exposed to a lot of complexities that may have been hidden from us before. We actually gain an insight into how things work without so much watering down. The psets were really cool as each explored a different aspect of systems programming. The final project which was entirety without any TA/ULA help was a really good chance to actually work through problems on my own even though some of the bug fixing was extremely painful on my own. \r\n\r\nWeaknesses: Tests were kinda hard. Obviously its a ton of work. I watched every lecture like 3-4x and spent so so much time on the psets and sometimes my grades still weren't as perfect as I wanted them.",
                "Strengths: Abhishek is an incredible professor. He explains topics very clearly, and even when we asked him questions on-the-spot he often gave us very clear and succinct answers. His teaching method of using a mix of slides and an iPad to annotate was great. The teaching staff was also great, and for the most part they were really helpful during office hours. All classes/walkthroughs being recorded was another huge strength. Some of these concepts were pretty tough for me to understand, so being able to watch them be explained multiple times were a big help. Abhishek's overall attitude towards teaching us also just made things great; he really cares about his students and balanced leading a class with a high workload with making sure we had adequate support. Overall, as much work as this class was, I'm glad I took it; it definitely made me a much stronger programmer and computer scientist in general.\r\n\r\nWeaknesses: Office hour queues could get pretty long. Abhishek was open to our feedback about this, however, and did change it to a half-open, half-appointment system, which worked out pretty well for the latter half of the semester.",
                "Strengths - Abhishek is very passionate about the material and explains concepts very clearly. Weaknesses - the course can get bogged down on minor details (e.g. ELF files), and the loss of time causes us to skip important topics such as synchronization.",
                "I definitely learned a lot from this course. The projects were at a reasonably challenging level but the time spent was mostly worthwhile, with the exception of grueling debugging sessions. The lectures were chock-full of information and Abhishek did an excellent job tying various concepts together, as well as emphasizing their general significance. However, the exams were quite difficult (but graded on a curve) and some problems required knowledge that was only tangentially covered in class.",
                "The course was well organized. Wished there was more time for corrections on later projects.",
                "This class is a lot of work. More work than I think any 1 credit class should be. That aside, the class is extremely well put together. A lot of information about basic computer organization was put into the course so it was always very fast paced. One thing that could be improved is having a little more clarity on the specs. While the specs were long, sometimes there were ambiguities that made the projects even harder than they already were.",
                "The course was incredibly well organized, with plenty of opportunities for students to learn and improve. There were also tons of office hours that made it helpful to get help at almost any given time.",
                "The Professor is amazingly charismatic and a terrific lecturer. Goes out of his way to accommodate students with expected and unexpected difficulties and to give everyone a chance to earn a good grade. Problem sets actually illustrate the course material and force you to think about what really happens when your code executes.\r\n\r\nThere is still a bit of a divide between what you learn in the course and the final, but it has improved over the course of this semester. You would learn how systems programs for Unix on x86-64 work, but you really needed to internalize the overall principles and be prepared to analyze how a system with an arbitrary architecture would work.",
                "Prof. Abhishek is the greatest strength of this course. He is an excellent lecturer, a kind person, and a great advisor.",
                "Strengths: Definitely Professor Bhattacharjee. He's an incredible professor.\r\nWeaknesses: I wish the quizzes and projects should be due on alternate weeks. Although the quizzes were not particularly challenging by themselves, they added to the stress already caused by the projects. I also didn't like the regrade policy in which we could redo a project for 33% of the lost points. The course was time consuming as it is, and with another project due (as well as assignments in our other courses), the potential time that would be spent on fixing a project was stressful. Once a project is turned in, that should be it. I liked how Prof Bhattacharjee added a policy that the lowest project grade can be replaced. This can give students a chance to make up for a low grade, rather than having to juggle redoing a project with other responsibilities.",
                "There was a lot of content to get through, which made it a little bit stressful to study for the exams. A weakness was probably the lack of review for the first midterm. However, Abhishek pivoted to doing more review for the second one, which was super helpful to facilitate learning. The course is really well organized and a great overview of computer systems. The final project, though, was a little buggy and disorganized and there wasn't many office hours for it, which made the end of the year pretty stressful.",
                "This course was very difficult, but was strengthened by a robust support system. The teaching staff were caring and supportive",
                "Strengths: Abhishek. He is a phenomenally caring instructor and really truly wants everyone to succeed. Him and the TA's give you every opportunity to bump your grade back up and succeed.\r\nWeaknesses: lectures sometimes covered a lot of material too quickly, when flipping through slides at mach 10. Abhishek addressed this fairly effectively by going through material more than once if necessary.",
                "Strengths - great lectures and engaging to learn about content \r\nWeaknesses - workload is very high and overwhelming. Exams are extremely difficult and psets take up most of your time",
                "Strengths: Professor Abhishek is an amazing professor, he explains things very well and is both open and good at responding to questions. I very much enjoyed the topics as well as the psets (more on that later), I think the complexity of computer systems is fascinating and Abhishek does a good job of opening the door to these higher level topics. Lectures were full of information, and I enjoyed them. You are able to get 1/3 of the points that you lost on a pset back and that is wonderful. I would like to add that I did enjoy the class for the most part, and the weaknesses I will go into are more about the structure and assignments of the class. Weaknesses: First the exam format. The exams are super long, I was unable to finish both of them and was left reeling after each one, because I had no way of knowing how it went and had to pray that people did worse than I did. They are super stressful and I do no believe they're a good way to test my knowledge on the topics because of the stress and pressure that comes with the exam and it's tight time constraint. Abhishek mentions how the length helps us get more points because missing a questions costs less overall, but I personally do not agree with the time constraint imposed as it stresses me out too much to do well as I don't know what questions to try or skip. The Psets are hard. But not only are they hard to get through and an enormous time commitment, I felt like I couldn't;t work with others, and there is only so many times I feel like I can reach out to TFs or ULAs for help and guidance. Some of the specs also felt vague and obscure as they tried to not give you the answer but still explain what had to be done, and it could be confusing at time what could and could not be done. I didn't like how there was no feedback on your assignment. I know it would be hard to implement as we have hundreds of lines of code from hundreds of students but it seems hard to improve if you are unable to know where you went wrong. I also don't know if there is partial credit on the hundreds of lines of code we submit as it was mentioned at times but also feels hard to accomplish while updating grades in a timely manner.",
                "This course is very difficult. However, the course staff work hard to make the material approachable and to provide safety nets. Abhishek is a great lecturer and really in touch with students.",
                "This course definitely makes you a stronger systems and general programmer. Abhishek explained the different concepts very clearly during lectures and the projects made sure that you had a good understanding of these concepts when coding them.",
                "The course is very well taught and the projects are interesting to take up. The ULAs are helpful and Prof. Abhishek is amazing as well. The workload is a lot though, but we received extensions and breathers in between.",
                "Strenghts: abhishek lectures. enjoyed the office hours about cs and society. \r\n\r\nWeaknesses: unecessarily large amounts of work, unecessarily difficult final. The inability to reliably generate logs for the final is a travesty. If we're debugging 30 lines of text at a time, the final just becomes a pain.",
                "Strengths: Abhishek is brilliant and is excellent at facilitating a proper learning environment. Weakness: The system for resubmitting psets is almost impossible to manage because the private tests arent that clear.",
                "Abhishek's lectures were very engaging, and one of the strongest parts of the course. The office hour sessions were also very helpful whenever I went, and I felt that I could always get my questions answered in a good way. However, I would say that the biggest strength of the course was Abhishek's willingness to respond to student feedback and implement changes in the way the course worked. For instance, at first it could be hard to see somebody in office hours because the queues were so long. In response, the teaching staff seemingly instantly developed an appointments system for the next problem set. I think this willingness to improve and respond to feedback was incredibly important.\r\n\r\nI would say that the problem sets felt unbalanced, at least to me. I think they were supposed to take roughly equal amounts of time, but some probably took me twice as long as others. I imagine this differs between students, but it was sometimes difficult to not be able to predict how much time I'd need to spend on a problem set. There was also some mixed messaging on the last problem set, where at first they said there would be no office hours but then changed this to limited office hours.",
                "Strengths: The biggest strength of this course by far is the instructor. Prof. Abhishek does an excellent job explaining concepts in lecture and is always willing to answer students' questions. Another strength of the course is that it provides a fairly good conceptual link between hardware and software; this is particularly helpful for understanding concepts such as correctness and performance. \r\n\r\nWeaknesses: While I understand the intent behind offering opportunities for corrections, I found it difficult in practice to find the time to do them while balancing the new assignment and work for other courses. I am not sure whether this was the experience of many other students, but if it is a common problem, perhaps a different way of doing corrections or demonstrating one's improved understanding may be beneficial. Furthermore, I would have preferred a little more feedback on coding style (maybe this could even be an evaluated component of the PSETS)?",
                "Was taught well and plenty of support when you needed it. Would have been useful if more of the information was on the powerpoint slides or if the annotated powerpoint slides were uploaded to canvas for reference.",
                "I guess one of the weaknesses would be that it is very tough, but that could also be one of its strengths. Though it is very challenging, you learn a ton.",
                "The professor was great and the projects were challenging but fun. Preparation materials for exams could be improved a bit.",
                "To be completely honest, none. I do however think that I would have done better if there were in-person office hours so I could work through problems with other students in my class.",
                "Strengths:\r\n    - Professor Bhattacharjee understands how students learn. He organized the class such that the content was difficult yet manageable. He is a unique professor who has both subject matter expertise AND the gift of teaching. If Operating Systems wasn't required for the CS major, I would not have taken this class. Now that I have gone through the course, I realize how large of a mistake that would have been. Professor Bhattacharjee taught with an emphasis on clarity without sacrificing rigor. \r\n    - Teaching staff were knowledgeable and (for the most part) great at communicating that knowledge. Aidan was especially skilled at asking the right questions to lead you to the solution as opposed to giving hints that took the fun away from the learning experience.\r\n    \r\nHow it could be improved:\r\n    - The teaching staff were stretched thin. Hiring more staff in future semesters, especially when the course is held in-person, would be wise.",
                "The class is very rigorous and covers a lot of material. It's a good segue into any other computer science course. The class is very demanding though. One suggestion is to provide solutions to past psets or strategies to solve them.",
                "Way to much homework",
                "This is a really great course taught by an amazing and understanding instructor. It's constantly evolving for the better. I personally really enjoyed the content; though it was definitely extremely difficult to grasp, we had plenty of practice with it through examples in class, quizzes, and projects. I thought the projects were super difficult and time-consuming, but generally pretty interesting and fun (if you're not doing it within 48 hrs). Abhishek is also looking to make this new reading discussion group for social/historical context of CS concepts, which I think is a much-needed and wonderful addition to the course.",
                "An immense amount of material is presented and must be rapidly synthesized. I think perhaps removing a project (problem set) or the final project, which I felt although did touch upon an important concept that we went over, is a good idea. Otherwise, there is just too much stuff to be done in one semester.",
                "Strengths: Professor Abhishek was probably the highlight of this course! He made very difficult material feel approachable and possible in how he presented it and how he made sure to follow up on it. \r\n\r\nWeaknesses: Zoom is probably the main weakness of this course, as it made it difficult to interact with other students which I think is an important part of the PSets for classes like this.",
                "The course is difficult but well planned with the lectures and problem sets complementing each other. I felt Problem Set 2 with malloc came a little earlier than we were ready for it. Problem Set 5 touched back on similar concepts and made so much more sense.",
                "This course had a particularly strong virtual lecture format in comparison to other lectures I attended this semester. Professor Bhattacharjee was engaging, paused for questions and prompted student involvement. Virtual office hours were also particularly effective. Private zoom sessions were offered both as an on-demand, queue option as well as an appointment based option. Success in this class is contingent on getting support from the teaching team, and these two options, as well as the software built by the department for this purpose, were really great at getting this support. In other classes office hours were held as just one big zoom session, which made it hard to get individual attention or to work without being distracted by other interactions going on."
            ]
        },
        {
            "question_id": "YC602",
            "question_text": "Among the practices in this course geared toward learning during the COVID-19 pandemic, which succeeded and which could be improved? Please comment on course practices that allowed for virtual engagement. (Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "na",
                "Rob Brunstad's www.csofficehours.org website. Wow. Game changer. For real.",
                "NA",
                "Im actually a really bad student when it comes to engaging with my coursework more fully. I didnt make use of office hours much because usually the questions I had were asked on edstem. Covid has obviously exacerbated this, and its an extremely hard issue to solve. This course always has recordings of lectures available, and held frequent OH, both with profesor Bhattacharjee and the teaching staff. All of the walkthroughs were recorded as well, which was very helpful (and a great way to organize learning because it gave me a chance to meet and see the teaching staff, and get their perspective on how best to attack the problems). I think this course gave all of the proper accommodations and was executed perfectly given the circumstances.",
                "Exams were made available during a 24 hour window which suits students with various commitments and logistical challenges. Most sessions were recorded (eg. lectures, walkthroughs).\r\n\r\nMore office hours could have been scheduled for students in other timezones.",
                "Abhishek was very accommodating, and I can't think of any improvements for the COVID format of this course.",
                "All were great.",
                "It was all really solid although I wished we got more design feedback from somebody who actually looked at our code, but I understand why that's infeasible in a large class.",
                "Recording all lectures and walkthroughs was amazing. I watched portions of lectures multiple times afterwards, which really helped me understand the wide breadth of concepts that we covered this semester. The online csofficehours[dot]org site was also great for organizing our office hours sessions; I definitely prefer it to the old office hours system of showing up to Hillhouse and sitting around for hours. I think this course handled an online learning environment very well.",
                "There was reasonable support from the teaching staff on Edstem which facilitated the learning process and helped clear clarifications on the specs. The professor is great at engaging students even in a virtual environment.",
                "Appointment based office hours helped w/ virtual engagement.",
                "The virtual open workroom was a good idea, but it became very hard to commit to adding more zoom to my schedule.",
                "The course was structured with layers of redundancy to support all issues that arose during the remote learning situation.",
                "Additional office hours, ample walkthroughs, 24/7 Zoom workrooms, and heavy use of Ed contributed a lot to the course. One thing that would have helped is if the professor had posted his lecture whiteboards. He always posted slides, however.",
                "This class worked well in a virtual format. The projects could all be coded from your own computer independently, and having recorded lectures to refer to during the semester was very helpful.",
                "Office hours were successful and the appointment system worked well",
                "The office hours system was very good, as was Abhishek's lecture format. I'm not sure I could think of anything virtual-specific that could be improved.",
                "I think Prof. Abhishek and the teaching staff handled virtual learning quite well. The lectures were delivered smoothly and the Ed discussion forum was helpful for assignments. Perhaps an area for improvement could be the office hours experience. I remember from previous CPSC courses that ULAs would explain concepts on the whiteboard when multiple students were struggling with the same concept; this often made office hours more efficient. If there is a virtual method of achieving the same goal, I believe that it would be helpful for many students (and prevent queues from becoming too long).",
                "Recorded lectures were very useful. The office hours system was very useful and made office hours much better and more organised than other systems.",
                "Office hours on zoom were good in my opinion",
                "online office hours queue system was very well done.",
                "This class handed zoom and everything very well.",
                "- Rob Brunstad's website managed the help queue really well. I think that Yale CS courses should continue using the site when classes go in-person to keep things organized.",
                "The live lecture format with recordings and walkthroughs was done well.",
                "Zoom lectures were well-done. Office hours were very efficiently and well-managed on a new site built by TF Rob. Projects and quizzes were interesting. I think exams were a bit difficult to do online, especially since it was hard to show work and get partial credit on those, but Abhishek made a great choice in adding extra spaces for scratch work for partial credit on the exam.",
                "The flexibility and understanding from the professor and the entire teaching staff was admirable.",
                "Online office hours and queue were helpful! Maybe some tweaks to help with how available people are but they were good when they were available!",
                "Abhishek was a fantastic teacher and super understanding and supportive during the pandemic adjusted semester. He extended problems sets as necessary and was always fair. The office hours website works amazing too.",
                "I think what was helpful was having project overviews to help guide us for projects;",
                "You likely are only considering this course as a requirement for the Computer Science major and/or as a prerequisite for other courses in the Computer Science department. Nonetheless, I would highly recommend this course to any student interested in working with computer systems. It teaches the fundamentals. In the same way that knowledge of data structures and algorithms is vital for work in many fields and in programming, this class introduces  the fundamental components of computer software which might prove super helpful in working with computer systems coming from any field."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "If you're looking at this class, you probably have to take it for a CS major. It's hard, but fulfilling. Take it alongside some easier classes so you can spend a lot of time and effort on this class.",
                "Yes--learning about systems programming at a fundamental level is extremely important for anyone in CS-related fields, even if you just want to go into the industry. The material in this course helps you understand other aspects of computing much more thoroughly.",
                "na",
                "I would recommend all CS majors to take 323 with Abhishek. He is a stellar teacher in the virtual classroom, and does his best to support the students. \r\nI believe that this version is potentially a bit more difficult than previous versions of 323, and I had to make several sacrifices this semester because of it, but as long as you're able to be diligent, maintain composure, be ok with not getting all the points, you can be happy. I know taking this class will go a long way. I now feel better prepared for classes (even if I don't take them) like OS, Networks, Compilers, and even Electrical Engineering courses. \r\nThe complaint I have about the course is that canvas quizzes were a bit buggy, but I would keep some version of the quizzes since they help prepare for exams.\r\nPreferably, take 3.5/4 credits total the semester you take this class, unless 223 was on the easier side for you.",
                "Yes, especially if with Prof. Bhattacharjee (absolute gem, also hot!). Having taken numerous CS classes prior, for the first time in my CS career, I feel like I now actually have an understanding of what goes on inside a computer. I would describe it as an \"aha\" moment. It's one thing to be able to program and manipulate data structures well, and another to understand how computers actually work. While at times, the information felt a bit too granular to be useful (personally, since I'm not planning on doing architecture or low-level systems design, I don't feel like I need to remember that the Intel x86-64 pagetable is indexed with the lower order 48 bits of the virtual address, but I would love to proven wrong in the future) , this granularity gave me a very deep appreciation of the level of complexity in modern computer systems. This course overall was very enjoyable, despite the couple all-nighters here and there, and I definitely felt like I took away a ton. The difference between what I know now about computer systems and what I knew just a few months prior is astounding.",
                "No, most difficult course at Yale. If you want to go into tech rather be a stats major.",
                "If you get the chance to take this course, or any course with profesor Bhattacharjee, do it! Hes a wonderful educator committed to helping his students grow and thrive in his classes! Hands down my favorite professor. As for 323 in particular, its a hard class. Be prepared to feel the learning curve, and make use of the teaching staff. Youll come out on the other side feeling confident in your coding abilities, and much more knowledgeable about all the things that go into making computers compute.",
                "As a CS major you have to take it, so go in with an open mind because you might like systems programming and be prepared to spend an inordinate amount of time on this class. Be sure to talk to your friends who have taken 323 to get a better idea of what it is like.\r\n\r\nIf you are not a CS major and don't want to take higher-level systems-related CS classes, don't take this class.",
                "Absolutely! CS323 is a requirement but also a very worthwhile course to take. You'll be introduced to concepts in systems that are foundational to computer science and these are things that all programmers and computer scientists should know. Abhishek is an excellent professor to take 323 with, he provides sufficient guidance and help through the semester, and the assignments aren't that time-consuming if you start early and have plenty of time to debug, which greatly reduces stress and increases your clarity of thought. Highly recommend!",
                "Yes if you're interested in computer science.",
                "Absolutely. Don't let the hype about the workload freak you out. Yes, it will take a good chunk of your time, but if you start the projects early and work hard from the get go, you can get them done in a week and then have a week to just chill and/or test your implementation. This was probably the best class I have taken at Yale, especially with Abhishek teaching. The material was beautifully presented, and lectures were always interesting. The projects felt relevant to the material and were fulfilling to complete.",
                "Yeah, this class is pretty goated. I felt like I genuinely learned a lot in this class, and became a better programmer because of it. As others have said, the problem sets are long, but they all are aimed to teach different concepts that integrate well with the lecture content. If you start early on the assignments (i.e., look over things the first weekend after the spec is released), you should be fine, but this isn't really a class you can procrastinate much on, since some of the assignments take time to think through. Lectures are all related to the psets too (with the exception of the first one), which also makes things a little easier. Watch out for the exams though--Abhishek mentions that he likes to give long exams, but the first exam was somewhat ridiculous. Everything is curved though at the end, so it really just depends on how you do relative to others in the class. All in all, a great class, and I'd definitely recommend taking with Abhishek if you can--he genuinely cares about his students and even tries to check in with everyone individually at the midterm to see how everyone is doing, which is pretty impressive for a class as big as 323, and certainly not something I've seen from other lecture courses. Can't go wrong.",
                "Yes, if they are majoring in CS or want a very challenging intro to systems.",
                "I think this is a class where giving it everything it needs time-wise leads to a much better experience. Everyone knows (and fears) about this class, but I believe that Abhishek did a wonderful job of teaching it overall and I would definitely recommend it as long as it is is given the time it needs. It certainly does dominate but I feel like your journey of becoming a computer scientist/ software engineer is only well on its way when you complete this class. You are not the same before and after it.",
                "If you're going into CS/SWE, yes. This covered a lot of low-level topics in a single semester, and overall made me a stronger programmer and debugger.",
                "only if you are a CS major",
                "Overall, it's a terrific and necessary course. You learn so much about the basics of systems programming and how computers work at a very low level, and Abhishek is an excellent professor who ties all of these concepts together while keeping the big picture in mind. Absolutely take the course if he is teaching it, because you'll learn so much. However, please do expect allocating a large portion of your time to this class, especially as it gets reasonably intense in the latter half of the semester, and cramming projects is not a pleasant experience. Nonetheless, the time I spent on studying the material and this class in general is overall worthwhile, and this is a class that CS majors must take.",
                "It's difficult but interesting.",
                "This is a great course. If you are a CS major and it is required, it is a rite of passage in a way. If you aren't a CS major and are taking this course, there is a lot of cool information to learn that won't necessarily be applicable to the field that you're in, but learning the idea and philosophy around abstraction is extremely useful.",
                "I would recommend to anyone who is willing to commit probably the majority of there time to learning this material.",
                "If youre thinking about taking this course, you very likely have little choice. If you are interested in the programming certificate instead of the major, there is still an argument to be made for this course.\r\nIts really good and helpful. I finally feel like I understand how computer programs work in general. If you dont think that you have this knowledge yet but want to gain it, this course will help you do just that. It will help you immensely with debugging anything that you write. And if you have any interest in low-level topics, 323 will be a fantastic survey of those.",
                "Yes, it is rigorous and has a high workload but it serves its purpose well and teaches one about how a computer actually works.",
                "Absolutely! As long as you are consistent with your work and start projects on time (something I definitely didn't do), the course is not as bad as people say it will be. You will learn a lot, and you will come out of it much more confident in your ability to handle hard courses.",
                "Definitely",
                "Mandatory, but also yes if you're even remotely interested in anything systems",
                "If you are required to for the major, yes. Note that its a lot of work and be prepared for it.",
                "I would recommend this class. I feel like it's a very important class because of the range of topics it introduces and how it let me learn what I'm more interested in. I also felt that the topics were important and truly helped me better understand how computers work and the software hardware interactions, although not going into depth. It is a challenging class, but even those challenges (except for the exams in my opinion) helped me improve myself as a coder and on the topics we learned. I can only speak to my experience under Abhishek as I have heard the class can be very different under a different professor.",
                "Most people to take this course have to. However, I found it to be a great learning experience and a necessary body of knowledge for a successful computer scientist.",
                "I would recommend this course to another student. Though it is challenging, for those that are interested in learning more deeply about the inner workings of computers this class does teach a lot about many interesting concepts.",
                "Yes! Not just because its a requirement for the computer science major, but also because its extremely important to learn how software interacts with hardware and how best possible efficiency can be achieved.",
                "if you're in cs, you gotta take it dawg. Abhishek will wax poetic about how useful it is to understand low level; I don't know that I buy the utility, but I definitely believe that it is beautiful to see the layering that make up modern computer systems. The second half, where we introduce the idea of \"caching\" and see it applied at all different levels of the storage hierarchy is very cool. It's incredible to see first hand how efficiency is an emergent property of simple design.\r\n\r\nIf you're not, I can't say I do. It's wayyy too much effort for something that won't be relevant to you.",
                "YES - take it with Abhishek. This is perhaps the greatest CS course offered at Yale. It force you to BE better at programming and to develop better understanding of thinking.",
                "Definitely. For many students, the class won't necessarily be the most \"practical\" you take at Yale. But a rudimentary understanding of systems is very important for writing any kind of high performance code, which is probably very important for many students. I found that the class really stretched my brain, in a way that I felt improved not only my knowledge of systems but also my general programming ability. To add to that, Abhishek is truly amazing, and anyone who has the opportunity to take any class with him absolutely should. That being said, the class takes a lot of time. If you know you need to take another pset-heavy class this semester, you might want to put this off.",
                "If you intend to major in Computer Science, obviously this is a required course. If you do not intend to major in Computer Science, this is the course for you IF you are truly curious about systems programming (think operating systems, memory management, physical/virtual memory, compilers, assembly). The course is very challenging, so be warned that this is not simply a course to help you improve your programming or software engineering skills. It is a course that does indeed touch on some complex (but very interesting) topics in computer science.",
                "Only take if you need to. The stress is not worth it otherwise",
                "It is likely that one would only take this course if they are a CS major or one of the interdisciplinary majors",
                "If you want to continue on the CS track, this is a great sampler into systems design, to let you know if you are interested in the field or not. You have to take 223 before this, so expect more C programming.",
                "yes, it's required for cs.",
                "I would most definitely recommend this course to other students. I am not only better at coding, my understanding of how computers work has been significantly deepened.",
                "For the computer science major, this class is a requirement. Even if you are in a joint cs major without this class as a requirement, the coding skills you gain through the psets is invaluable for your future as a computer scientist. Plus, this class feels like a right of passage into Yale's cs program.",
                "Yes, I would recommend this course to another student. If this course is taught by Professor Bhattacharjee or a similarly talented professor, I would extend the recommendation to students in CS-adjacent majors who are 323-curious.",
                "I would highly recommend this course to anyone willing to put the work into it, even if they are not a CS major. This class has a wide range of topics it covers and will surely help you become a much better coder.",
                "Yes, but definitely be prepared for an extremely heavy workload.",
                "Yes I would actually. Make sure you have the time and energy to devote to the course, because it is certainly a massive undertaking, but I really do think that if you're interested in computer architecture or systems programming this is an amazing first introduction. Projects included defusing \"bombs\" by going through assembly code, making your own memory allocators (malloc/calloc/realloc), creating your own bash shell, building a LaTeX-esque program, and more. If you're going to take this class with anyone, I highly recommend Abhishek.",
                "Yes, I'm sure if you're thinking of taking this course you're almost certainly a computer science major. As long as you view this course as surmountable and leave adequate time to start working early and plan your schedule around it, as well as find a group of friends to learn the material together (whilst staying within the collaboration policy guidelines), it is manageable.",
                "Yes. If you are CS, you have to take it. It was very hard, very time consuming, but I think ultimately very rewarding. At the time, staying up to watch the sun rise while I scour to by code to find that I had a == instead of != was not the most fun, but looking back I definitely found that I learned a lot in this class. IF ABHISHEK IS TEACHING THEN DEFINITELY TAKE IT. He makes this class so much more manageable, not because its easier but because he works with you and with the class to make sure we are all where we need to be! He's wonderful! He is probably the best professor I've had at Yale so far.",
                "Required for the CS major, and although difficult, genuinely enjoyable to take with Abhishek",
                "This course was the most intellectually challenging course I've taken at Yale, and it's undeniable that how much this class consumes you during the semester you've taken it. I simultaneously have never learned and pushed myself this much in a computer science class. For this, it was extremely academically fulfilling to have taken this course. While it's a required class for computer science majors, I think the knowledge gained from this course was extremely enlightening.",
                "Only take it if you have to; it is a very intense class but you do learn a lot"
            ]
        },
        {
            "question_id": "YC601N",
            "question_text": "Please list any other mode(s) of learning, including any combination or variation of the above options.",
            "comments": [
                "N/A",
                "Office hours and project walkthroughs",
                "N/A",
                "Virtual office hours",
                "Office hours",
                "I attended lectures, which were also recorded, which was great because I could rewatch them multiple times (especially on the more confusing topics we covered). I also attended virtual office hours over Zoom.",
                "n/a",
                "I would usually watch the recorded lectures instead of attending the live virtual lectures.",
                "The course was set-up having live virtual-lectures that were recorded and could be watched later. There were also optional discussion sections about every two weeks that went along with the assigned readings (which were also optional).",
                "N/A",
                "None",
                "This class was taught through live virtual lectures, with optional extra reading material.",
                "Zoom",
                "Lectures were virtual and recorded, but you must attend them live to register for the class. Pauses are made for questions/clarifications.",
                "Live virtual lecture, plus a lot of live virtual office hours.",
                "None",
                "recorded lecture",
                "Lectures were synchronous on zoom, but they were also recorded",
                "Some live project walkthroughs and review sessions.",
                "live and recorded lecture as well as virtual office hours",
                "recorded lecture and virtual discussion section",
                "n/a",
                "na",
                "Lectures were recorded too",
                "Virtual walkthroughs for projects (problem sets), and optional discussion seminars and speakers for related topics to the course.",
                "There were also optional discussion sections held every other Friday (I believe) to complement the concepts that we were learning in class",
                "Extensive office hours and walkthroughs held by both Professor Bhattacharjee and assistant teaching staff."
            ]
        }
    ],
    "extras": {
        "title": " CPSC 323 01\n        SystemsProgramng&ComputerOrgzn "
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral"
            ],
            "sentiment_scores": [
                0.7243801951408386,
                0.8565032482147217,
                0.8501359224319458,
                0.5158771276473999,
                0.8536739349365234,
                0.6041910648345947,
                0.7876453995704651,
                0.8203892707824707,
                0.8483151197433472,
                0.5139079689979553,
                0.8313400745391846,
                0.8031038045883179,
                0.8427788615226746,
                0.5957265496253967,
                0.8414798378944397,
                0.8497254848480225,
                0.846924364566803,
                0.7952347993850708,
                0.7652276754379272,
                0.8234961032867432,
                0.7331088185310364,
                0.6010959148406982,
                0.8306482434272766,
                0.8554607629776001,
                0.828721821308136,
                0.8606474995613098,
                0.6045908331871033,
                0.7481709718704224,
                0.7250517010688782,
                0.8580877184867859,
                0.5316654443740845,
                0.8538169264793396,
                0.6931818723678589,
                0.8093993663787842,
                0.6550943851470947,
                0.8550364375114441,
                0.7986838817596436,
                0.8433685898780823,
                0.7353848218917847,
                0.8341243863105774,
                0.5592279434204102,
                0.8415337800979614,
                0.8351182341575623,
                0.5840556621551514,
                0.8565285801887512,
                0.7319811582565308,
                0.8071736693382263,
                0.6168661713600159,
                0.5353570580482483
            ],
            "sentiment_counts": {
                "neutral": 43,
                "positive": 6
            },
            "sentiment_distribution": {
                "neutral": 0.8775510204081632,
                "positive": 0.12244897959183673
            },
            "sentiment_overall": [
                "neutral",
                43
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral"
            ],
            "sentiment_scores": [
                0.8091288805007935,
                0.5795084238052368,
                0.8803758025169373,
                0.8029959201812744,
                0.865628182888031,
                0.5517308115959167,
                0.7636125683784485,
                0.6317076086997986,
                0.8413429856300354,
                0.7853620648384094,
                0.5134303569793701,
                0.7061188220977783,
                0.5347522497177124,
                0.5673916935920715,
                0.8336466550827026,
                0.7242008447647095,
                0.7165380716323853,
                0.7191203236579895,
                0.7414042353630066,
                0.6837093830108643,
                0.5068336725234985,
                0.774612545967102,
                0.7194680571556091,
                0.7776345014572144,
                0.7683214545249939,
                0.866919219493866,
                0.6123612523078918,
                0.7667161822319031,
                0.6920070648193359,
                0.6112926602363586,
                0.823710024356842,
                0.8262246251106262,
                0.6565983295440674,
                0.7226471900939941,
                0.7743178606033325,
                0.8653585910797119,
                0.5900675654411316,
                0.8020684123039246,
                0.7986117005348206,
                0.7997974157333374,
                0.6922697424888611,
                0.8013893365859985,
                0.8285594582557678,
                0.7560705542564392,
                0.7963905930519104,
                0.6890049576759338
            ],
            "sentiment_counts": {
                "neutral": 40,
                "positive": 6
            },
            "sentiment_distribution": {
                "neutral": 0.8695652173913043,
                "positive": 0.13043478260869565
            },
            "sentiment_overall": [
                "neutral",
                40
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.8370569348335266,
                0.7667338252067566,
                0.9226720929145813,
                0.7064468264579773,
                0.5075294375419617,
                0.7878813147544861,
                0.6012545228004456,
                0.8545995354652405,
                0.5783270001411438,
                0.8602852821350098,
                0.6494145393371582,
                0.49512192606925964,
                0.9112629890441895,
                0.5803520679473877,
                0.7377841472625732,
                0.9157915711402893,
                0.5334459543228149,
                0.8059127330780029,
                0.6853386163711548,
                0.8373309373855591,
                0.6098467707633972,
                0.8757792711257935,
                0.6864176392555237,
                0.9023178219795227,
                0.8914555907249451,
                0.9049530625343323,
                0.558577299118042,
                0.6845012307167053,
                0.7954595685005188,
                0.6523349285125732,
                0.5492554903030396,
                0.5978711247444153,
                0.6328164935112,
                0.7998138070106506,
                0.8151525855064392,
                0.8881969451904297,
                0.8652774691581726,
                0.8999459743499756,
                0.7674323916435242,
                0.8227212429046631,
                0.8297824263572693,
                0.6454933285713196,
                0.8871334791183472,
                0.5146040916442871,
                0.7669200301170349,
                0.5026537775993347,
                0.6925370097160339,
                0.5120807886123657,
                0.8366758227348328
            ],
            "sentiment_counts": {
                "neutral": 40,
                "positive": 9
            },
            "sentiment_distribution": {
                "neutral": 0.8163265306122449,
                "positive": 0.1836734693877551
            },
            "sentiment_overall": [
                "neutral",
                40
            ]
        },
        "final_label": "neutral",
        "final_count": 123,
        "final_proportion": 0.8541666666666666,
        "final_counts": {
            "neutral": 123,
            "positive": 21
        },
        "final_distribution": {
            "neutral": 0.8541666666666666,
            "positive": 0.14583333333333334
        }
    }
}