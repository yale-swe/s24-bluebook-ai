{
    "crn_code": "17213",
    "season": "202303",
    "enrollment": {
        "enrolled": 88,
        "responses": 56,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                2,
                10,
                20,
                15,
                4
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                2,
                15,
                20,
                10,
                4
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                1,
                4,
                18,
                23,
                4
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                4,
                10,
                19,
                11,
                6
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                7,
                25,
                16,
                2
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                5,
                22,
                20,
                3
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "programming",
                "Object oriented programming theory, Python, logging, tkinter, databases, testing, C++, design patterns, git, concurrency and refactoring",
                "I learned a lot about OOP and python. Also, I learned about code testing, coding techniques, and design techniques.",
                "I learned about various design patterns and gained experience writing Object-Oriented code in Python.",
                "Great class to practice coding-- big projects allow you to really think about the design of your code instead of just getting something to work like I've been doing in many of my previous classes.",
                "You learn quite a bit about Python programming techniques. I think this course was rather helpful in honing my coding practices. I'm certainly a lot more aware of coding styles and patterns now and able to distinguish between well-written and poorly-written code much easier.",
                "Various topics related to software engineering (Python, programming conventions, error logging, databases, GUIs, unit testing, Git, C++, Design Patterns)",
                "How to design and program object-oriented software.",
                "Highly practical in real life, I gained extensive knowledge about UML, Python OOP, and C++. I plan to apply these skills to assignments in other classes.",
                "Basic OOP concepts, python and c++ programming, how to structure object-oriented code, testing code. The topics in the second half of class felt pretty random.",
                "Lots of OOP concepts that'll help you to write a better, cleaner, industrial-standard, and modular code in general. A very useful class in terms of teaching you a skill, or a way of coding. A fundamental.",
                "I learned how to code in Python, how to code in a modular way, and the best practices for programming  especially when working in a collaborative environment.",
                "oop",
                "learned OOP concepts, design patterns, exceptions, C++",
                "general overview of Python, C++, and Java, design patterns, refactoring",
                "Knowledge of python trivia and object oriented programming. Insights into best practices for coding.",
                "OOP.",
                "how to write good, object-oriented code",
                "Object-oriented programming and proper software design.",
                "Object oriented design (primarily in Python, with exposure to C++ and Java), unit testing, design patterns, using databases/ORMS (SQLAlchemy) and GUIs (Tkinter). Git is also touched on.",
                "design patterns, python, debugging, refactoring, picking out code smells",
                "Object-oriented programming in python, GUIs in python with tkinter, unit testing, basic C++ object-oriented programming, and design patterns.",
                "I learned a ton about OOP which was incredibly helpful. I think if youre interested in SWE or just becoming a better programmer in general (in Python or otherwise) this course is a must. I had an internship last summer at a big tech company and almost everything I worked with was in Python, using all of the principles in this class. At the time I knew very few of these principles, and if i had taken this course before the summer, I wouldve done a lot better. Excited to return this upcoming summer and finally apply what Ive learned in this course.",
                "OOP",
                "Learned a lot of OOP techniques and applications that are actually really useful if you want to build software in a maintainable/more efficient way. Also lots of python techniques I hadn't seen before!",
                "Learned a lot about object oriented programming and other topics that are relevant to software engineering.  Got better at python.  Class is very good for people who know they want to do SWE.",
                "This class wasn't that useful aside from learning more python and c++. Most of the stuff you learn is searchable and I don't see a point in memorizing the stuff that we learned",
                "The class has a C++ assignment  I definitely wasn't expecting to learn C++ (I took 223 before C++ was in it), but I imagine most people nowadays would know it. I definitely learnt a few interesting things about Python, but mostly I learnt how to test properly  something that really does come in useful, and a lot of OOP paradigms.",
                "By taking this course, I was able to get a good overview of object-oriented programming while practicing the different skills taught during lectures. As the subject suggests, I was able to improve my programming skills by learning proper code organization and best practices.",
                "I learned about foundations in object oriented programming and design patterns.",
                "python, c++, github, uml diagrams"
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "good problem sets, lectures are mid",
                "Weaknesses: Timothy Barron has a terrible teaching style and extremely unlikeable personality. Lecture content only posted after lecture which required students to attend the lecture (due to mandatory attendance policies) and force them to re-watch the lecture recordings because it was impossible to take notes on the code effectively. No practice exams, which made it difficult to prepare for exams. Strengths: content was practical but not taught in an engaging manner.",
                "Strengths: it teaches you OOP. Weaknesses: I feel like Python may not have been the best language to teach the course in. I know the arguments for it stated by Professor Barron, but there were just a lot times when an OOP concept was introduced and it was qualified with Python doesn't enforce it or you have to do this specific thing to get it working in Python. I feel like a more OOP structured language would have helped me understand the concepts better than having to also understand the Pythonic way of doing things.",
                "This course was interesting and helped me develop useful skills that I will bring to future Computer Science courses.",
                "The lectures were pretty dry and hard to follow. I also found the tests to be fairly difficult in comparison to the rest of the class.\r\n\r\nI did like how the problem sets built on each other.",
                "Strengths: I think that the assignments overall were good. The required knowledge was taught beforehand and each assignment seemed well-designed.\r\nCons: The lectures were required but are a drag to get through in person. I also just don't really get why this class has tests. I felt like the final especially was trying to force objectivity and conformity into coding practices where there wasn't any.",
                "Strengths: All the material taught in this class would be useful in a real software engineering job setting. The PSETs are not overly stressful. \r\n\r\nWeaknesses: The grade breakdown is very strange and is difficult to adjust to at first. For example, we have to take quizzes after each lecture which account for 15% of our grade. Each of the quiz questions covers an extremely obscure point that was mentioned briefly during lecture. Additionally, the lectures are unengaging, since the slideshows themselves are not substantive and the live coding is very hard to follow along with. You will have to do a lot of self-learning in the course.",
                "Strengths: The practicality of the topics covered (including Git and design patterns)\r\nWeaknesses: Sometimes programming in lecture would not follow a straight trajectory (ex. lots of bugs would pop up) which made code hard to follow in real-time",
                "The class is highly conceptual; at times, certain topics involved pure brute-force memorization. However, the assignments proved to be quite useful.",
                "Weaknesses: 1) SO BORING. Tim is by far the most unengaging lecturer I've had at Yale, yet he enforces attendance with attendance quizzes. 2) He does way too much live coding, which is confusing and hard to follow. 3) There are also quizzes on the content after every lecture with 5-7 questions, which are so stressful because if you forget to do one it really hurts your grade. 4) Students who do well in this class are those who come in with a solid amount of knowledge in the material already.\r\nStrengths: It's a little easier than other CS electives, workload is manageable if you don't wait until the last minute on psets.",
                "Strength is that it trains you to be a better coder with these cool OOP concepts. You learn a lot. Downside is that there's way too much \"going over example code\" in the second half of the course that it's an automatic dozing off whenever code is pulled up on the screen.",
                "Strong course content, good pacing, and difficulty of assignments was challenging but not in an overwhelming way. Lectures were dry, and mandatory attendance did not have its desired effect. Quizzes after each class also felt unnecessary, especially when they were not uploaded in a timely manner. Feedback on problem sets was very slow some assignments took an incredibly long time to grade and receive back.",
                "weakness: I hope the instructor can explain things in clearer way. There are technical details that he may not assume students know in advance.",
                "this class was ok. psets were not very hard, though wish the spec was more specific.",
                "The quizzes felt like they were for the students' learning and the Ed discussion website was resourceful",
                "Great class with a very high usefulness to workload ratio. I have no suggestions, other than that teaching the class in another language like C++ or Java might be neat.",
                "I don't think the tkinter work was compelling or helpful. I would cut the GUI from the 3rd pset and spend the lecture time elsewhere.",
                "Strengths: Content is interesting + useful and I feel I'll use stuff I've learned for years to come despite not being a comp sci major\r\nWeaknesses: Slides are terrible, not very well-taught, no practice exams, don't think Professor Barron is passionate about the subject. He much prefers computer security and as a result, the course isn't very engaging. I never could follow the code he was showing, it was just too boring",
                "Good for learning.",
                "strengths: some of the stuff you learn is quite applicable, can make GUIs\r\nweaknesses: i feel like the C++ was not necessary, was overfocused on the exam",
                "Code examples were long and hard to follow.",
                "This course teaches you very practical knowledge that would be useful on your own coding projects or in the industry.",
                "Lectures arent great. They consist of slides with a bunch of bullet points that Professor Barron reads off, and then a bunch of code through which he scrolls and talks about. The slides are fine, except that Professor Barron doesnt go into much depth and because of that its hard to fully understand concepts during class. There is potential for the code covered in class to help with understanding but honestly its hard to get anything out of it without going back to lecture recordings and really taking a close look at whats happening in the code. This being said it wasnt completely possible to stay up to date with content just by attending lecture and paying attention, plus Professor Barron isnt very engaging and the code is hard to follow in real time.",
                "Strengths: Organized, Good Slides, Enjoyable Assignments\r\nWeaknesses: Lectures arent live streamed",
                "Strengths: all of the information is very useful and presented in an organized manner.  The professor is unforgiving but fair.  Python is super useful and I would absolutely defend the use of Python for a class on OOP.  I especially liked that the last assignment\r\n\r\nWeaknesses: lectures could be boring, the lecture quizzes were kind of a \"gotcha\" of actually remembering to do them and didn't really do much for me.",
                "strengths: The course is well structured and pretty straightforward in terms of homework and tests as long as you come to lecture.\r\nweakness: The professor is a bit boring and monotone so I've fall asleep or stopped paying attention quite a bit in lecture and I end up having to rewatch it",
                "Strengths are definitely course structure  very clear, easy to understand how to get the grade you want. Professor Barron can be a little uninteresting at times but he knows his stuff, and his explanations are generally quite good. He clearly isn't reading off a script, something which can't be said for many professors here (what a low bar !). The homeworks make sense, and are not overly difficult or overly easy. Weaknesses: I feel as if *far* too many coding paradigms / patterns are essentially thrown into the course for the sake of it, leading you to have a superficial understanding of all of them  having a far better understanding of less of them would be far better. Additionally, Barron is quite smart  not necessarily a problem, but his higher plane of existence means that it is often quite easy to lose track, especially with the sheer amount and pace of content.",
                "This course was well-paced and decently structured, and the course lectures explained concepts well using both slides and live coding demonstrations. The provided supplementary material was also really helpful in explaining concepts further that may have been more confusing.",
                "This class is a lighter workload than the other coding classes I have taken while still being engaging and teaching me a lot. I will say the quizzes are not something I feel I benefitted from.",
                "good comprehensive content for oop, but class environment not that great, could offer more resources and support, office hours were also crammed with 1 ta for far too many students"
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "definitely, best class for practical CS skills",
                "Only if they want/need to learn the coding techniques. Lectures are atrocious (very boring with no attempt at making them engaging). Learn from the TA's and the psets. Class would be a lot better without exams. Professor is truly one of the worst I've had at Yale: actively hostile which made for a very poor learning environment (e.g. constantly combative with student inquiries, generally a very unpleasant personality, etc.). Class would greatly benefit from a different professor. One example, professor made us tap our IDs during exams, as if students would actually have someone else to take their exam; the principle of this is very aggressive, showing how little trust he had in his students and the power trip this professor was on. I heard that he reported various students to ExComm without informing them or allowing them to explain, which is simply inappropriate. Very unaccommodating, generally; did not post lecture slides/code before lectures which made it impossible to follow along at times (despite MANY students requesting that he change this). Professor clearly emphasized grades over learning, which is disappointing. Also mandatory attendance, just speaking to how boring lecture was. Sad because this class content is very practical.",
                "Yes, this is a great way to learn about best practices for programming.",
                "It's a helpful course and the skills are definitely very applicable. I think my programming ability and style has improved significantly.",
                "No. I think there are better CS electives that you can take.",
                "It feels like a good class to get an idea of what software engineering looks like. It is a good class if you have the time for it, otherwise it's a class to get through.",
                "Yes if you're going in industry, especially if you will code in Python.",
                "The content of this class is very useful to anyone who plans to become a software engineer. However, there are many aspects of the organization and teaching style that I was not a fan of. The lectures are not helpful, and you will likely have to do a lot of self-learning. Be aware that this is not a \"gut\" class, despite the relatively low workload rating.",
                "Yes; especially if they are interested in software engineer good practices.",
                "Yes",
                "NO. Take a different CS elective instead. It's genuinely such a boring and frustrating class. If you really want to learn OOP, I recommend doing it independently.",
                "Yes. OOP concepts and coding tips you get to learn will greatly improve your fundamental knowledge in the field. Trust me on this one.",
                "One of the few Yale CS classes with real-world applications. Definitely take this  and early  if you're looking for jobs or internships as a SWE or PM. For those students pursuing the certificate, this is a much more manageable alternative to other classes in the course.",
                "there were some things i already knew going into this class, but if you don't know anything about testing, c++, or oop concepts, it can be helpful",
                "I would recommend it to students who are looking to build more programming experience and are looking for a formal introduction to Python",
                "Absolutely. This course taught me a ton and was not a lot of work relative to other CS courses. I highly recommend this course to any student interested in learning more about programming best practices and object-oriented programming.",
                "Good course. Will improve your Python. Lectures are unfortunately not extremely engaging, but the psets are well designed.",
                "Yes, if you want to write better code",
                "I would definitely recommend this course - in my opinion, it's one of the most practical courses in the CS curriculum. I wouldn't be opposed to making this a required course. It will make you a better programmer - not because of suffering through C and memory management - but because it adds tools (design patterns) and experience (OOP, unit testing, ORMs, GUIs, Python, git) that are applicable to just about any area of CS you go into. This has real value because it will teach you best practices, and expose you to programming at a higher level of abstraction than directly with the OS.",
                "sure, if they are cs. i dont think this is a gut as most make it out to be. was surprisingly hard",
                "I think the skills taught in this course have greatly improved my ability to design larger programs that require object orientation.",
                "If you want to learn object-oriented programming in Python, then take this course. Just note however that you could also learn all of this content pretty easily on your own. But I guess actually taking the class forces you to learn it.",
                "I would recommend this course but only because the content is valuable and necessary to become a skilled programmer especially if youre interested in SWE. I feel like it should be a required course in the major honestly. Lectures arent great and neither is the professor, but its a fine and manageable course. It is NOT A GUT, however!! Its been advertised as such among students in the CS major but its honestly a bunch of work and you should be prepared to spend a good chunk of time on the psets. Also the exams are legit exams and you just have to know all the content. Definitely not like.. 365 or 223 level of work but a good amount. So, yes Id absolutely recommend it but dont expect to be happy with the course and how its taught all the time, go into it knowing youre gonna do some work but that its valuable information.",
                "Yes Tim is great and covers a lot of interesting stuff. Great for getting better at python and writing good code.",
                "If you know you want to be a Software Engineer this course is an absolute must -- I'm not sure why it isn't required for the CS major as its paradigms are everywhere in software development.  I feel much more confident going into my summer internship as a result of having taken this course.  Be prepared to stay on the ball with the class -- it isn't curved, and the exams are certainly not easy, so you have to do very well on the psets.  It isn't that intellectually challenging but there are minutiae that are very key to remember.  If you are not interested in going into software development and you care more about the theory of CS, there are better electives, but this isn't terrible or terribly hard regardless.",
                "No not really. This isn't fully a gut class and the stuff being taught isn't that useful for CS. Coursetable said this was a 3.1 workload when I took this class but it has to be higher. I spent so much time on the GUI Homework that I had to cancel my fall break trip :(",
                "I think this class is *okay*. Barron is a competent, clear lecturer, with a great understanding of what he is teaching, but he won't be the most engaging lecturer during your time here. The concepts are definitely quite applicable to real life  OOP is everywhere nowadays, and this class gives you a solid understanding, along with lots of interesting assignments about things like testing, which are also VERY important. The workload is not super high  the assignments are all 5-10 hours-ish (aside from a very long last assignment  make sure to organise your time for that, it kinda came out of nowhere), and the tests are fair. The class also has mandatory attendance (enforced via in-class quiz), and after-class quizzes, some of which can be quite nitpicky, but on the whole, it's a well organised, not overly difficult but good introduction to OOP.",
                "I would recommend this course to another student if they do not have much knowledge on object-oriented programming, as this course starts from the basics of the subject (being too familiar with object-oriented programming may make the course less engaging).",
                "only if you need to learn oop"
            ]
        }
    ],
    "extras": {
        "title": "CPSC 327 01 - Object-Oriented Programming"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "negative",
                "positive",
                "positive",
                "neutral",
                "positive"
            ],
            "sentiment_scores": [
                0.5560055375099182,
                0.5650746822357178,
                0.6812687516212463,
                0.5611263513565063,
                0.9193017482757568,
                0.9182977676391602,
                0.7077009081840515,
                0.6539276838302612,
                0.8644315600395203,
                0.8399490118026733,
                0.9206548929214478,
                0.5160513520240784,
                0.6673133969306946,
                0.6389510631561279,
                0.5716904401779175,
                0.5882362723350525,
                0.789412260055542,
                0.5503218770027161,
                0.5052756071090698,
                0.589478611946106,
                0.5343265533447266,
                0.618556022644043,
                0.966217577457428,
                0.6452672481536865,
                0.9483227729797363,
                0.9279726147651672,
                0.7611165046691895,
                0.6437099575996399,
                0.8472259044647217,
                0.6535342335700989,
                0.5323286056518555
            ],
            "sentiment_counts": {
                "neutral": 15,
                "positive": 15,
                "negative": 1
            },
            "sentiment_distribution": {
                "neutral": 0.4838709677419355,
                "positive": 0.4838709677419355,
                "negative": 0.03225806451612903
            },
            "sentiment_overall": [
                "neutral",
                15
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "negative",
                "negative",
                "neutral",
                "positive",
                "negative",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "negative",
                "positive",
                "negative",
                "neutral",
                "positive",
                "positive",
                "positive",
                "negative",
                "positive",
                "neutral",
                "positive",
                "negative",
                "positive",
                "negative",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "negative"
            ],
            "sentiment_scores": [
                0.5462145805358887,
                0.7687087655067444,
                0.6437632441520691,
                0.9242367148399353,
                0.5812579989433289,
                0.4552884101867676,
                0.4947286546230316,
                0.7580549716949463,
                0.5634309649467468,
                0.5470401644706726,
                0.6392229199409485,
                0.6523652076721191,
                0.7485541701316833,
                0.641274094581604,
                0.5882013440132141,
                0.7025994062423706,
                0.8438191413879395,
                0.6625351905822754,
                0.6295078992843628,
                0.4632628560066223,
                0.6853422522544861,
                0.5819327235221863,
                0.7853978276252747,
                0.7109845280647278,
                0.8529585003852844,
                0.5680169463157654,
                0.48517045378685,
                0.7391183376312256,
                0.6380942463874817,
                0.7614735960960388
            ],
            "sentiment_counts": {
                "negative": 9,
                "neutral": 10,
                "positive": 11
            },
            "sentiment_distribution": {
                "negative": 0.3,
                "neutral": 0.3333333333333333,
                "positive": 0.36666666666666664
            },
            "sentiment_overall": [
                "positive",
                11
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "positive",
                "negative",
                "positive",
                "positive",
                "negative",
                "positive",
                "neutral",
                "negative",
                "neutral",
                "neutral",
                "negative",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "negative",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "negative",
                "positive",
                "neutral",
                "neutral"
            ],
            "sentiment_scores": [
                0.8311933875083923,
                0.8133742213249207,
                0.8851506114006042,
                0.9653964638710022,
                0.5348537564277649,
                0.616654098033905,
                0.7374311685562134,
                0.6172426342964172,
                0.6378936171531677,
                0.895555853843689,
                0.8901238441467285,
                0.898232638835907,
                0.7058516144752502,
                0.6551733613014221,
                0.681463360786438,
                0.9144771099090576,
                0.8652560114860535,
                0.6614528298377991,
                0.9178276658058167,
                0.7154096961021423,
                0.8890880346298218,
                0.7209203839302063,
                0.6171272397041321,
                0.9210091829299927,
                0.8503891229629517,
                0.8202248215675354,
                0.5885052680969238,
                0.6536322832107544,
                0.6911383271217346
            ],
            "sentiment_counts": {
                "positive": 14,
                "negative": 6,
                "neutral": 9
            },
            "sentiment_distribution": {
                "positive": 0.4827586206896552,
                "negative": 0.20689655172413793,
                "neutral": 0.3103448275862069
            },
            "sentiment_overall": [
                "positive",
                14
            ]
        },
        "final_label": "positive",
        "final_count": 40,
        "final_proportion": 0.4444444444444444,
        "final_counts": {
            "neutral": 34,
            "positive": 40,
            "negative": 16
        },
        "final_distribution": {
            "neutral": 0.37777777777777777,
            "positive": 0.4444444444444444,
            "negative": 0.17777777777777778
        }
    }
}