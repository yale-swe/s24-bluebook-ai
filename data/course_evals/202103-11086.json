{
    "crn_code": "11086",
    "season": "202103",
    "enrollment": {
        "enrolled": 223,
        "responses": 166,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                2,
                5,
                16,
                49,
                71
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                6,
                19,
                29,
                42,
                50
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                2,
                9,
                23,
                55,
                56
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                3,
                12,
                25,
                58,
                47
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                3,
                16,
                69,
                61
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                6,
                31,
                112
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "I learned so much about computers and programming. This course really teaches you how to think and solve problems and also how to Google lmao.",
                "I learned the basics of computer science.",
                "Some programming languages",
                "I learned many different languages that immensely deepened my knowledge of coding and computer science.",
                "Comprehensive introduction to computer science, in particular, C and Python.",
                "I learned a lot: 6 programming languages.",
                "Introduction to coding",
                "Basic programming knowledge and how to think about it logically",
                "Introduction to CS topics and coding",
                "The basics of coding",
                "I learned how to \"think\" in code (coding logic is different from everyday thinking). In terms of languages, we learned C and briefly touched Python, HTML, CSS, Javascript, SQL, and Scratch. Much of this course requires effective Googling, since computer science is so broad and there is only so much a professor can cover in 3 hours.",
                "I got an overview of several CS languages, and learned the basics of programming that will allow me to continue to learn on my own if I want to. A lot of computer science knowledge is available online, but I learned which things to search for online that I would not otherwise be able to search for or understand.",
                "I had never taken CS before. So all the work was new. I learned basic concepts in C, Python, SQL, HTML, CSS, and Javascript, in addition to more general programming principles. I also learned how to take advantage of office hours and manage time on problem sets.",
                "I went from barely knowing any programming to being able to use C, Python, SQL, HTML, CSS, and JavaScript, being able to make a website at the end of the semester.",
                "If you take this class, you are going to learn a lot. Honestly, I think everyone should take this class because it is so much more than just programming. At face value, you get a nice introduction to 5 important languages in the world of programming. Beyond this, you gain skills in effective problem solving by yourself (which I personally believe is really important in one's ability to adapt to Yale's curriculum), methodical thinking, problem decomposition, and so much more. In essence, this class will teach you how to find the solutions to problems that nobody else can because often in computer science you will get errors that the T.A.s may never have seen. I think you'll also quickly learn that, like with all classes surrounding innovation and problem solving, learning how to program is a process and can't simply be taught in lecture. You need to practice programming and keep working at it until you have developed your own identity as a programmer and personal approaches to problems. If you're someone like me who wants to know exactly what to do the second I see a problem, you will find it annoying to program at the beginning because there are a lot of errors in computer science and so many ways to approach problems. You're going to need to develop enough mental fortitude that you can grind through a problem even when your first few tries lead you nowhere.",
                "I learned the basics of coding in different languages.",
                "basic programming skills, greater comfort with the concepts of CS in general",
                "I learned how to program. In particular, we used the languages C, Python, SQL, HTML, CSS, and JavaScript in class. However, I am quite confident in my ability to learn a new programming language on my own as a result of taking this course. I had to do this for my final project, and it went incredibly well. You learn a great deal in this class.",
                "I learned the basics of computer science, how to learn new coding languages, and got an intro to a couple different languages.",
                "You don't learn any of the languages in depth, but you develop a basic understanding of C, Python, JavaScript, CSS, HTML, and SQL. You also learn to to think about programming and approach problems.",
                "This course was a truly intense introduction to programming and computer science. In just the first couple psets, I was already struggling to complete it in time. I had thought that this class might be too difficult for me and even considered dropping it. I didn't feel like I was learning anything, but instead just seeking assistance and barely pulling through each assignment. But now that I reflect on the semester, I realize that I probably learned more content in this class than any other class from this semester. I can now read and interpret other people's code pretty quickly, reason out a code's purpose even if the language is foreign to me, and apply basic logical reasoning that I learned while taking CS50 to various other processes in my life.",
                "I learned a lot of new programming languages as well as problem solving skills.",
                "I developed logical thinking skills as well as knowledge of C, Python, JavaScript, HTML, and CSS programming languages.",
                "I learned how to code in C, Python, JavaScript, CSS, HTML and SQL. I also learned the basics of how a computer actually runs a program, including the compiling process and memory allocation. The course also gives a brief background on how a computer sends and receives information in the form of bytes.",
                "Basic coding knowledge and skills, as well as problem solving across a number of different coding languages",
                "Coding skills in C, Python, Java Script, SQLite, and HTML. Gained an idea of run times, memory allocation, and how websites work.",
                "I learned how to program in C! Also, I learned how use HTML, JavaScript, Flask and Bootstrap to create my very own website. I also learned how to store data in a SQL database, which I also used in my website. This course forces you to break bigger problems into smaller, more \"digestible\" pieces.",
                "I gained a glimpse into a variety of Computer Science languages and a glimpse into what life might look like if I chose the path of a CS major.",
                "Learned foundations of coding as well as the logic of coding. I feel I can now look at any piece of code and understand what's happening. Pretty cool that I am able to build a fully functioning website with a front and back end after just 3 short months.",
                "Beginner coding and project development.",
                "Basic computer science skills.",
                "I learned about the concepts of functions and variables and how they're implemented in C; arrays in C; basic search algorithms and big-O notation; memory allocation and pointers in C; some data structures and their implementations; Python translations of these concepts, including lists, dictionaries and sets; cybersecurity concepts; SQL databases and queries; web design with HTML\/CSS\/JavaScript; and the Flask web development framework.",
                "programming skills",
                "Analytical thinking, different programing languages, efficiency during computer programming, methodological problem solving.",
                "General information about computer science.",
                "I learnt how to code various different coding languages and how to problem solve",
                "Quickly gained basic coding experience in a variety of languages.",
                "Coding skills in multiple languages, including C, Python, Java, HTML, and SQL",
                "I learned basic computer science skills across multiple programming languages. I think that this has given me a independence and ability to learn to code further.",
                "I learned a lot of coding\/programming skills. A really good foundation in many languages. There are tons of things I can do now that I had zero idea how to do before this course, and even more that I know I can learn on top of my new knowledge.",
                "Understanding of computer programming from the ground up",
                "This course has taught me the basic knowledge of computer science in an exciting way.",
                "Basics behind programs such as HTML, Python, C, SQL. Learn to approach problems and problem solving in a logical manner.",
                "Fundamental understanding of programming. Learning how to read, write and debug code. Introduced to a variety of languages.",
                "The fundamentals in a wide variety of computer coding languages. A good understanding of how coding works.",
                "I was able to familiarize myself with many different coding languages",
                "I learned a little bit about what it's like to be a programmer\/web designer? I don't want to go into computer science whatsoever but it was nice to have a little insight into how it works in case I ever work or interface with CS people. .",
                "I learned how to program in a massive range of languages, I learned many pieces of the basic functionality of computers and computation, I learned how to get programming languages to work together effectively, and I learned how to better teach myself new languages.",
                "Learned a bunch of programming languages (SQL, python, C, JavaScript, and more), a valuable introduction to the thought process involved in programming",
                "It was a really fast paced introduction to a slew of relevant coding languages. Taught me how to think like a coder.",
                "We learned a bunch of different coding languages. This course was so relevant and introduced me to the world of CS which is now my major!",
                "I learned how to code in multiple languages and creatively problem solve",
                "I learned the foundations of coding in multiple languages and the logic behind coding.",
                "Computer programming in C, Python, JS",
                "Fantastic course! Gained a workable knowledge of how programming works \"under the hood\" and the ability to self-teach advanced concepts in the future. Programming in C, Python, and SQL was covered, as well as web development through HTML, CSS, and Javascript.",
                "Aside from learning five new languages, you walk away from this course with the ability to think in a whole new way. The logical skills you develop in this course serve you in areas both inside and outside computer science.",
                "I learned the fundamentals of coding in a series of languages. I got a start learning web development as well.",
                "This class taught me how to code and think systematically.",
                "Basics of C, Python , HTML\/CSS, JavaScript, web applications with Flask, SQL, and more!",
                "I learned a lot of computer science.",
                "I gained a fundamental familiarity with C, Python, JavaScript, CSS, and HTML. In the future, I'm sure it will be much easier for me to pick up other programming languages because I understand the logic behind them.",
                "How to use office hours, plan out projects, code in a variety of languages",
                "Learnt a lot about computer programming in a bunch of languages",
                "I learned an introduction to computer science. I learned how computers and memory works along with multiple programming languages.",
                "Gained a broad, general understanding of computer science",
                "New programming knowledge,",
                "I developed a stronger understanding of computers and how computer languages\/instructions are written and executed.",
                "Through this course, I was able to improve from having no programming experience at all to implementing a final project of my choosing. I think it's truly astonishing how much the course covers in terms of the languages we learn and how we're able to use these languages as well.",
                "Quantitative problem solving, programming, learning what I have to do\/who I have to go to in order to solve problems. Prioritizing parts of problem sets.",
                "This course taught you the basics of everything within topics such as C, arrays, sorting algorithms, data structures, memory allocation, python, SQL databases and querying, web development, and flask. By the end, I was able to create a fully fledged website as a final project.",
                "Along with languages like C, Python, SQL, JavaScript, CSS, HTML, and Flask, CS50 teaches you how to think like a programmer. I came into this course not having been exposed to coding at all, so there were a lot of confusion and challenges throughout. How to overcome these challenges is something that the course staff address and instill into their students  -- that is an invaluable skill.",
                "a lot of coding skills",
                "I learned how to think more methodically; this is something I had trouble with, as I am a very humanities-heavy person. It was like learning how to think a different way than I was used to.",
                "I learned a solid basis in computer science",
                "A lot of learning occurred in this course. Not only due to the fact that this course covers such a wide range of topics and languages in cs, but also was a very useful introduction into how to take a cs course, how to problem solve, etc.",
                "The basics of coding and a new way of thinking.",
                "To code in most languages",
                "I learned how to write code in multiple programming languages.",
                "Programming in various languages (C, Python, CSS\/HTML, etc.) as well as understanding of several computer science concepts.",
                "Basic coding skills and knowledge",
                "Expose to several programming languages (C, Python, SQL) and computer science concepts such as data structures, problem solving skills",
                "This course has honed my skills in several coding languages like Python, C, HTML, CSS, and JavaScript. It has taught me both front-end and back-end coding.",
                "Learned the basics for programming in several languages, and some insight on how to quickly learn other computer languages-- taught the underlying logic.",
                "Programming skills",
                "I basically learned how to program from zero. In this course, we learned a lot of programming languages: C (for the most part), Python, Java, HTML, and CSS. I gained the ability to read, comprehend, and write code, which is something I had no idea how to do before this semester. I gained a lot of critical thinking and problem solving skills, and I think this class was where I saw the most growth.",
                "I developed a deeper understanding of some of the most fundamental aspects of CS\/tech while also gaining practical CS skills that have allowed me to now be able to build my own websites and apps and effectively learn languages on my own.",
                "Understanding of C, Python, HTML, CSS, Flask, somewhat of Javascript, Big time notation, algorithms, etc\r\nHow to create a website, program, etc",
                "-how to create a website",
                "I learned a beginner amount of coding.",
                "I gained an extensive introduction to languages like C, Python, HTML, CSS, and Java. This course gave me some fundamental skills in learning new coding languages; not only have I been taught how to use a handful of languages, but I also have had a good deal practice debugging and troubleshooting problems on my own.",
                "A lot of coding skills, mostly in C but also some Python, SQL, and HTML. I do also think that I gained a new perspective on problem-solving by the end of the course that I didn't have at the beginning. It's kind of hard to explain but I think coding requires a somewhat specific method of thinking that I became more well-versed in by the end of the class.",
                "How to code and debug codes.",
                "how to code and coding principles.",
                "In this class, I gained the basic knowledge of how a computer works internally as well as a variety of programming languages and scripts including Scratch, C, Python, SQL, HTTP, JavaScript, CSS, Jinja, and Flask. I learned how to solve a variety of problems using various methods of logic that used different concepts within programming and gained the insight to approach problems and goals with logic, planning, and the ability to create something with both frontend and backend components.",
                "Coding in a lot of different languages.",
                "How to write in C, Python, SQL, HTML, CSS, JavaScript, and Flask while also exploring different topics such as algorithms and memory.",
                "I learned the basics of a handful of coding languages, including C, Python, Flask, HTML and CSS.",
                "While this course introduced me to a wide range of programming skills and computer science knowledge, the biggest thing I am taking away from this course is how to persevere through tricky problem sets and how to ask for help.",
                "I learned so many languages! SQL, python, c, HTML, java, and bringing all those elements together."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Strengths: Learn a ton, are exposed to hella languages, TA's are awesome, engaging and interesting problem sets. Weaknesses: Watching a 3 hour lecture every monday blows, tons of work obviously.",
                "Most people in this course cheat because the workload is unmanageable alone. This makes it really frustrating for the people who want to do the work on their own but know the curve will be messed up and feel forced to cheat as well.",
                "Strength is you \"learn\" a lot I guess. Weakness is the workload is unbelievably high and the class moves so quickly. Could be improved by offering a separate course for people who are completely new to computer science and\/or are not going to major in computer science so that it could actually be closer to their level.",
                "This was one of my favorite courses ever taken. Although it was a lot of work, I learned far more in these past few months with this class than I had with my previous summer of computer science.",
                "Huge Psets, but they are very well designed",
                "Strengths: you learn a ton. The TA's are the backbones of the course\r\n\r\nWeakness: there is an abysmal amount of work to do for this class. I literally never had a weekend if there was a Pset due because this class is so demanding.",
                "Strengths: I learned how to code effectively in multiple languages. Weakness: sometimes, the gap between lecture and psets was a little extreme, especially towards the end. Also, this is really small, but I wish the links in the cs50 page would automatically open a new tab when I clicked on them. It got kind of annoying.",
                "The class covers way too much material in short periods of time. Homework is too demanding for what was seen in classes. sections don't add much value just repeat same things. It would be better if sections go over different codes (new to what was part in the lecture) to better prepare us for psets.",
                "Amazing professor, although online classes",
                "Weaknesses: it's basically the exact same course every year. It feels very robotic and rehearsed.",
                "Strengths: you learn a lot really fast, weaknesses: its hard to keep up and put the proper amount of time in. I didn't learn a lot in lectures, I learned a lot in office hours with TAs.",
                "Professor David Malan is a phenomenal lecturer - he is able to break down complicated concepts for newcomers to computer science. It is extremely well-structured, since everything is organized well on the CS50 website. The course moves very fast and has high workload, but you learn a lot.",
                "This course is really good at giving and overview of CS. It was clear that it has been taught many times and therefore covers all of the basics that a student may need to understand the topics. It was also super organized, which was great because it left me to only worry about the actual material and not anything else. The TAs were all very helpful during the numerous office hours each week. One thing that could be helpful is some kind of review each week leading up to the test on the languages we are no longer working on because it is easy to forget the specifics of the previous language when working on a new one.",
                "The course is great. Every week is challenging but super interesting. The lectures are engaging, although not always super helpful for completing the problem sets. One big weakness was my discussion section. I think it could have been super helpful, but mine wasn't really. It was also a bummer that it's taught at Harvard because watching online isn't as fun.",
                "Strengths: Very informative lectures covering a wide array of topics, in addition to labs that helped go over concepts needed for PSETS.\r\n\r\nWeaknesses: there were a few PSETS where it felt like the content discussed in the lecture didnt correspond to the information needed to complete the PSET. In addition, it felt like barely any time was dedicated to JavaScript when it was needed for two PSETs and the take home test.",
                "Strengths: This class teaches you things that I can't really describe in words. It can be really difficult, especially if you're a beginner, but I really hope they don't change this because you walk out of this class with skills that I don't think any other class will teach you. The truth is that there really isn't an introduction into computer science. Sure, you can slowly learn individual aspects of programming, but the challenge of computer science is not actually learning the code, but how to implement that code. I could write 100 \"for loops\" that print my name, but if you want to learn how to write unique programs and solve ambiguous problems, you need to jump into the deep end and stay afloat. There is plenty of support at office hours and the great thing about computer science is that there are so many online resources. CS50 will provide you with knowledge on decomposing errors and you should always practice your problem solving by applying that knowledge, but also know that you can see if people have had similar errors online when writing their own programs. \r\n\r\nWeaknesses: I don't think there are many weaknesses to the class, but be warned: THIS CLASS HAS A LOT OF WORK. I disliked this at the beginning but eventually realized that you need this much work to actually learn about effective programming and problem solving because it's something that comes with practice. I would recommend taking this class concurrently with classes that have a lighter course load because if you actually want to learn how to program, this class will take a big chunk of your time. I definitely found myself sitting down for hours each week testing multiple approaches to problem sets. This class is also not tailored to the \"weak-willed\", especially for beginners, and I'm not saying this to be rude. I think that if you have a combination of a lack of interest in computer science and a tendency to give up when faced with seemingly unsolvable problems, you will not make it to the end unless you change your mindset. Fortunately, this is possible (I like to think that I was one of these people). I was not highly motivated at the beginning and was frustrated that I was struggling only 3 weeks in. I even considered dropping the class, but I'm glad that I didn't. Sometimes, you want the computer to do something, and it just tells you NO. You have to accept that, realize that programming takes a lot of individual critical thinking, and approach your problem once more. Also, getting an understanding T.A. is a lottery ticket. Fortunately, my T.A. was very kind and would even meet with me outside of class to help me with problem sets when I couldn't make it to office hours, but there are other T.A.s who derive pleasure from sliding a nice 0 for grading into the design portion of your problem sets (ok, maybe not to this extreme, but I have heard of some T.A. horror stories). I also wish we had a little more time for our final project because I was having a lot of fun with it, but I understand that it's already difficult enough to fit in all that this course teaches you in such a small time window.",
                "It gives a broad overview and an introduction to coding, so it is a good way to get introduced to programming. Weakness is that it is not taught at Yale but at Harvard, and we just watch lecture videos. The instruction is either via video or through student TAs, so I felt that the class was not engaging.",
                "Strength: we really cover A LOT of material in this class. I still find it funny that every time I tell a CS major that we learned flask in one lecture, they would be absolutely shocked ...... but I think professor Malan is truly a great lecturer and makes most of the concepts very accessible - there's no way I could have listened to a three-hour lecture if it wasn't for his engaging, concise style. I also appreciate how we have a lot of support for the class material: some of the CS50 TAs are just angels - intelligent, funny, and patient. The course heads have also been very attentive to students' feedback to make sure everyone is following along. Moreover, even though sometimes the concepts are (really) challenging, I've felt the psets (and even exam questions) are actually pretty fun, because they are application-based and feature real-life scenarios where you can see what you've learned manifesting into a concrete result, which is really rewarding and provides huge motivation to move on to the next topic, not to mention how I've been cheered up more than once by the CS memes featured in our weekly updates - \"it doesn't work - why? it works - why?\" In general, although I do feel this class is challenging and at times stressful, there are a lot of attempts to make it fun and engaging and it ends up worth the effort.\r\n\r\nWeakness: I do feel we are moving a little bit too fast at times. When we are just starting to get the hang of pointers (or maybe we are not), we have to move on to something else already. Maybe taking the time to consolidate what we've learned would make us feel less disoriented at times. Also, this might be part of the nature of the course, but i feel it would be hard for one to discover the joy of programming in this class, unless one is really set to find it (or one just really needs the credit). That is, this class might have gone a little too far on the \"challenge\" axis and could be prohibitively difficult for someone who just wanted to dabble in CS to test the waters - as is often the motivation when people take an intro class. I was lucky enough to have really supportive TAs who are willing to go out of their way to help. But without them, I would have felt disheartened pretty quickly, even if I know I'm trying my best, as is the case with some of my other friends who dropped the class halfway. I feel that just lowering the level of difficulty a little bit more would make the joy of programming accessible to more people - especially given the course's already coherent and engaging design.",
                "I think the lectures were outstanding. I found it particularly helpful to do the quizzes right after watching them in order to retain the information better. The problem sets are the best way to learn the course material in my opinion. They were generally pretty fun to complete, especially the Fiftyville one. There was a great deal of resources to obtain any help you needed with any of the assignments throughout the semester. Office hours with the TA's were outstanding. The class does require quite a lot of time (around 12-15 hours a week including lecture time). However, I do not think this is a weakness as you very much get out of the course what you put in. There is so much you learn in a single semester.",
                "The class has a clearly structured syllabus and recorded lectures. As for weaknesses, the undergraduate staff needs more training. They have great intentions and are nice but I feel like the course poorly equipped them to teach section. In general, course staff were poor communicators and not super helpful. The class has an insanely high workload which honestly does not always facilitate learning. I could have learned the same amount with a smaller amount of work. Although I learned a LOT and definitely saw myself improve, there were multiple times in the course where I felt like I was doing work not to learn but to relate to the cult-like following around this class and its intensity.",
                "Strengths - Lectures, while long, were very engaging and office hours were very helpful. I feel like I left the course with tangible skills. Weaknesses - you spend A LOT of time working on PSETS (especially if you've never coded before)",
                "Strengths:\r\nThe TAs in this course were super helpful and did phenomenal during office hours. They always tried their best to help us resolve any issues, even if they had to struggle for a bit themselves. Also, in an usual way, I kind of liked how difficult the first couple of weeks were in this class, as it really pushed me to try harder and understand what I was attempting to do at a deeper level. \r\n\r\nWeaknesses:\r\nOnline lectures proved to be more of a hassle than I had imagined. I don't work well in virtual environments, and when assigned a two and a half hour lecture to be completed in a day, I find myself usually just skimming the content, rather than sitting through the entire lecture. This did not help my results on assignments such as quizzes.",
                "A weakness was that the lectures were too long.",
                "This course's strength is its rigorous application of fundamental computer science projects. Although I have only been programming for a few weeks, I already feel like my skill-set would make me a more valuable employee than before. With that said, this course's workload is unreasonable and it should be recalculated. This course is excellent if you can devote your entire schedule to it. If you are interested in spending time on two or three other courses, it will become almost unmanageable. This course's weakest aspect is that it does not assign work or lectures during the shopping period, so students cannot get a sense of whether the course will be too much work on not. If the course had assigned homework on scheduled sectional meetings during the shopping period (like every other course on campus does), I would not have taken it. This course is also poor because, although some are excellent and knowledgeable, not all TAs have enough computer science knowledge to assist students.",
                "I have only strengths to comment on. The amount of content you learn in this course is incredibly high. I took this course with no previous programming experience, and now I'm proficient in six languages and can design my own web application.",
                "Strengths: the level of help available for students each week \r\nWeaknesses: sections weren't as helpful as they were at the beginning of the week when we are yet to apply knowledge from lecture",
                "The course is structured exceptionally well, and therefore you're guaranteed to gain a lot from the courses.",
                "I learned an incredible amount of information in a short amount of time, which felt very rewarding. The teaching staff is amazing and there's tons of resources available for students. However, the workload is extremely intense and you almost always have something to do for the class: watch a lecture, take the quiz, do a lab, or complete a PSET.",
                "Strengths is it will make you learn how to code especially if you put in the work. Weaknesses is that it is an incredibly large commitment. If you're willing to bite the bullet and put in the work, take this class, but if you're looking to coast, this is definitely the wrong course to take. Workload is incredibly high - therefore take this class during a light workload sem.",
                "Best class I've taken. Great lectures. Great office hours. Great TA's.",
                "There was a lot of self learning. Perhaps more syntax could have been taught during the lectures.",
                "Strengths: The lectures were generally pretty good, and Malan had useful tools to explain the material.  problem sets definitely built on the material covered in lecture and made you expand your understanding a lot. It covers a diverse range of topics, too, which is good for an intro class. I appreciated that class stopped earlier in the semester. The ability to do some problem sets with a friend was nice.\r\n\r\nWeaknesses: Coming into this class with absolutely no programming experience sounds really, really hard. Having to watch 2.5+ hours of lecture on Monday before section on Tuesday is annoying, but at least there's no lecture the rest of the week. 1.5+ hours is a long time for section, too.",
                "Course moved too fast.",
                "super well structured, engaging lectures, TA's",
                "This class teaches one how to program a computer, and understand the basic algorithmic execution within a computer system using C. I think this is very useful when designing somehow complex programs, taking into consideration their execution speed and memory usage. \r\n\r\nI also like how there are labs in this class to prepare students to work on the pset.\r\n\r\nHowever, I think earlier in the semester, labs should be worked on extensively during sections so students don't have to worry about psets and the lab too during the week.\r\n\r\nAlthough, this class is a Harvard-Yale class, I think it would be much helpful to have more than just 1 lecture at Yale.",
                "Weakness was a distinct lack of help from the TAs - they were very unhelpful in assisting students beyond the first few weeks.",
                "This was a really good course however, I thought the PSETS were way too hard.",
                "Only take this course if you are willing to put in the time needed. It's a high commitment but comes with a high reward if you have the bandwidth.",
                "The main strength was the support offered in office hours sessions by the undergraduate TAs. The lectures were all good, but could get long and tedious, especially considering that you had to watch them by Tuesday morning section. The real learning happened in office hours as you struggled through the PSets. I appreciated that at certain points in the semester the course tried to force us to become more independent by changing the amount and kind of help we were given at office hours. The only weakness I can think of is that the quality of TAs is extremely variable. I personally felt that my section was not as useful as it could have been because the TAs were not in so strongly in command of the material at many points. They primarily read off of slides and were slow and unsure in answering questions. At office hours, there were many TAs who were much less willing and seemingly able to help than others.",
                "It is a lot of work. I guess that is the purpose, but it really is super heavy. Office hours were helpful, sometimes the queue could get very long. A lot of the lectures also seemed not associated with the problem sets; many times the difference between the problem set and the lecture was a huge step up in difficulty. The problem sets really force you to learn as you go, which is arguably a strength and weakness.",
                "Well organized, great support staff, material could be more rigorous",
                "One of the strengths of the course is that the course deal with a real-life problem.\r\n\r\n\r\nThe most significant weaknesses of the course are that all the system is online.",
                "Strengths: Asynchronous format is conducted very smoothly and actually helps the engagement of the course. \r\n\r\nWeaknesses: High workload than is necessary, often find yourself trudging through assignments for the sole purpose of completing it rather than learning.",
                "Classes pick up incredibly fast. Problem sets are extremely demanding, but very satisfying when you finish done. Amazing instructor. Many resources are available.",
                "It covers a lot of topics very quickly. It could move a little slower, especially in the last few weeks.",
                "This class moved very quickly and very little information was given to us. The lectures was very general too.",
                "Lectures at Yale were so skippable because they were videoed at Harvard. Malan is a fine lecturer but I'd rather have an in-person lecturer at Yale. The labs were pointless, as were the quizzes. Also, the sections were utterly useless (for me) because my section was so disorganized. The grading and information and guidance given were apparently very uneven across sections. A very common TA answer to questions was \"I don't know, that information hasn't been communicated to us yet\". The strength of the course is that you can learn a very baseline amount of information that can be useful (depending on what you do) without being super engaged.",
                "I genuinely don't have any clear ideas of a weakness for this course. Its net of faculty all supporting the massive student body were more than sufficient, its lectures were taught remarkably well, and its problem sets were perfect for highlighting and familiarizing students with material.",
                "Moves really fast, but you have a lot of help.",
                "Slower pace in the lectures",
                "Strengths: a large amount of basic knowledge on a variety of coding languages gained\r\n\r\nWeaknesses: Could not go in depth into any one subject matter and had a large workload.",
                "The course was a lot of work but every pset is usefule!",
                "The virtual nature of this course leads to not a lot of one on one attention. It also moves very quickly. VERY quickly. Nevertheless I felt I grasped a large breadth of the material.",
                "The strength was that students get a broad overview of what coding is like, which is useful for people who have limited CS knowledge. But a large weakness was how rushed the course was  by spending only one week on some languages like python I felt that I barely got time to familiarize myself with the code.",
                "Weakness; very little engagement with staff",
                "Strengths: David Malan's instruction, well thought out examples to illustrate coding concepts, section organization, abundance of responsive course staff to respond to questions, Jay Lim's leadership of the course was phenomenal wrt extensions, Covid circumstances, etc. Reasonable and fair",
                "This class will leave you feeling very accomplished. You will feel like you learned an incredible amount in a short period of time. You will not feel like you wasted your time. However, this class is a ton of work. Expect to spend at least 15-20 hours per week on this class.",
                "The course is strong in that it certainly requires engagement and extensive learning to succeed. Sometimes, I felt that there was not a strong enough correlation between the lectures and their corresponding problem sets. Having online lectures also made the course a bit harder to engage with.",
                "Strengths: problem sets were really fun and interesting. Weaknesses: we should have had more time on the final project.",
                "The course has many strengths I actually enjoyed the online format as it allowed me to watch the lectures at my own pace. Section was a little long in my opinion (2 hours). I definitely learned a lot about a variety of languages.",
                "Very easily organized!",
                "This course is incredibleProfessor Malan is a fantastic lecturer, and the p-sets all helped me develop a better understanding of the content.",
                "Strengths were sections - very helpful in reviewing lecture and problem sets. Weaknesses were quizzes because werent always useful in seeing what you understood\/didnt. Grading on quizzes was also tough since sometimes many answers could be right.",
                "Strengths were it provides a very good base knowledge, weakness is that it was a bit too much work for my liking",
                "It was a very good introduction course but the second half really ramped up and made mastery of the later topics difficult.",
                "Strengths: a lot of support through office hours and section, creative projects\r\nWeaknesses: class moved very fast through some languages",
                "I enjoyed that the course went over a few different languages. I think lessons were made well and the course was engaging. I did not like the weekly section meeting requirement.",
                "The online lecture is three hours long, which felt like too long every time. There are short breaks built in, but there is also always the urge to skip them to save time, and there is always the 2x speed button tempting us (even if it results in gibberish coming in). I think some clearer recommendations for watching, or having the recording broken up into seperate videos wherever the break during the livestream is, could be cool.",
                "The course was structured and we covered a lot of concepts and languages but I feel like we didn't go super in-depth into any specific language besides the first few weeks on C. We ended up covering other languages in one week, and it felt like I was constantly trying to keep up with the pace of the class. I think that it would be beneficial to narrow down the concepts and languages we learn and maybe spend an extra week or two to ensure that students understand the material before moving on to the next language.",
                "It is a tough course, but you'll definitely learn how to code when you get out, if that's what you want. Don't be fooled; it's a great course with interesting problem sets and applicable skill sets, but the problem sets and lectures take longer than expected on average. Also, the virtual aspect of watching lectures from Harvard is a little bit draining.",
                "Strengths: Access to TAs, high quality lectures, and well thought out structure.\r\n\r\nWeaknesses: Lack of in person lectures, which at times made it difficult for me to digest complex information.",
                "Strengths: David Malan's lectures are extremely accessible (as in he uses simple, clear language and methods to demystify really complex concepts!). The psets are very well designed and very rewarding, and the progression towards the big final project feels so natural as a result. The support available for students is amazing -- all the heads, TAs, even peers are super accommodating and happy to help someone in need. \r\n\r\nWeaknesses: There were some moments in section and during the psets where I felt completely overwhelmed by the sheer workload of the course. Please take CS50 with classes that you know are not going to be as taxing so that you can devote your attention to it entirely.",
                "its great! just very hard",
                "The strengths of this course are that it trains you to problem solve and think for yourself. It is also well-organized, with a predictable schedule. The weakness of this course is that it's very difficult for those that have not programmed ever in their lives before. The course moves from topic to topic too fast to go in-depth about anything, but I do think that I got a general overview of what programming looks like.",
                "Heavy heavy workload.",
                "Strengths: This was a very tightly and well run ship, the curriculum was well formatted, the problem sets were challenging but deeply fun, there was a great deal of support which made the rigor of the course more than manageable.\r\nWeaknesses: Lectures and sections could have aligned better",
                "It is amazing and very well refined already. Problem sets are fun and purposeful, there is a plethora of TA help available. If you do the work you have an opportunity to learn plenty and do well in the class.",
                "The course is very well organized and very engaging with a lot of resources to help you improve outside of the classroom, BUT the biggest weakness is that it goes so fast that youd barely get anything out of the lectures if you dont spend three times as much time trying to figure things out on your own when doing the psets. It really depends on the student to learn so what you get out of the class is proportionate with what you put in",
                "Lots of work on your own. But very useful, many valuable skills.",
                "The course could definitely be improved by slowing down the pace of the course. Oftentimes, it seemed like we were going too fast and it was difficult to keep up.",
                "The course is great, it seems a bit overwhelming and does take a lot of time but if you start assignments early it's not as bad.",
                "It was very structured so students knew what to expect but the amount of information that was taught could be overwhelming at times.",
                "Not much time spent on languages or concepts",
                "I liked how there was section every week and it wasn't just the ~3 hour long video lecture from Harvard that we had to watch. Also, the office hours being available often was really good since I struggled on some problem sets and needed help with them.",
                "the class was informative and had a lot of support available. Even so, the workload was time intensive and didnt necessarily correlate to a better understanding of the content. Time commitment could be cut down",
                "Too time consuming. Shorter psets would be great! But. I did leave with a ton of skills.",
                "One strength of this class was that I learned a lot of new skills in a very short period of time. However, because of this, the course moved very fast and the workload was extremely heavy. I had to rely a lot on office hours in order to be able to get a good grasp of the material and actually keep up. Maybe this could be improved by narrowing the curriculum more to focus on a few select many, instead of covering only a little bit on so many languages.",
                "The support structure in CS50 is simply unparalleled. No other course comes close to providing the amount of support\/resources found in CS50.",
                "Strengths: the amount of knowledge you gain about programming from this course is excellent. If you're a CS major, this is a fantastic intro class. Office hours are super helpful as well\r\nWeaknesses: none",
                "-the course was taught online which was kind of a hindrance of itself to the learning process\r\n-David Malan was an absolutely brilliant professor\r\n-the tfs should have more familiarity with the coding languages so that they can actually help students",
                "The strength of this course are the amount of resources and office hours. The weakness of this course is the amount of work and the claim that this course is for beginners but having an amount of work that hurts actual beginners.",
                "Very high workload, the psets were often not super related to lecture materials which was frustrating",
                "This course requires a lot of time and work, but I was able to make time for it because of the plentiful resources and I personally had a lot of fun with the problem sets. It does get difficult sometimes to take in all of the information given at lectures because each lecture is longer than the average lecture, but I would say most of the confusion and questions I had were cleared up during discussion section with review and completing the labs. I especially like how office hours are so available, and even after they end theres also the ed discussion page, so there was always a place to look to when I got really stuck. I think this course benefits from being so high energy and engaging; the problem sets are difficult, but its rewarding and interesting to work through them. This course is also wonderful for people with different programming backgrounds, so there were parts of problem sets for those less comfortable (like me) that were still challenging and more challenging ones that sometimes I would even attempt after trying the less comfortable one. I think the quizzes, labs, problem sets, and final project were all very fair; I think my only difficulty was I felt a little overwhelmed with the final test and would have possibly liked more discussion section exercises like the one we did with problems of a similar nature to those on the exam.",
                "Strengths: This class does a good job of taking what can potentially be a very dry subject and injecting fun and life into it. There are always fun demonstrations, visuals, and problems every week. There's also a lot of support, and I really appreciated that Yale's CS50 course, instead of following Harvard exactly, had more generous academic policies (a one-time extension, 2 dropped labs and quizzes, a later due date for the final project). The course also built up difficulty in a (mostly) reasonable way. \r\n\r\nWeaknesses: The course becomes VERY web-development heavy at the end, and as a result they suddenly squeeze an overwhelming amount of content in the last couple weeks in a way that didn't feel very effective. Like, supposedly this class \"covers\" Javascript, but it was done so quickly I definitely don't feel like I could code anything in Javascript without basically starting from the ground up and teaching myself. Also, the weekly workload felt a bit excessive. Each week there was a 2.5 hour lecture, a ~1.5 hour section, a quiz, and a problem set that could take up to 10+ hours, (and a lab but that didn't really feel like extra work). This felt like a bit too much of a time-suck. I basically didn't do any extracurriculars this semester and also took easy classes aside from CS50, so I was able keep up just fine with the work, but I can't imagine having to do this class in tandem with extracurriculars and other work-heavy classes. Also, this might have just been because of COVID, but it felt very weird that every lecture was at Harvard and we just had to watch a live-stream or recording. It kind of felt like I was just taking an online class at the Harvard Extension School or something.",
                "virtual format was hard to follow and the lectures were too long in one sitting.",
                "Strengths: The depth of the course and skills gained in such a short period of time is the main strength of the course. Any student who takes this course will come out of it with so many new skills and will be able to grow their programming knowledge based on the concepts taught in the course and be able to create new projects as well. Also, the variety of problems and resources available to students make it the perfect environment to learn to program and be exposed to the wonderful world of computer science. Weaknesses: One weakness of the course is the ambiguity when it comes to grading. There are no rubrics beforehand for the problem sets or projects, which can result in points lost that could have been avoided with a rubric available to the student. Other than that, however, the course is a great one full of strengths.",
                "Strengths being exposed to lots of different languages. Weaknesses lot of workload.",
                "Strengths of this course is how much information is taught. Students with no CS background are really able to touch base on multiple programming languages and get a solid foundation into what programming is like. Despite the asynchronous lecture and large classroom size, the course does a great job in having small sections where TAs review the lecture in-person. Office hours also facilitate a strong community bond over difficult psets, and all the amazing TAs are what truly made the class; they were really dedicated in helping each student grow and understand. However, the weekly workload may be difficult to manage on top of other classes and draining.",
                "The obvious weakness is that there's no in person lecture, which inherently makes it less engaging. But the in-person sections are great. The strengths are that you move through a lot of coding languages really quickly, which makes it intense but super interesting.",
                "The strengths of this course are definitely how well organized it is and how it progressively gets more difficult each week but in a way that is manageable. ANother strength is definitely the TAs and their help at office hours. \r\nA drawback of the course is the online lectures. While it was nice to watch them at my own pace, there was not a huge time window to watch them, making it feel like I was rushing through the content so that I could take the quiz.",
                "I think the biggest strength of this course is the number of languages we were able to touch. I think labs often felt like PSETs so there was the exact level of stress sometimes. I think I would've liked more direct guidance in labs."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "YES! Take this course. It's very useful and makes programming fun! Just be wary of the workload obviously. I'd say you want to dedicate at least 15 hours a week to this class.",
                "I would Credit D it. If required for your major and you have no prior experience with programming, you need to have a lot of time to spare or spend some time learning the material ahead of the start of the course or else it will be a source of stress during the semester.",
                "Yes definitely. Very comprehensive insights.",
                "No, I hated it. I was completely new to computer science going into it so I thought it would be a good introduction. It wasn't. It moves way too quickly for a beginner, and the extremely high course load is so frustrating, it makes you lose motivation to keep working because it's so intense. People who are not completely new might like it more, or if you are planning to be a comp sci major, but it definitely is not beginner and non-comp-sci-major friendly.",
                "Yes. I would recommend this class to anyone looking to continue with CS, whether they have experience or not.",
                "If you want to become a computer wiz, this is a good starting point.",
                "I would recommend this course but to strongly advise them to take it credit\/d\/fail. Do not take another very demanding class in the same semester because this class will take and easy 20 hours a week (between lecture, quizzes, labs, section, and psets). But I'm glad I took this class because I gained a lot of skills that make me competitive for internships and research positions.",
                "Depends on what your goals are. If you want to get to web programming, then yes. However, if you are a bit more quantitatively orientated (i.e you like math) and are interested in more of the computer science aspect, then I would probably recommend learning this on your own over the summer up through the python lecture.",
                "NOT to SOM students, time demand is too great",
                "Yes",
                "No I would not. You will feel like you are just a part of a machine, and the machine does the exact same thing every year. The psets were also very formulaic, and I don't feel like I learned much from them. There needs to be more room in this course for students to explore what interests THEM (come up with their own ideas for programs to develop, for example) instead of literally just filling in the blanks in problem sets.",
                "Great class, just be prepared to spend most of your time in Office Hours.",
                "If you have wanted to take computer science but are afraid to step into it, it's a great accelerator. However, the workload is intense and of course there are other resources to learn computer science on the internet. It all depends on how much time you are willing to spend on 1 course.",
                "Yes! It was really great to get a better understanding of CS. It does take a lot of time, so if you don't have the time to put in to it you may not get as much out. If you like methodical thinking, you'll probably enjoy it.",
                "Yes, on the condition that you are willing and eager to grind. Super interesting. I feel like I learned more in this class than in any other class I've ever taken. It was super fun. However, I took four classes this semester, and CS50 was probably 70% of my total workload. I think I averaged 10-12 hours a week. Admittedly, I hadn't taken CS before, but it's definitely a super hard class.",
                "Yes, its a great introduction to programming and the concepts needed to do it.",
                "Yes, this class is a great introduction to programming and you see the applications of it. You really won't get to experience something like this in other computer science classes unless you go through all the other introductory courses that cover mostly C (the most painful language of all, which is still covered in CS50, but they try to make it fun at least) and C++. I think you'll also find that by taking this class, you'll have a much easier time in other classes that people consider \"hard\" because you will have developed some amazing problem solving skills.",
                "I would recommend the course to all students, as coding is an important skill. But I will warn that it will likely not be a pleasurable experience.",
                "Yes - if you either 1 already have some programming background or 2 have no background but are willing to actively seek help when you are struggling.",
                "Yes, but watch out for quizzes and exams. They are overly harsh on those and they phrase questions in ways that seem inviting of abstract thinking, but punish you for not getting exact what they meant by their abstract questions.",
                "I would definitely recommend this course to another student. Although the class requires a lot of work, you will learn how to program. I came into this class without any programming experience, and I now feel very well-prepared to continue on with programming courses at Yale and beyond. There is a wealth of resources available to allow you to perform your best. The teachers are kind and helpful. You learn more in this class than you generally can in a single class.",
                "If you are interested in seriously doing CS or need this for a major, yes. If you are looking for something fun or for a QR, no.",
                "I would definitely recommend CS50, regardless of your major. However, make sure you have enough time in your schedule to dedicate to it.",
                "Yes, I would definitely recommend this course to anyone that wants to get a solid background in programming, as well as understand its applications in the modern industry. I think the course layout was well organized and the instructors and TAs were all very helpful.",
                "I would recommend to this course, I enjoyed the content.",
                "No. It is too much work. Staring a computer for 20 hours a week is terrible.",
                "If you want to get your first experience with coding, or if you want to bolster your understanding of programming, take this course. You will have to manage a high workload, but if you can do that, it is 100% worth it.",
                "Yes, very useful and provides a good insight into computer science",
                "Yes. Programming is a useful skill to have.",
                "Yes, if you want to learn basic programming languages, and a get a grasp of how the internet works, a great course to take (even if you won't take any further CS courses).",
                "Yes! Take it if you're really interested in coding since it is such a big commitment. The work pays off in the end though!",
                "Yes if you want to learn how to code and will put in the time. This class is what you put into it, so if you're unwilling to dedicate time and suffer through psets until you understand the code, don't take it. The reward is big after finishing the class - however keep in mind that you will run into mega frustrations. The staff is pretty ruthless in terms of the expectation they have for students. We had a take home test one week and the TAs said expect 40+ hours of work on this across 5 days - which I think is unreasonable. Apart from the frustration, you walk away knowing how to code in several different languages and having a great framework for thinking about computer science.",
                "YES! Please take this class. It turned me into a CompSci major :)",
                "Yes, I think it is an important class to take.",
                "Maybe. First, it'll go a lot better if you have some programming experience beforehand (even like a free online intro to Python). The sheer amount of class time is off-putting, but lectures are genuinely educational. The problem sets can be tough, but even the worst ones weren't obscenely long. You'll definitely learn a lot if you take the class, but expect to spend a good amount of time on it. Watch out for the final project at the end of the semester. Also, think about Credit\/D'ing the class to ease the workload a little.",
                "Course moves quickly so you should have a background in cs before taking",
                "yes, if you don't have previous programming background",
                "Definitely. \r\n\r\nI think this course provides the right fundamentals for students who are particularly planning on majoring in Computer Science. \r\n\r\nEven for students who don't intend on majoring in Computer Science, it provides a lot of invaluable skills.",
                "No - the course was clearly designed for people with pre existing knowledge of the subject matter, especially in the final few weeks.",
                "Yes I would, but I would recommend credit\/D\/F option if they have a high extra curricular workload because this course takes up majority of your week.",
                "If you are prepared to have a high workload, but also highly educational course in your schedule, then yes take this course.",
                "100% yes, I don't think there's another course anywhere that you can learn so much so quickly.",
                "I would recommend it to someone looking to dip their toes into computer science. Since I am obviously a beginner, I cannot say how well it would prepare you for more CS classes, but it gave me a certain amount of confidence going into CS and a great level of exposure to new skills.",
                "I would recommend the course- I think it is a great ase for programming, and teaches you a lot of useful skills. If you wanted to further pursue CS, it is a great start. If you just want to learn how to code, it also does a really good job of doing that to a proficient level. I would, however, make a serious effort to portray the time commitment of the course.",
                "Yes",
                "Yes, this course is exciting.",
                "Take this course if you are prepared to work. The workload is no joke; PSETS will easily take you 10 hours a week. I would recommend this course if you are looking to work  solving a problem set is one of the most fulfilling tasks I've done in a course at Yale!",
                "If you're truly interested in CS, definitely take it and take your time with it. If you aren't into CS that much, take the course but credit\/d\/fail it.",
                "Yes, it is a great intro to computer science. But prepare yourself for a heavy workload.",
                "I would tell them to take it only if they had some sort of coding knowledge beforehand.",
                "I'd recommend it to anyone outside of CS wanting to learn a bit about CS. Not for anyone else. Or someone looking for good teaching.",
                "I would recommend this course to any student no matter who they are, what they study, or what they are interested in. The course was an amazing introduction to computer science and software engineering and, while at times intensive, was the perfect beginning to my education in computer science. This course will be of use to anyone who has a chance of finding computer science or programming useful to them in the future (which is probably about 95% of the student body). If you have room in your schedule, TAKE THIS COURSE!",
                "Yes",
                "For anyone curious or interested in CS, this is the class for you",
                "Somewhat. Definitely a learning experience, but PLEASE account for your overall workload for the semester before adding this class to your schedule. It's a lot.",
                "Yes take it if you are even the slightest bit interested in CS",
                "If you must take it as a prerequisite, I think it lends confidence in problem solving and coding abilities. However, it does not give you strong familiarity with one language",
                "It may not be suitable for people entirely new to CS, or people who intend on being able to code well after the class. I feel like after one semester I have learned bits of information about many languages but cannot code well in any of them.",
                "100% would recommend. Everybody should take it. The course staff won't let you fail, just give it your best shot, if you really need to, credit\/d\/fail it (although you more than likely won't have to).",
                "I would recommend this class to a student who wishes to learn how to code. If you are majoring in computer science, I would definitely recommend this course to obtain a background in C. However, if you are not majoring in CS and simply want to learn how to code, this is the course to take - it will leave you proficient in five languages. Beware, though, that this class will consume incredible amounts of your time. It is not to be taken for a gut QR credit.",
                "I would recommend the course to students who want a strong foothold in the field of computer science.",
                "Yes!!! Take this class. Its a tremendously useful intro to coding and also just helps you become a better problem solver.",
                "Yes! If you have or havent coded before definitely take this class if you can allot time to the class",
                "Yes to learn the fundamentals of computer science.",
                "I think all Yale students should take CS50, whether or not they're planning to take other CS courses. I came in with absolutely no CS experience, and a few weeks into the course I was genuinely looking forward to the p-sets. There's a steep learning curve at the beginning and a lot of work throughout the course, so make sure you have enough time to commit to it. Don't worry to much about what grade you'll get thoughif you put in the work and go to office hours, you'll do well.",
                "Yes even if you have CS experience, this was great for a first year to get adjusted to Yale and learn to learn.",
                "I would. It is one of the most challenging classes I have ever taken but also the most rewarding.",
                "A complete beginner in computer science might benefit from a bit of self teaching beforehand",
                "Yes, excellent introductory course.",
                "I would recommend this course for students interested in computer science.",
                "For complete beginners, if coding feels unapproachable, this course is intensive in a way that might help break through that so you have a basis for a couple languages and concepts, and have a starting point for learning new languages. However, you get out of it how much work you really put in, so I would recommend it only if your other courses are leaning on on easy side, and you are willing to commit a lot of time to psets. You don't want this course competing for your time and brain power with another difficult course, because even if you can rush through the psets and quizzes, coming out feeling like the class was worth it takes really playing with ideas and mulling things over.",
                "I would recommend this course to any student who wishes to explore the field of computer science but doesn't have any or much coding experience. Overall, this course will help you go from having no coding experience at all to having a grasp on languages like C, Python, HTML, and JavaScript.",
                "I would recommend this course only if you are looking to code in the future and you have a substantial amount of time to dedicate yourself to the course.",
                "I would definitely recommend this course to anyone who is interested in computer programming! The course almost throws you into the deep end right off the get go, and doesn't waste time dwelling on theory. For example, by the halfway point, you are able to program various filters for images. However, it teaches you why things work the way they do. It is a perfect blend of theory and real world application.",
                "YES! If you have any sort of mild interest in coding, even if your academic pursuits or major lie elsewhere, take CS50! It will supplement that interest so much more and give you a slew of tools and skills to further it.",
                "yes it has nice faculty support",
                "I would recommend this course to students that want a general overview of programming as well as those that want to improve their problem-solving skills. However, I would not recommend this course to those expecting any in-depth knowledge about any coding language.",
                "Yes, provided they are ready for a workload equivalent to two other courses.",
                "Yes, absolutely. I've taken online programming classes before, but the amount of learning I feel like I've gained after this course I find astonishing and unparalleled.",
                "Yes, if you are interested in learning a new way of thought without prior coding experience or want a programming course that gives you real world applicability.",
                "Yes! Only if you have the time for the work though, or youre not gonna get much out of it. Taking this off my Yale bucket list is one of the best things Ive done before graduation. As someone who came in with absolutely no background I feel like I learned so much, and it really makes you feel like anyone can do cs. Dont be too intimidated by the workload - time flies when youre debugging, you wont even notice lol",
                "Yes, useful life skills everyone should know",
                "Yes, it's a great introduction to computer science with also a super hands-on, useful approach.",
                "Yes!",
                "Yes if the student does not have much or any experience with computer science",
                "I would recommend this course to any student who wants to learn coding from a beginner level. I think it's a great introductory course.",
                "yes, i always felt like i was learning something useful and new. Make sure you have time for the work though!!!",
                "I would. I just really hope they make this class less time consuming. Also it would be great if we had to watch the lectures on saturdays and the quiz due Sunday nights and section Monday and pset due Friday so that athletes who are gone on the weekends can take this class. It was very challenging not being able to go to the weekend office hours.",
                "I would recommend this course to a student who wishes to have a basic understanding of programming. I think the material of this course is definitely fundamental for anyone, so it is definitely worth it. However, this course has a huge workload. In order to do well and actually understand the concepts, a lot of time needs to be put into this course. Thus, how much time you'll have or how much time you're willing to put into the course is certainly something one needs to take into consideration.",
                "If you are planning on becoming a CS major or are simply curious about cs\/tech and don't have any experience, I would highly recommend the course. If you are not willing to work hard and keep up with the notorious workload of the course, I would advise not taking the course.",
                "YES, take this course!",
                "Yes if they are willing to work extremely hard to learn the material. No, if they just want a chill class.",
                "I would recommend this course because the amount of office hours is nice. You can also meet some cool people to work with since the course is so big. However, I would caution somebody that this course can take up too much of your time and can negatively impact your well being.",
                "Yes. I think even for someone who isnt interested in CS, it really is a fun course and the basic skills it provides are invaluable. Its definitely a commitment, and it will be tough if you dont want to engage with the material, but I still think that this course does a great job of making you want to seek out its resources and make the most of it.",
                "I would recommend this course to another student because it has helped me understand how to successfully learn and retain information presented in this course. It has not only greatly expanded my coding abilities, but allowed me to be able to come up with various strategies to work through any problem.",
                "I would, but only if you have a very pointed interest in computer science and coding and you are considering pursuing it further. It's fun and rewarding for sure, but I think it's a bit much to take if you already know you don't plan on doing anything with CS. I would also only recommend it if you don't have a crazy, work-heavy schedule, as it may be hard to keep up with the material.",
                "yes - it was very useful.",
                "I would absolutely recommend this course to another student. The course is definitely a lot of work and requires a lot of time commitment with a weekly lecture, discussion section, quiz, lab assignment, and problem set, but it's definitely worth the time, as the student will learn so many techniques in a couple of different languages that will give them a good basis in programming and allow them to create some really cool projects.",
                "I'd tell anyone taking this class that this is their entire weekend. If you like it that much, then it is good. It just takes a lot of time. And the lectures take a long time to watch.",
                "I would recommend this course to anyone with no prior CS\/programming experience who is interested in gaining a solid insight of what it's like. However, I would also be wary of the greater workload and note that psets can average several hours long, so there is a greater commitment to the course.",
                "Yes, to pretty much anyone who is able to put in the work. It's so useful to know how to code.",
                "I would absolutely recommend this course. I'm a slow learner this was my first CS class ever and now I have decided to major in it. I absolutely loved the relief of finishing a pset. The only thing I will say, make sure you have the time to go to office hours if you have no prior experience. The TAs and the heads are also gems in this course, always willing to help with any difficulty."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 100 01 - Intro Computing & Programming"
    }
}