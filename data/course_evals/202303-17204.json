{
    "crn_code": "17204",
    "season": "202303",
    "enrollment": {
        "enrolled": 186,
        "responses": 95,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                0,
                4,
                14,
                33,
                37
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                3,
                10,
                13,
                33,
                29
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                2,
                6,
                5,
                41,
                33
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                2,
                4,
                21,
                38,
                20
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                19,
                40,
                26
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                1,
                11,
                38,
                38
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "Learned so much!",
                "I feel like I have a basic, general idea of what programming entails. I learned a little bit of a number of programming languages, and can now build a functioning, yet extremely simple, website.",
                "So much!!! Thinking like a programmer, problem solving, and various languages like C, python, html\/css\/java script, SQL. Don't be disuaded by the work load, amazing introduction to cs",
                "I gained a basic understanding of computer science and coding, especially with C and conceptual ideas.",
                "I didn't learn how to code; I learned how to program.",
                "So many cool languages and ideas were presented in unique and highly interesting ways.",
                "I learned the basics of a lot of different computing languages (Python, C, JS, etc.) and about data storage and memory.",
                "Programming in C, python, sql, some HTML, CSS and javascript. Learning to think algorithmically. Some relevant applications of CS. Intro to data structures,  algorithmic efficiency, memory handling.",
                "Intro skills in C, Python, HTML, CSS, JavaScript. A general sense of what coding consists of. A new way of thinking about certain problems.",
                "Basic understanding of introduction to coding.",
                "I learned a bunch of programming languages and gained the confidence and tools to work on independent projects using languages I haven't learned in a class.",
                "Basic computational skills and problem solving and patience.",
                "A lot of programming langauges that build upon each other, such as C, Python, SQL, JS, HTML.",
                "Skills in c, python, html, javascript, and css. In the first half of the semester, we focused on c, an excellent introduction to coding and the background for all other languages.",
                "C, Python, HTML",
                "python, C, SQL, HTML, CSS, debugging code, creating a fully-functioning website, databases",
                "Comprehensive introduction to programming languages and concepts.",
                "I learned a lot of programming skills extremely fast. The course goes over C, Python, SQL, JavaScript, CSS, and HTML, and I feel like I have a good grasp on all of them.",
                "Programming",
                "I learned how to think about problem solving using the kind of logic that is important for computer science. I also learned how to code on a basic level in several languages.",
                "Intro to coding in C, Python + Flask, SQL, HTML\/CSS\/Javascript. Problem solving.",
                "Learnt how to code in C",
                "I have learned so much in the world of computer science-- various languages, the works of computers, and the general world of computer science.",
                "Ability to code using C, JavaScript, Python, HTML, CSS, and Flask",
                "Programming introduction, lots of new languages, syntax, logic",
                "Basics of Scratch, C, Python, SQL, HTML, CSS, JavaScript, and Flask.",
                "I gained a deep understanding of several programming languages as well as an introductory understanding of algorithmic design and low-level computer function.",
                "CS50 provided me with a comprehensive introduction to computer programming, including Scratch, C, Python, SQL, HTML, CSS, JavaScript, and Flask. Throughout the process we also learned a lot about hardware and software, as well as important programming concepts in general such as arrays, object-oriented programming, and data structures (linked lists, etc).",
                "I learned new languages, like Flask and SQL, and new computer science concepts, like different data structures.",
                "I learned basic programming and computing skills through this course, and got an overview of a few commonly used languages.",
                "Web development and use of Python",
                "I learned basics of coding and got a deeper understanding of how websites and apps work.",
                "I loved this course! I learned so many different languages, all in a very fun way.",
                "I learnt most of all how to learn programming and computer science moving forwards. I also learnt a variety of programming languages and developed a burning passion for computer science.",
                "knowledge of many languages!",
                "This course specifically focused itself around the fundamentals of computer science, teaching students basic CS theory while applying it to actual programming languages. I learned topics such as algorithms and data structures, and was able to apply concepts like these into actual coding scenarios with languages such as Python, C, and JavaScript.",
                "Cs",
                "I learned the vast fundamentals of computer science. I learned about syntax for a number of programming languages and how to solve programs using different programs. I learned about data and computers and how they are applied in the real world.",
                "I went from no understanding of computer science and programming to being confident I know at least a little about various languages.",
                "I learned 5 new programming (C, Python, JavaScript, HTML, CSS) and a lot of the basics on how computers work",
                "I learned how to completely conduct lecture learning and homework completion on my own because of the asynchronous nature of this class.",
                "Basic coding skills, especially in c.",
                "Learned the basics of coding and development. Overall, gave very good insight into what makes the tools we use everyday function correctly.",
                "I gained some self-teaching skills. I learned a bit of SQL, python, HTML, C++, and Java",
                "Learned a lot of programming languages and computing concepts within one semester in a very efficient manner. The asynchronous nature of the course also allowed me to have more time flexibility.\r\n\r\nOnly weakness would be the sometimes inconsistent due dates.",
                "I learned the basics of computer science in this course, as well as how to be creative and create my own code.",
                "I developed a workiing knowledge and fundamental understanding of C, Python, SQL, and Flask. I also learned independent problem-solving and debugging skills that can be used in real-world scenarios if I were to engage in future CS projects.",
                "Broad overview of the concepts of Computer Science.",
                "I learned how to use C, JS, Python, and SQL.",
                "Lotsa programming skills",
                "I developed introductory knowledge of computer science.",
                "programming skills",
                "I supposedly learned about C, python, SQL, Javascript, HTML, CSS and Flask, but in reality, we went way to fast and I understood none of it.",
                "Basic programming knowledge, knowledge of algorithms.",
                "Even though I'd taken AP Computer Science Principles in high school, I felt like I got a much better base in CS after taking this class. The class doesn't focus on one specific language and instead gives you the skills to learn any programming language.",
                "I gained a broader understanding of how programming and computer science works. I also gained skills in programming in multiple languages, including C, Python, SQL, HTML\/CSS, and Javascript. By the end of the course, I was able to program projects on my own using these languages, making my own website.",
                "basic understanding of cs. coding and programing skills on C, python, html, css, js, and etc.",
                "Basic CS skills and problem solving techniques. It really solidified my love for CS. Highly recommend if you are unsure of taking 201.",
                "Coding in multiple computer languages",
                "I learned the basics of coding in multiple languages which I think is such a great skill to have, although very challenging to obtain."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "The class is one of the most well-produced classes at Yale! Learned a lot; decent amount of work though.",
                "The discussion groups need to be taught by actual professors or software engineers. I found the groups to be worthless with regard to helping me complete the PSET for that week. The TA's were more like camp counselors than instructors, and did not know how to write on a chalkboard, manage time, or explain concepts in a clear and direct way. \r\n\r\nI'm not sure what the strengths of this course were. I hated every minute of it and would not recommend it to anyone.",
                "Strengths - amazing lectures, interesting psets, very well organised and amazing infrastructure, trip to Harvard was fun\r\n\r\nWeakness - unnecessarily long mandatory participation sections and very boring because the cover the same material again",
                "This course is well formatted and the psets engaged me. I learned through them. There was also a lot of support from TAs and fellow classmates. As for improvements, I think sometimes the lectures were a bit long and covered too much material that was then not reinforced by psets.",
                "Biggest strength: breadth and depth of content - I went from nothing to something!\r\nBiggest weakness: weekly time commitment (sections do not need to be 2hrs)",
                "It is very nice to have a week to complete psets. It also helps that there are a lot of office hours. However, though they are important, both lecture and section are very long; it's hard to stay engaged for the whole lecture, especially since it's online.",
                "The lectures are really long and sometimes I walked away feeling like I didn't learn that much for the amount of time I spent watching and taking notes. I also think that although the course says no previous coding experience is necessary, it would be helpful to have some basic knowledge before starting this course. That being said, as a person with no previous experience who took this course I think that they provided a lot of help\/resources to help you complete the PSETs, but it is really on you to reach out and ask for help.",
                "Strengths: amazing support infrastructure",
                "Great support system network- between ula office hours and all the events like hackathon you will do great in the class.",
                "Lots of work and overall the help was lacking. I think the checks for understanding are a complete and utter waste of time. I was often left confused and when I ask the TAs for help they were forbidden to help with the checks for understanding.",
                "Strengths: so much fun, very social, engaging lectures, lots of extra help if you need it, amazing TA staff. Weaknesses: lectures are too long and very difficult concepts are explained quickly and simplistically.",
                "Strengths: Lectures were incredibly high quality and fun to watch. The lunches were cool. The hackathon was fun. The fair was great. The whole CS50 community was really cool.",
                "I feel that the strength of the course is the design of the psets, since they are often fun to solve, and you can apply what was taught in lecture while also having the opportunity to learn more on your own time. We also receive a ton of support from TAs and faculty.",
                "Strengths: Very resourceful, notes are automatically released after each lecture, lectures are recorded \r\n\r\nWeaknesses: Grades aren't released until the very end",
                "Lecture too long, should be broken into two instead of one three-hour lecture.",
                "strengths: the class gives a clear introduction to several programming languages, david malan is an excellent lecturer and his passion comes across strong, the hackathon was a super fun event and well-organized, the cs50 fair was also a great opportunity to showcase our projects, cs50 duck was very helpful in completing the psets\r\nweaknesses: heavy workload to manage (watching lectures, working on psets, attending section, etc.); giving everyone an opportunity to present their projects online (they recorded projects at the cs50 fair but it seems they only selected the best ones, which could seem unfair)",
                "Instructors and TAs provide a lot of support. The pset walkthroughs and office hours are always useful, and you can always ask the CS50 AI for help first to make debugging on your own a bit easier.",
                "WEAKNESSES - they move so so so fast! Like ULTRA FAST! They say you can go in without a coding background which is true... IF YOU WANT TO DROWN YOURSELF IN WORK TRYING TO REWATCH THE LECTURES IN HOPES OF GAINING ANY KNOWLEDGE! They spend way less time explaining HOW and more forcing you to implement yourself.\r\nSTRENGTHS - it's a very fulfilling QR credit, you feel like you've learned a ton",
                "The main weakness of this course is how fast you jump into programming. The first psets are extremely hard for people who have never coded before. Also, the lectures would not always have all the tools you needed to complete the pset, forcing you to go to office hours or use the duck AI. The course does have a lot of resources and TAs to help though. Hackathon was also extremely fun, and I wish more courses had events like it.",
                "Grading is very different depending on your TA. Would definitely try to find a way to make it less unfair.",
                "Strengths: The ULAs, section, and office hours were the absolute best part of this class. I was an office hours regular and was always met with people willing and eager to help me, even when I was in various states of emotional distress over my problem sets. My section ULAs were extremely patient and helpful, and met the class where we were. \r\n\r\nWeaknesses: I wish that more time was given between when lectures dropped and when we had to have them watched by. It was hard to find three hours in a single night to watch the lecture, and so I could not understand much of what was happening in section the next day.",
                "Workload was too much. Don't think the problem sets are for people who have never coded in their life before",
                "It is a lot of content for someone with no familiarity with anything computer science. I would have appreciated a less fast-paced version of this course so that I could take the time to fully understand each language instead of moving on to a new one each week.",
                "Strengths: interesting psets, course is very accessible for those without much programming experience and for building foundational skills and understanding.\r\nWeakness: Bulk of instruction is taught via online lecture.",
                "Very easy to learn and straightforward.",
                "Strengths: Lots of support; they try their best to make the problem sets fun and engaging even though theyre hard af and take forever to do. Sections are helpful and most TAs are pretty nice. Theres a lot of free food at colloquia and free lunch at restaurants and stuff like that. Theres an autograder for every problem set but one so its easy to get an A if you put in the work (the work, however, is *not* easy).\r\n\r\nWeakness: If youre a procrastinator like me the problem sets will ruin Sundays for you the whole semester. Made me quit CS because I realized I would hate working as an SWE and learning and writing weird syntax all my life. Also lectures teach you absolutely no programming lol you have to teach yourself everything using YouTube tutorials.",
                "This course is very intense yet incredibly rewarding. The lectures from David Malan were very interesting and my section TAs were incredible, however sometimes the TAs at office hours were not motivated\/enthusiastic to help with programming bugs, especially towards the end of the semester. Additionally, I think it could have been helpful to have an optional class-wide lecture viewing each week, or to just have a room reserved where the lecture would be streaming, as it was sometimes difficult to focus on the full three hour online lectures alone, and having a class community could have been fun.",
                "This course is my favorite course I have taken at Yale so far. Even though Prof. Malan resides at Harvard for the most part, I still felt I was able to get almost the same experience taking CS50 at Yale versus Harvard. Prof. Malan's lectures are phenomenal, there is enough help with the Psets, and the individual sections at Yale are helpful in digesting the information from the lecture the day prior.",
                "The strength of this course is the range of content. Its weakness is its lack of clarity in assignments and grading in checks for understanding. I don't see a need to meet an implicit word count in check for understandings when the blurb that I write is sufficient in demonstrating understanding.",
                "One strength of this course is that it has a lot of resources in place for students to succeed, so even though I'm not studying computer science, I felt perfectly equipped to succeed. A weakness might be in how broad the course goes. I felt overwhelmed at times with how many languages there were to learn and remember all their unique syntax, or with how PSETs became quite complicated rather quickly, and for some of the PSETs we were told to sort of ignore some of the provided code and files and just fill in the missing code, but there was so much other provided code and files that I felt like I didn't really understand the program even though I would write a part of it. I think this could be improved by focusing more on fewer languages but going more in-depth on them.",
                "The difficulty level and content of the problem sets are much greater than what is taught in the 3-hour weekly lectures, which I believe made it very hard.",
                "We learned a lot in a very short amount of time and the things we learned built on each other, which let us understand what we were doing.",
                "Strengths: Great office hours, dedicated TA's, fun, welcoming, warm!\r\n\r\nWeaknesses: None",
                "Its perfect how it is.",
                "The strengths of this course is its ability to teach students while being an asynchronous class. CS50 is able to achieve that through the long and detailed lectures supported by available notes and code, to the sections that are held once a week and even the course's own AI to help guide students. This course could be improved by finding ways to include more involvement with the CS50 community: because the class is asynchronous, it could be harder to meet and find students taking the course.",
                "Interesting courses",
                "I think this course had a lot of support for students, which was a strength. Frequent office hours, walkthroughs, and sections helped with the difficulty of this course. The lecture structure, being asynchronous, was sometimes helpful, but there were elements that didn't feel necessary or were lost in the massive 3 hour lecture time. There was definitely a big gap between the faculty instructors and the students.",
                "The course is very well organized and I have a hard time identifying weaknesses.",
                "The strengths are that we learn so much from week 0 to week 10. The weakness is the only learn the absolute basis of a course.",
                "Strengths include flexibility in completing work and lectures. Weaknesses include a lack of student network and sometimes being disconnected with Professor Malan at Harvard.",
                "Nice introduction to coding, not too challenging, grading for each individual assignment isn't harsh. Frequent office hours. Virtual lecture is really convenient. However, most of your interaction with staff is teaching fellows, who are obviously not as qualified as actual professors. Frequently aren't able to give substantial help on the psets. They're also underpaid and overworked so they're not really that helpful which really affects your learning. Be prepared to teach yourself everything using the published course material.",
                "Very flexible when it comes to delegating tasks due to asynchronous nature.",
                "Strenghts: Was very independent \r\nWeaknesses: Too much work at times",
                "Very efficient teaching. Great TA's for my section. Very well taught coding concepts and material!",
                "The flexibility of the course structure and the abundance of office hours, combined, were pedagogically great - very engaging, enjoyable and productive.",
                "I think the sense of community that this course breeds is its biggest strength. Additionally, the abundance of office hours was very useful. The small sections and section leaders made this course much better. I think that this course was a but too challenging, as a student who has no prior coding experience. I don't think that it should be advertised as an intro class suitable for people with no experience, because it was clear that prior knowledge was somewhat necessary in keeping up with the pace of the assignments and lectures.",
                "The strengths of this course is that it is a very dense introduction to computer science, and while it is taught online, still remains very engaging with the variety of community activities and sections. I thought that the psets were very well designed, and the syllabus\/exceptations about the level of our engagement and rigor of our work were very clearly defined.\r\n\r\nTHE ONLY ISSUE I HAD was with the timing of the lecture video and lab section. The lecture video is 3 hours long and released monday afternoon. My lab section is tuesday Noon. I simply wouldn't have enough time to watch the video on mondays, so I would always have to watch the video on 2x speed the hour before my lab section because the lab section activities expect us to watch the lecture before attending. I think this timeline is too compressed, and on yale courses, I think it should've communicated the format of the course a bit better because I didn't know that the lectures would be online and that there would be a lab section.",
                "Lectures can honestly be skipped. Everything can be learned from Sections.",
                "The strength is definitely the material. The lectures are really dense and for an online class it was really easy to stay engaged. Also, there was a lot os class support.  However, being online I definitely wished that the lectures were in person for accountability for watching them on time.",
                "Make the grading clear so that no one argues about letter grades.",
                "It was overall very good, but the sections were slightly not engaging.",
                "The strength of the class was the amount of material covered. The weakness was how rapidly and unclearly said material was covered.",
                "Although the lectures are online, David Malan does a fantastic job of making sure that they're engaging and fun. One weakness of the course is the small window in which sections are held. This makes it hard to schedule your section within a reasonable timeframe (my section was during dinner).",
                "The strengths of this course are that it gives introductory students a great amount of knowledge and skill on programming and computer science more generally, using real-world applications and examples for explanations of concepts. It also provides a great amount of resources for students to utilize in the course.\r\n\r\nIts weaknesses include the heavy workload, especially for students who are unfamiliar with the topics and the section material being a bit much for the time alotted. This can lead to unwanted stress throughout the course. I also will say that although there are many resources for support, I did not feel encouraged to reach out until after I really struggled with course material. \r\n\r\nOverall, it is a difficult course for programming beginners in my opinion, but it allows students to learn a great amount of concepts and skills that, to me, were worth it.",
                "very well organized",
                "Strength: Loved the TFs and section. Weakness: lots of work.",
                "I think the content is amazing and I have learned so much, but the pace is extremely fast for someone who has no previous experience with code. I honestly wish this course was taught in the span of two semesters just because the content was so much and I don't feel confident in any of the languages I learned except for the ones I used on my final project. I wish I had more time to become familiar with each language, but this course is just way too fast for that."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "Yes!",
                "No, absolutely not. It would be much better to take a course that covers one or two languages the entire semester. Would it help you to live and work in France if you learned a few words in Korean, German, Russian, Swahili, Navajo, and Norwegian? No, it wouldn't. Just focus on French if that's what you're going to be speaking. That's my analogy for the class. I learned a little bit of many different languages, which doesn't really get me anywhere.",
                "Yes yes yes!!! Best way to get started with CS, helps you think logically and learn basic syntax, the workload isn't that bad and it isn't that hard",
                "Yes! This is a true beginner friendly course. I came into it as a humanities major with no experience and found the entire experience informative and encouraging.",
                "Take this course if you want to open up your world to a new way of thinking and acquire a skill that will be vitally important in the future no matter your field.",
                "It is fun and you get free merch, but be prepared to be frustrated and go to office hours.",
                "YES! I love CS50",
                "I would recommend it to another student who is interested in coding or wants to learn more about coding. There are a lot of factors that can discourage someone from taking this course, especially someone with no prior coding experience, but if you want to get an introduction to coding I think you should definitely take this class.",
                "YES! I was completely new to coding and this course taught me so much without feeling behind\/stuck. The skills you learn are widely applicable, whether you want to pursue CS in the future or not. The workload is considerable, so you do have to set some time aside for the psets, but worth it, given how much you learn in such a short amount of time.",
                "Yes! Contrary to popular opinions, I actually think this is a great QR credit because it really helps students learn every step of the way and the skills it teaching are relevant.",
                "Yes 100% even if youre not a cs person this is a great intro to a bunch of cs concepts and the culture of the class is so fun. And free food.",
                "Yes! Amazing course, I learned so much",
                "YES!! Please take it if you can make the time for it in your schedule. It's a high-workload class. There's lecture, which will take two hours every Monday (longer if you takes note like me). Then you have a required 2 hour section on Tuesday or Wednesday. And then there are the psets, which can take a really long time. But there's a ton of support. And sections really are helpful. And the lectures are fun to watch. And this is just a great course to start learning CS and getting excited about it. If I wasn't a junior, I definitely would have taken more CS after this course.",
                "I would recommend taking this course if you are interested in computer science. The course load is very demanding, so if these skills are going to be applicable to the rest of your college journey, definitely take this course. I had no prior experience with computer science, and this course provided very thorough breakdowns of every aspect we were working with each week.",
                "Yes, it is a good intro to CS, but it is a lot of work.",
                "Yes I would recommend.",
                "Yes good intro to comp sci",
                "yes, i'd recommend CS50, especially to those who haven't take CS before or lack substantial CS experience! though there is a heavy workload, CS50 is a really fun course. i found the psets to be mostly manageable and enjoyable.",
                "Yes! It's famous for a reason. The course is well structured, well resourced and well taught.",
                "I am a humanities guy through and through, but I wanted to explore new academic fields and I said, \"Sure, I'll take this for my QR credit, plus, I've always wanted to feel like Rihanna in Ocean's 8.\" NEWS FLASH! CODING IS SO HARD! I feel so trauma bonded with the people I spent HOURSSSS with at office hours on a weekly basis. Some of my friends LOVED this course, but I will safely not be coding ever again... BUT- that being said, I learned a lot and if I had to do it over again, I would. Genuinely better than any math course (in my opinion, don't hate me if you love math) and you learn so much in such a short time, even if it is a lot of work.",
                "I would recommend this course to someone who is interested in CS but wants a practice run before 201. This course gives you a crash course of programming and teaches a lot of important skills like design and ideas that go across different languages. It is a lot of work, however, so if you want to learn a little coding but aren't a CS major, I would recommend 112 instead.",
                "Maybe. Depends on expectations and time availability",
                "I would absolutely recommend this class. I scared myself so much by taking this class that I originally did not want to come to school because I thought I would fail it. I was so stressed and anxious, because I heard talk of how hard it is, and how you will have to drag yourself through crying. This is NOT the case. Where I thought I would have a semester of late night spent in total confusion, I instead found joy in CS50. I have no coding experience, and felt that I would be helpless. The lectures are truly for beginners, and move at a good pace. It can be hard to sit for so long to listen to them, but all of the concepts are within your abilities. Take advantage of office hours, be patient with yourself, and know that you are as able to do computer science as anyone else. If you told me I was writing this review at the start of the semester, I would have said you were crazy. But yes, I absolutely recommend CS50.",
                "Yes, sometimes required a good amount of work, but really good, broad introduction to programming. You'll flex your mind and solve some pretty cool problem sets. They do try to make the course accessible.",
                "Yes, I came away learning so much. I would definitely warn them of the workload though-- it is no joke, but certainly manageable if prepared.",
                "Yes, I would recommend this course to any student, even if they do not intend on majoring in CS. This class teaches you very valuable programming skills that can be useful to any career or field of study.",
                "Yes. Great into CS course that was fun.",
                "Yes if youre curious because this class will tell you if you like programming or not. And frankly programming will only get more and more important in the future so its not a bad idea if you think you can deal with the insane workload that keeps you on edge every weekend.",
                "I would definitely recommended this course to another student, yet I would make sure the student understands the large time commitment required to succeed\/take full advantage of this course.",
                "I would absolutely recommend this course to any student who is curious about learning how to program (an important skill!).",
                "I would only recommend this course to students who have a leg up in computer science and coding. Although this course is designed for students who have little to no experience, I found that students who fit that criteria struggled immensely.",
                "Yes, I would. I felt like I learned a lot of useful skills for whatever I would want to study or have a career in.",
                "No, unless taking it as a senior or with a few other classes, because it requires way too much time and dedication to get the problem sets done on time.",
                "Yes, if you want to learn more about computer science and coding and you dont have much experience you should definitely take this course. Even for those who have some experience, this course helps with solidifying the fundamentals.",
                "Definitely. It's the best course at Yale.",
                "I would greatly recommend this course to anyone who even has a remote interest in how computers work.",
                "yes to everyone",
                "I would definitely recommend this course to another student. CS50 does an excellent job as solidifying the foundational knowledge that students, majoring in CS or just wanting to know the basics, will have to continue on their road to higher CS courses. As a student coming into the course already having experience with coding, this course helps with the theory side of computer science, which most people do not really focus on but does help with strengthening the ability to code and think logically.",
                "Yes",
                "This is a really good first-year course to take to gauge interest in computer science. It is fun, well organized, and teaches you valuable skills. I highly recommend this class for people who want to experience a fun STEM course at Yale.",
                "This is the best course I have taken in my life. I came into Yale with no prior programming experience and was pretty scared to take an intro programming class first semester but the way the class is formatted guarantees student success. Definitely take this class.",
                "Yes, I believe this is a fair introductory computer science course.",
                "Only if you are completely new to computer science and not majoring in something that uses a lot of cs. For CS, engineering, and other majors that involve CS I would suggest going to 201 directly. This course isn't that helpful for CS majors.",
                "Yes, but with a slight caution. This course has very little weekly structure apart from section, but a very intense workload if they are truly a beginner coder. It is very fast-paced but an incredibly useful course if anyone has any interest in learning to code.",
                "It depends. If the student wanted a very basic intro to computer science, then yes. But if the student had some prior knowledge, then no because this class was too stressful at times because of the sheer work.",
                "Yes! Even if not a computer science or adjacent major, the course offers a lot of valuable material and is a fun experience (especially the events)!",
                "Yes. But I hope the computer science department will consider counting the course more in the Yale curriculum.",
                "Yes, if they have prior experience with coding.",
                "Yes, I would recommend it both to people who are new to programming and those who have done programming in the past but want a refresher course on the fundamentals. The work can be frustrating at times, but the course provides you with plenty of resources like the lectures, labs, practice problems, office hours to trudge through the work.",
                "Yes, The course is a lot of work but provides you with a lot of practical skills that can be applied to many areas.",
                "Yes, I would recommend it. However-- if you've taken a CS class before you shouldn't take this. Take CS 201 or 200 to start. If you have experience a lot of the stuff will be review.",
                "I absolutely would, its a great intro CS course.",
                "yes",
                "You watch a 2.5 hour lecture on video, where the lecturer moves so comically fast that you cant take notes and is so long that it is impossible to focus for the whole time, and then, you got to a 2 hour section where they attempt to explain what was covered in the lecture.",
                "Yes, it gives you a great foundation in computer science principles and teaches you how to problem solve like a programmer.",
                "I would definitely recommend this course for students interested in computer science and programming. It can be a very difficult course, but it creates an environment for students to learn many essential skills and concepts in the field.",
                "yes. it was a great challenge but also a great experience. for those who wants to learn cs, this course is a must have.",
                "Definitely. If you are new to CS or have a little bit of knowledge\/experience but don't feel ready for 201, then this class is perfect for you.",
                "Unless you really want to be exposed to coding or have to take this course for your major (I am a S&DS major), I would not recommend this course. It has definitely been the hardest course I have taken at Yale in that it is very intellectually challenging and the work load is insane. I spent an average of 10 hours working on the PSet for this class every week. So unless you think you can put up with the challenge and have enough time, do not take this course for \"fun\". I would advise against it especially if you are taking 5 credits."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 100 01 - Intro Computing & Programming"
    }
}