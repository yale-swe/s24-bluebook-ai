{
    "crn_code": "10878",
    "season": "202203",
    "enrollment": {
        "enrolled": 131,
        "responses": 115,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                2,
                2,
                5,
                22,
                69
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                6,
                5,
                11,
                28,
                51
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                3,
                5,
                7,
                37,
                49
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                4,
                10,
                22,
                26,
                37
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                5,
                16,
                81
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                1,
                1,
                1,
                6,
                94
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "this course will make you a better programmer.",
                "I learned what it takes for a computer to run, all the way from the physical transistors to the Compiler/OS. It is a lot of work but incredibly rewarding.",
                "We solidified and extended our understanding of memory management. We learned about the shell, compiler optimizations, processes, caching, floating-point arithmetic, translation to and from assembly instructions, operating systems.",
                "Learned about computer architecture. Also improved my coding abilities by a lot.",
                "Wow you learn so much during this course. Not only do you get way better at programming in C and learn a lot about lower level C syntax, this course opens your eyes to the entire world of computing below the programming language level. From gates and transistors to assembly language to compilers and operating systems, you really cover it all.",
                "General information about computer systems.",
                "I learned the limits of my grit and academic prowess. Whether this is a statement of my own ability and condition or the courses ridiculously demoralizing amount of work, I leave that judgment to the Coursetable reviews spanning the past decade.",
                "This course exposes you to all the abstracted magic behind what we call a computer. Youll start with systems components (like what is the CPU, memory, storage) and quickly dive into the wacky world of Intels design choices. ALUs, Address Spaces (pointers and memory), assembly, compilers, processes, virtual memory, hardware caches and the TLB, and wrap up with memory allocation. Its everything you could ever want to know about how machines go brr. I could confidently understand different architectures and be dropped in to different computational scenarios and be ok.",
                "I learned a lot about systems programing.",
                "computer system and architecture",
                "A complete understanding of how a computer works underneath the hood. The idea of layering and abstractions for both hardware and software at all levels. Good understanding of systems programming.",
                "I learned how to learn again from taking CPSC 323. 323 made me more confident in my ability as a CS major. 323 goes through so many different topics that are all related at the end and really tests your thinking and understanding of the material. There is no \"faking it\" in 323, you either get it or you don't and 323 offers so many opportunities to understand it if you don't.",
                "I learned a TON about how computers actually works. I also feel like my coding skills improved a lot, and I am much more confident in my abilities as a programmer now.",
                "Systems programming, design, and architecture. Understanding how computers work at the base level.",
                "C programming, systems, compilers, OS",
                "thinking about system design",
                "I understand how computers work now. I learned how to write complicated code, not give up, and spend hours debugging.",
                "A thorough understanding of how complexity is managed in computer systems, and how modern computers are organized and built from the lowest- to highest-level interfaces. Broad exposure with all the key elements of computer systems: transistors and gate design, machine instructions, compilers, operating systems, memory managers. Intensive practice with C program development, interacting with all elements of the language and gaining exposure to different development styles. Understanding of the most important performance determinants and research areas in modern computing.",
                "- Assembly\r\n- Process Abstractions\r\n- Operating Systems\r\n- Fork/exec paradigm\r\n- Virtual memory management\r\n- Dynamic memory allocation\r\n\r\n323 also make you a stronger programmer and increase your competence in programming in C!",
                "I learned a lot about what happens under the hood. In past CS classes, we just focused on writing programs and didn't think beyond that. This class took that to the next level. We learned what exactly happens when we run a program, from OS, memory, compiler, and more.  Beyond the content, I developed better skills as a programmer and better time management.",
                "Learned the inner workings of the systems we use in computer science. Peeled back the abstraction to teach you more about how the tools you use in CS actually work.",
                "This course was one of the best courses I have taken at Yale. While it was by far the most challenging, I felt my knowledge and perspective of the field of computer science significantly broaden and I gained a deeper understanding and context and how the real world uses computer science and how I could use computer science to accomplish my goals and change the world.",
                "Lots of programing skills",
                "I learned about how a computer works and the underlying mechanisms behind a lot of the things I have heard about or been using in my previous CS courses.",
                "I honestly learned a lot",
                "Amazing course, leaned so much about systems programming and general low level",
                "Systems programming, memory management, shell, etc",
                "knowledge of computer organization and a first introduction to lower level programming",
                "I learned various essential computer systems skills required by all for a computer science education.",
                "This courses teaches you all the basics to get into any systems including topics like OS, virtual memory, microarchitecture, assembly, etc.",
                "Learned a lot about computer architecture and the inner workings of several c functions.",
                "Learned how to apply theoretical knowledge of systems architecture.",
                "I learned about the inner workings of computer systems, starting from ALUs, assembly instruction, virtual memory, processes, all the way to memory allocation.",
                "Systems programming",
                "A lot of \"behind-the-scenes\" about how a computer works",
                "Essential knowledge about the hardware and software of a computer system. How code is translated into machine instruction, how a system manages and optimizes physical and virtual memory, the difference between what a user sees and what actually goes on in the background of the system, various system calls.",
                "General systems programming skills and programming fluency overall.",
                "Gained a lot of necessary knowledge on the basics of computer architecture that I believe come in handy in the industry",
                "A thorough understanding of systems programming and computer organization.",
                "I have never learned so much in a class as I have in this one. I learned how to actually code. I learned how a simple variable declaration triggers thousands and thousands of actions in a computer system. It was incredibly fascinating and difficult but worth it.",
                "Computer systems: TeX processing, assembly code, compilers, operating systems, malloc",
                "We learn a lot over this course. Almost too much. From assembly to computer organization to virtual memory to compilers to how to really program in C, we cover it all.",
                "We got an overview of several different topics in computer systems - the syllabus provides a list of topics you will learn about. The course provides preparation for other Systems courses in the CS department. You will also become a better C programmer.",
                "I learned about computer architecture.",
                "Compilers, virtual memory, physical memory, operating systems, and more.",
                "323 raises the bar for you as a thinker and programmer to the ceiling and then smashes right through it.",
                "Learned a LOT in this class. How to debug problem sets, code, study etc. Tremendous growth.",
                "We got a large overview of computer systems, covering topics ALU design, Assembly, compilers, virtual memory, memory management, floating point arithmetic, operating system kernels, shells, and more.",
                "This course gave me a solid introduction to systems and lower level programming. I was also able to become a better programmer overall and learn more debugging skills.",
                "systems programming, computer architecture, improving my c coding abilities",
                "Understanding of the physical computer, ie the lowest level of software you can get without electrical engineering courses. Topics include Arithmetic Logical Units, Floating Point Arithmetic, Hardware and software caches, assembly instructions, compiler optimizations, memory management far passes whats covered in 223, basics of operating systems.",
                "Physical computers then and now, Twos complement, ripple-carry adder, carry lookahead, Von Neumann, address spaces, malloc/free, alignment, the memory wall, Assembly programming, Compilers, Floating point representation, Processes, File descriptors & pipes, Virtual memory, Dynamic memory allocation, Hardware caches, Hardware address translation, and Cache and address translation optimizations",
                "Confidence to tackle any project anywhere at anytime that has many moving parts Better understanding of different layers of the computer abstraction (from transistors and gates and circuits to assembly language and the kernel/operating systems) Its actually insane how much material we covered!",
                "Learned the very intricate details of how computers are organized and how they function.",
                "The course covered a wide variety of computer systems topics from assembly and compilers to caches and operating systems. Each topic was studied at a surprising level of depth considering the amount of time spent on each topic, but at the end of the course, my overall knowledge of computer systems and their inner workings was exponentially greater than at the beginning of the course. Moreover, the fast pace and challenging difficulty of the course forced me to hone my time management skill and ability to learn and understand new content at a fast pace. Figuring out the best way for me to learn and apply the content was critical to managing the course and its workload well.",
                "A great insight into how computers and operating systems work at a fundamental level.",
                "An introduction to computer architecture and low-level programming.",
                "I developed a strong understanding of computer systems and how different components of the computer interact at different levels to enable the higher level processes that we are used to in our daily lives.",
                "programming",
                "I learned how to plan out my psets",
                "Systems programming, principles for computer systems design",
                "This course required a level of programming that I have not yet needed in a course at Yale.l",
                "So much!! This is probably the most instructional course I have taken at Yale. I learned so much about how computer operate from basic hardware to operating systems and virtual memory management.",
                "We learned about all the levels of a computer between (not including) the physical hardware and the application code: basic computer microarchitecture, assembly language and register allocation, floating-point representation, compilers, operating systems, caches, virtual memory, processes. Through the projects, I got experience with longer programming projects than Id had before at Yale, and got to take a deeper dive into some of the topics we were studying.",
                "Knowledge in Kernel, Bash, general C knowledge, stress management, time management skills, ability to code under pressure, etc.",
                "Basics of compilers, operating systems, memory allocation, system design, how to read and write assembly language.",
                "really learned how computers work at a low level. very cool to see how we get operating systems/applications from semiconductors to hardware arithmetic to compilers and so on.",
                "I learned how to take a 4.9 workload class"
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "It demands a lot, both from the PSETs and comprehending the lecture. However, the rewards are immense. It's the sort of class that deserves 2 credits: both for the amount of work and the amount you learn.",
                "If this course continues to be taught with this much material in one semester, it should not be worth only 1 credit. It should either be split up into two 1-credit courses, or changed to be worth 2 credits.",
                "Strengths: The course material is fascinating. There is a lot of support and Abhishek is very nice. Weaknesses: Psets are definitely long and the exams are not easy but grade-wise, I think most people are doing okay.",
                "Lectures near the end of the course became a little disorganized. I had to rewatch many of the later lectures because it seemed like the professor was jumping around a lot whenever someone asked a question relevant to a different topic",
                "Strengths: Professor, ULA availability, TA availability \r\nWeaknesses: N/A",
                "The strength is that it is just one semester. The weakness is how much stress it entails just to ruin one entire semester for a student at Yale.",
                "Strength: This course will force you out of your comfort zone. You will have to work with peers to understand material, go to office hours, sink time into projects and studying BUT it will make you a much better student and give you a greater understanding.\r\nWeakness: TFs could be hit or miss based on their style when scheduling appointments. Queue times could get exceeding long (and the online system was often only used for virtual Ohs). Final project felt much more unstructured than other projects in the course. Second exam felt much more unruly compared to first (more content, more questions, tough time limit). Getting 50-60% on an exam was considered good for this course.",
                "Strengths: This course contains a lot of information, and I learned a lot. The instructor is also a very skilled lecturer and made many complex concepts clear and understandable.\r\nWeaknesses: The assignment specs for this class often contained very unclear sections, which made the assignment immeasurably more difficult. I believe this class would be significantly improved if the specs were clearer and more thorough. I often needed to go to Office Hours just to understand the spec. \r\nAdditionally, the course was incredibly stressful for me (by far my most stressful course at Yale) and I would have valued it a lot more if grading was lenient after assignments were submitted. \r\nFinal comment: Some of the assignments are known to be more difficult than other assignments, but this is not the same for everyone so do not expect the \"easier\" assignments to necessarily be easier than the others.",
                "Very thorough and informative",
                "I learnt a lot in the class. Lectures were engaging and challenging. Support from TAs was exceptional. PSETs were challenging but interesting. Course takes a tremendous amount of time. It was a continuous grind and I was burnt out by the end.",
                "The biggest strength of this course is Abhishek. Abhishek is amazing. I will be the first to admit that I have fallen asleep numerous times in previous CS classes (@Stephen Slade), but Abhishek is engaging and a great lecturer. 323 is hard, but Abhishek helps make it easier by explaining all the topics clearly and always stops and clarifies things if necessary.",
                "This course covers a LOT of material, but it is all really interesting and taught very well. The ULAs are all very helpful, and I felt there was a lot of support throughout the semester.",
                "Amazing class, well structured, great professor, no weaknesses.",
                "great course that really pushes your programming understanding and capabilities. weakness is not having enough office hour support.",
                "Only weakness is the final project, not having access to ULAs/Office Hours was very frustrating and one could get stuck for several hours on a simple bug. I like how the exams were not too big a chunk of your overall grade, and the programming projects felt rewarding without being all too difficult, granted you had to start on time and seek help when needed.",
                "strength: abishek's lectures are clear and projects reinforce what we learn\r\nweakness: there's so much content outside of what you do in projects that sometimes it feels overwhelming the amount of material there is in this class",
                "The topics covered in this course were very interesting; there were a lot of additional materials and help from the ula-s. The homework projects were a disaster though.",
                "This is an intense, broad, and deep course, but it is organized superbly to support student learning. The pace and breadth of this course are necessary to build a solid foundation for all possible further directions of study within CS, but office hours, the online discussion board, and course deliverables are all organized in a way that provides maximal support to students and ensures ample opportunities to ask questions, engage with the course content, and solidify understanding. Overall the difficulties faced by students with this course have been successfully addressed by the instructors, and I never felt my success in this course to be limited by a lack of support or communication with the teaching team. The connections between lectures, programming projects, and exams is strong and the projects and exams are effective at reinforcing content. The quizzes, however, are not always well-matched to the class content.",
                "Material is difficult to comphrehend, but Abhishek does a good job in guiding you through it. The p-sets, although challenging were very well designed to test your programming abilities and mastery of the concepts. The ULAs and office hours were very helpful. This course really pushes your endurence in CS. \r\n\r\nMy only complaint is that the final programming project could be handled better. Yes, it was to test your individual programming abilities, but not having office hours for help really suck. Your whole implementation could be wrong the whole time and you wouldn't know where to start to fix it. It's hard to learn the material and coding it at the same time.",
                "Strengths: Prof Abhishek is an amazing lecturer and very engaging, I liked how every lecture was recorded, time given for psets were fair, time to prep for exams were fair, ULA and TA staff were great, OH were great\r\nWeaknesses: I find that tests on Gradescope are very odd for a CS class, I would probably prefer pencil and paper, additionally, I think OH could definitely be more efficient in terms of conceptual help vs debugging help (because then the conceptual help could encompass a whole group of people). Also, not really a weakness but I find the exam before reading week then a final project due at the end of finals is a bit of overkill, given that many people (including myself) could only really pour time into the project after my last final because working on the project was very time consuming.",
                "Strengths: Great overall curriculum, fun and engaging PSETs, Professor Bhattacharjee is a great lecturer. The TAs are generally knowledgeable. \r\nWeaknesses: Circuits unit seemed a bit contrived and unnecessary. Added a lot of undue stress.",
                "I feel like one of the strengths of this course is that it forces students to learn in order to progress. There is no way to \"simply do the assignments\". Each assignment forces you to learn the deeper concepts behind each coding assignment. Therefore, this also prompts a lot of collaboration between students allowing students to learn amongst themselves as well. In terms of weakness, I feel like the course is fast-paced; however, this weakness is inevitable as there are a LOT of concepts to cover within the semester.",
                "One of the most interesting and time consuming classes at yale, but also one of the most rewarding",
                "This course does a good job of getting into the nitty gritty of topics that help you understand what is going on behind the scenes when you are writing code. This is helpful when debugging or dealing with issues in the future as you'll have a deeper understanding of what you are actually asking the computer to do. The course has pretty dense content that is covered at a somewhat quick pace, on top of that the psets take extremely long. We were often given additional things in lectures to go through in our own time. Considering how time consuming the homework assignments are for this class, I'm not sure if it made sense for us to be given additional work to go over the lecture content which at times wasn't super related to what we were doing in our psets. I honestly think this course is worth 1.5 credits and it would be worthwhile to think about how to reframe it to be the workload of 1 regular class if it counts as 1 credit. I think the course is a deterrent to a lot of people considering the CS major, which really shouldn't be the case. (which has nothing to do with the instructor but how the workload of the course)",
                "Strengths: well-taught, learned a lot\r\nweaknesses: no class should ever take this much time.",
                "Very office hours dependent, needs more TAs",
                "Strength: instructor is very involved in the learning process and willing to shape the course as needed based on feedback",
                "This course was very well maintained, managed, and taught. If I could improve the course, I would issue more office hours.",
                "It was way harder than it needed to be to get the same level of knowledge",
                "Strengths: I loved the way the course was taught. The professor was very engaging and welcomed questions from students throughout the class. He was also kind enough to answer any remaining questions from students after class. The TFs and ULAs were also extremely helpful in offering insight into how to approach problem sets. \r\n\r\nWeaknesses: My only comment would be that the course felt a little packed, but I also understand that it's somewhat inevitable due to the breadth of the course. On the contrary, I think I would have hoped to learn more about threads/locks and networking if time permitted.",
                "Strengths: You learn a lot\r\nWeaknesses: Psets are so hard you have to somewhat rely on TAs and ULAs for help",
                "A lot of support and resources. Few p-sets could be a little more related to material taught sometimes.",
                "The course is organized very well and the teach staffs were very knowledgeable and transparent. The coding projects were really helpful and relevant to the course material. There are a lot of materials in addition to the lectures that help students learn the materials.",
                "Extremely time consuming and trying, but also very gratifying. Expect long hours spent on problem sets and a more challenging course than what you might be used to.",
                "Strengths are definitely the professor. Abhishek is an amazing lecturer and cares for his students. Obviously the only weakness is the difficulty of the course but it is a required class for CS majors",
                "Honestly this was probably the best course I have taken in the computer science department so far. I dont think much could have been done to improve it.",
                "Strength: so much information packed into one course. You learn so much so quickly and I found the material to be quite interesting once I actually understood what was going on. Weakness: so much information packed into one course. Zoning out in lecture for 5 minutes meant that I'd likely be lost for the rest of class.",
                "Psets great\r\nSlides could be MUCH MORE ORGANIZED: slides were basically unreadable on their own. Perhaps the content on the slides, then further explain on the board.\r\nVery charismatic and engaging Prof.",
                "Abhishek is a gem, his teaching is very understandable and clear. However, hes been dealt a bad hand  this course has too much in it as-is so its really hard to cover everything in sufficient depth. Expect a brutally fast pace, and know that you will he left behind if you dont keep up with the material.",
                "You certainly learn a lot of important concepts and gain an improved understanding of how computers work. However, the amount of work assigned feels rather unnecessary. The quizzes often have concepts that we didn't learn about in class or in supplementary material. The tests are not very reasonable, as in many people simply don't have time to finish them and they can feel very overwhelming, so you might do badly even if you studied quite hard.",
                "I thought it taught a lot but the workload was also very high but this is rather unavoidable. No real comments on improvement.",
                "Office hours were outstanding. You can find a time almost every day of the week at almost any time of the day. Abishek is an excellent instructor. No weaknesses, but it is high workload.",
                "Incredible lectures. Enjoyable problem sets, but some (namely 3 and 5) were convoluted and very difficult to complete with the spec alone--you needed to get extensive help from office hours that was often unrelated to the spec and/or walkthrough. Codebase for project 3 was messy.",
                "So many weaknesses. Strength is teacher's charisma.  He is unorganized and lectures do not follow well. The man is a genius though.",
                "This course covered A LOT of material (possibly too much). Professor Abhishek is a gem and did his best to keep students engaged throughout every course. However, the class was incredibly fast-paced, and we jumped from topic to topic very quickly, and it was difficult keeping track of every little detail or topic covered. Furthermore, while I felt that the lectures were engaging and packed with helpful material, the five projects did not always directly relate to the material we were learning in class. In some cases, the projects even contradicted conventions covered in class (eg: the L1 page table meant the root level in lecture and the leaf level in the project). I believe the assignments could have been organized better, and they could have been more conducive to our learning.",
                "This course had many strengths: it was well organized, the professor was very understanding and engaged with students, psets supported lecture material. There are hardly any weaknesses.",
                "Strengths: Abhishek (his teaching as well as his ability to respond to feedback that he was given about the course throughout the semester), the class organization, the ULAs and most of the TFs, the ability to ask questions on Ed and have them be answered relatively quickly.\r\nWeaknesses: This course should not be just one course. I think the major would greatly benefit from having this class be broken into two different courses. There was so much material that I felt like we flew through in class and so often Abhishek would tell us to go through the rest of the slides or do additional readings he put on Canvas. But, on top of the PSETs that took 30+ hours per week and the quizzes that could sometimes take another couple of hours, there was no time for going through the rest of the slides or reading any additional material. I wish I would have had the time to take my time learning each topic well and there is just no possible way of doing this with how tough this course is now. I realize it is not a fault of Abhishek, but more of Yale and their inability to respond to students well being. I as well as my friends who were taking the class often felt so awful because of this class, and numerous reviews before mine have said the same thing. I also believe that the final project was a bit too much. I felt like I devoted most of my reading period/finals to working on the project, only to not finish it. I had to push off studying for other finals, and overall the final project put a bad taste in my mouth. I realize it was supposed to push us out of our comfort zone but I felt like it was so ridiculously long that I couldn't do anything else but work on it. I also feel like the no drop policy kind of sucks. I understand why it's there, but also I did not do so hot on the first PSET despite starting early and working my butt off on it, and I felt like it weighed on me the entire semester. Also there was no late days which also was a bit rough. Some weeks I just needed a few extra hours but didn't want to take the 10% off.",
                "I think all of the strengths of this course lie in Abhishek and the TAs. He is kind, attentive, thoughtful, responsive, well-prepared, and consistently enthusiastic -- absolutely everything you could want from an instructor. The TAs were much the same -- I did not have a single bad experience with any of them I saw this semester. However,,, this course is a pipe dream. 323 manages to be a weed-out course, a time suck, and frankly not that useful for developing programming skills, and I finish the semester feeling burned out and empty. Abhishek tries to give you some agency at the beginning of the course by saying \"use the first two weeks to evaluate if this is the right semester for you to balance this course alongside your other commitments.\" However, unless you are a CS bot who has no hobbies, desires, or interests outside of your schoolwork (which admittedly is about 20-30% of the class lol), there is NO 'right semester' for you to take this course. You just need to choke it down as soon as possible, at the inevitable expense of having a balanced life. Abhishek detests the moniker \"weed-out course,\" but when the 180-person course drops down to about 120 by the end of the semester, and I've heard of several students saying they'll have to change their major if they don't do well enough in the course, there's not many other things you could call it. The fundamental issue with 323 is that the idea of the course, apparently dreamed up by old CS faculty and handed down to Abhishek, has little to do with reality. The sheer amount of work was unbearable and unacceptable for a major req in a department that claims to care about mental health. There was a consistent disconnect between lecture/exam material and homework material (yes, you often have to relearn the content under different specifications and naming conventions for the homework), and Abhishek added 'optional' supplementary material that was key to understanding the material and doing well on exams, but almost nobody had the energy for these on top of doing the psets. Frankly, you have only a few paths to make it through this course: 1) you're a bot who has no other meaningful coursework and will give half-assed responses to your peers on Ed to let them know that you're very smart and know more than them (about 20% of the students), 2) you live in the office hours and/or do the assignments in a group, which is prohibited by the course policies, but in practice happens laughably often (~30% of the students choose this), or 3) suffer a lot of late nights, stress, and frustration and consistently try your best only to get Bs and Cs, because you try have a life outside of the course and a moral compass and thus didn't choose options 1 or 2 (the other 50%). Sure, the \"grade doesn't matter,\" but considering that the course does not really teach practical programming skills and is actually less enriching from a C perspective than 223, what else are we supposed to get of the course except our grades for all of our hard work? The vast majority of the class does not want to be computer systems researchers, they want to be software engineers, and while I think the material in this course was on the whole pretty interesting and cool, it is absolutely NOT worth the insane amount of headache and arbitrary difficulty. If this course is so necessary to the major, it really needs to be split into a yearlong sequence of two courses with reasonable workload. The one saving grace, again, was Abhishek, who was always there for you if you sent him an email or talked to him after class. Hopefully he will recognize (based on the astronomical number of students reaching out to him for extensions and other help) that this course is simply too much.",
                "Strengths: abhishek and the teaching staff are otherworldly in their dedication. Abhishek in particular shows resounding dedication to students mastery of the material and their mental well being throughout the course. Abhishek is an expert lecturer and communicator who welcomes questions and teaches with great enthusiasm and humor. ULAs and TAs are generally great, and office hours are plentiful. Abhisheks Q&As ahead of exams are essential and wonderfully done. \r\n\r\nWeaknesses: heres the thing, the course is as good as it can be in its current form. If one accepts the premise that the workload is going to be otherworldly and the semester will be consistently stressful no matter what, then its current form is as good as the course can be. I could pick a bone with those two foundational facts, but the course is what it is, and given that, its fantastically done.",
                "Strengths: ABHISHEK, weaknesses: too much course content, would retain more if it were split up, but I appreciate that it is a broad overview class that will inform the cs classes I choose to take further at yale",
                "Strengths: Well-organized, professor was very helpful and supportive, great TA's\r\nWeaknesses: the exams were structured in a very time-oriented fashion, where we are intentionally given a test that is too long to complete. I don't think this is a great evaluation of our knowledge, since in mainly just tests our speed in answering questions.",
                "I think the main strength of the course is just the immense combination of breadth and depth of topics covered. The course tackles a lot of topics across many layers of computer architecture, yet each topic was covered at a surprisingly deep level. I don't think I have any complaints about the course.",
                "Strengths: professor and the way the material is taught",
                "The exam is way harder than the course material.",
                "Strengths: Lots of material covered, all very clearly. Projects were fun and interesting.\r\n\r\nWeaknesses: Very high workload. Basically 0 feedback on projects, since theyre graded via script. Would have preferred the projects be partitioned (e.g., code has to pass test cases A, B, C by some date X) to help out people who have issues with procrastination.",
                "The course is very well designed and Abhishek is a great instructor. While the class is very time-consuming overall, there are a lot of resources offered to students, both in the form of office hours and supplemental material, so there isn't much that can be done to improve the current structure.",
                "It's a really good course, very well-organized, amazing professor, amazing TF, amazing ULAs although it's super intense.",
                "I think the inclusion of lecture notes would make this course significantly easier. Being able to focus on the content in lecture rather than taking notes would certainly help. I ended up skipping lectures so I could watch lectures and pause when necessary online to be able to take proper notes - there is a lot of content, far more than is possible to take good notes for at normal lecture speed. Besides that, I don't think any major meaningful improvements can be made that don't involve reducing content. I also would like to see the private tests - it allows for so much more improvement and edge-casing in code as you can see what you are missing.",
                "strengths were that this course felt very organized. Abhishek thought out the curriculum and how he was going to teach. weaknesses were the amount of work that this class took.",
                "Excellent instructor and support staff",
                "While the effort was definitely there, the course lacked the personnel to provide the support and advice needed in office hours. As projects were considerably more thorough than lectures (for good reason), there often were not enough ULA's to get assistance. Apart from that its a great class, the projects are very time consuming but pretty fun once you get the hang of them. I do not think it made sense to make the first Project the most time consuming one, as it did not give many students the opportunity to adjust to the workload",
                "I wish that there was more background/guidance on Linux. I feel as if this course required a lot of familiarity with IDEs/Linux, which I did not necessarily have coming in.",
                "The strengths of this course are the formatting and the lecture style. I learned a lot from both the lectures and the problem sets.\r\n\r\nA weakness of the course is a lack of available teaching staff. Even though Abishek made a great attempt to hire as many ULAs and TFs as possible, the lines in office hours were still extremely long making it hard to get help.",
                "Strengths: Pretty much everything. The lectures were amazing: I really liked that Abhishek encouraged class participation, both asking questions and answering questions. The support was amazing: Abhishek was so thoughtful, and there were so many ULAs with office hours. I liked the problem sets, since they helped me understand the material even better. I liked that the exams were long, which made things less stressful to me.\r\nWeaknesses: Sometimes the wait in office hours got overwhelming (I waited almost 2 hours once, and it was still a few days before the project was due). I think it could be helpful to have different office hours lines for short questions and long questions.",
                "Strengths here was the professor, very engaging class with a quick pace. Things never felt useless to learn about.",
                "Strengths were that professor abhishek's lectures and level of commitment to making sure that he is as transparent as possible and open to feedback. \r\n\r\nWeaknesses were office hours closer to the end of the semester. While this is expected because the ULAs are busier and the students themselves have higher workloads and will require expedited help to completely the pset on time.",
                "Strengths: you learn so much from the psets and lectures, office hours are super helpful, class is very fair, you always know how you're doing\r\nSometimes it did feel like the psets and lectures weren't that related (definitely more at the start of the course than later on). Also, the first pset (rust removal pset) felt unrelated to the rest of the course and had me worried about the rest of the course since it was very tedious and time consuming (all the future psets weren't like the first one).",
                "Strengths: Professor, office hours"
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "yes, only if your courseload in other areas isn't too much. this course can be a schedule clearer.",
                "I would not recommend this course to another student. The amount of work necessary for a 1-credit course is simply unfair, when compared with any other course at Yale. However, the course is required for the CS major so in many cases there is no choice.",
                "Recommended if you are a cs major since it is required. If you are just looking for a very difficult class that will make your brain explode, take the course.",
                "Yes. I don't know that I would recommend it to a non-CS student because it is hard to justify the workload for a non-major class, and I guess CS students have to take the course anyway, but I still think it was a great course and would tell that to others.",
                "Only take this course if you're sure that you want to stick with CS / CS adjacent as a major  it took up 90% of my time spent on courses this year if you want to truly understand the material and try your best on psets.",
                "Not at all, made me hate the major and coding. The insane amount of time one needs to even understand the vague ass specs of a PSET is ridiculous. The uncertainty of performance in this course will metastasize to your other courses and it is unnecessary to put students through so much stress when the class could be broken apart into a slower-paced course and an elective with extra material. Absolutely shameful that the original founders of this long ass course which constantly receives the same feedback each year with regards to workload feel we need to go through this just to prove a little bit of their own self worth.",
                "This is a required course for the CS majors, so you have to take it! Prof A was an excellent lecturer and the ULAs were great, so go in knowing you won't be alone. \r\n\r\nIf you're NOT a CS major (or not considering the major)... you may want to take a different course. This class will ask for 20-40 hours of your time every two weeks, and it's not something to sneeze at.",
                "It's pretty interesting",
                "Yes, but only if it is required for the major. While the topics are really interesting, it is really not worth the insane workload if you're not a cs major.",
                "If you are looking at this course, you either have to take it for your major or you are a sweat. Either way, you are going to end up taking the course. Regardless, 323 is tough yes. It is notoriously viewed as one of the harder, if not the hardest non-grad class at Yale. Conceptually, 323 tests many topics that may seem abstract compared to previous programming classes, but Abhishek does a great job explaining these concepts. The important thing to take away from this is that the primary reason 323 is rated so harshly is because of the TIME COMMITMENT. If you do not think you have the brain capacity to handle 323, I recommend surrounding it with easier courses like I did. By taking 323 with guts or electives that fill your distribution requirements or anything that doesn't command a hefty workload, you can focus all your time and attention on 323. I truly believe that if you plan your schedule and courseload wisely, then 323 is not that bad of a course. It is just a lot of time and effort that you need to dedicate weekly to your PSETS, and what ends up happening is that people can't spend as much time as needed because they have too many other PSETS/commitments to do. Also, just show up to lectures. All my friends skipped the lectures and they were lost. The recording software at Yale is spotty and not guaranteed to work all the time. Every second of 323 is spent teaching a new topic, and often when I go on my phone to scroll IG for one second, I am lost. If you show up to lectures, pay attention and go to Office Hours, then 323 is very doable.",
                "Absolutely. 323 was the best computer science class I have taken at Yale. You learn so much about the inner workings of computers, which was something I had never learned in my other cs classes. It is a lot of work, but it's honestly not that bad if you start the projects early and go to office hours. If possible I would definitely recommend taking it with Abhishek, he's by far the best computer science professor I've had at Yale.",
                "Best CS class here at Yale with this Prof. You'll regret it if you don't take it.",
                "yes, for CS",
                "You have to take it if you're CS, but for anyone who is interested in how computers actually work on a very low level the material in this class is really interesting",
                "yea pretty important for the CS major",
                "If you are not a cs major, don't even think about taking this course. Although I found the topics extremely interesting and insightful, the amount of time spent on the projects  is ridiculous.",
                "I would absolutely recommend this course to anyone interested in serious study of any element of computer science. I would also recommend this course to anyone interested in embedded systems. This course greatly facilitates any further study in CS by building a thorough and complete picture of how computer systems are built.",
                "I would recommend this class if you are a CS student of some kind (as it is required for most of those majors). I also enjoyed the class and believed I learned a lot, but it will not teach you direct skills applicable to software development. It was more of a computer engineering course that served as a foundation for future endeavors. For this reason, I think this class is only applicable to those studying CS.",
                "Yes, if you are interested in understanding how computing actually works.",
                "No",
                "I would absolutely recommend this course to another student because I feel like it changed my perspective and motivation in computer science.",
                "Absolutely",
                "If you are a computer science major this is helpful to have a deeper understanding of computer science. I would recommend not taking this course when you have other major time commitments as it will take up a lot of your time.",
                "Yes, it was super interesting but you better not do anything else that semester. It's a full time job.",
                "This class is a beast, but very rewarding. Very well structured for feedback, and tons of help available for all psets.",
                "yes",
                "Yes, I would recommend",
                "Yes I would recommend this course to all those interested in computer science.",
                "You'll learn a lot from this class but most likely if you're not a CS major this class isn't worth it for you. However, if you're into systems and love learning about microarchitecture or assembly, this class may be worth it depending on coding skills.",
                "I would definitely recommend this course to another student, especially if Abhishek teaches it. He is a kind, passionate, and engaging lecturer who deeply cares about the course.",
                "Highly recommend, if you can handle it",
                "Yes, this course builds a great foundation on computer systems. It is very rewarding and Abhishek is a very good lecturer.",
                "Well, if you're taking this course it's because you have to. Really hard, but rewarding overall.",
                "If you're not going to be doing things directly in CS or in systems, I think there are many other classes that could prove more useful. However, it is a rite of passage of sorts for CS majors, and there is definitely merit to taking this class as it teaches a wide variety of topics.",
                "Only if you are a CS major",
                "STAY AWAY!!! Youre doomed. This class will ruin your life. Other reviews might say its not so bad, or if you do this or that its manageable. Its all self-coping mechanisms and self-talk. I learned about it in psychology. This class is horrendous and everyone copes with it differently. You will suffer. You will lose friendships and get worse grades in other classes because you spend all your time on 323. Leave while you can! Take S&DS or Computing + the Arts where you dont need 323. If youre taking the CS certificate, choose 327 as your option instead of 323. Run from this class!",
                "If youre taking this course its probably because it is required, so there isnt much to be said in the way of recommendation. With that said, I believe this can be one of the best courses in the cs department if taken with the right mindset-it will be hard, it will be time consuming,  but if you put in the effort it can be extremely rewarding.",
                "Yes - it is one of the most difficult but most rewarding classes I have ever taken.",
                "Yes. Great overview of computer systems. Hits a lot of essential topics.",
                "This is *THE* CS course at yale, and I knew that going in. However, I was still blindsided by the amount of work. If you can dedicate 60 hours every 2 weeks to PSETs, youll come out a better programmer. But take care of your mental health  drop it as soon as it becomes too much.",
                "You should be very careful about taking this course. If you are a Computer Science adjacent major, you have to take it. In this case, you should make sure that you have sufficient time on your hands to do your best in the course. I would also recommend to take this course earlier rather than later, while you still have energy (taking it as a senior might be tougher, after you have already worked hard for 3 years). If you are simply curious to learn about systems, I would just make sure that you are not overloading yourself with work for the semester when you decide to take it.",
                "Yes, i think it teaches a lot about the fundamentals of coding and would be useful for those that pursue CS related things.",
                "Absolutely, it is unparalleled in terms of helping someone understand computer systems and improving their programming",
                "Yes! You will be challenged, so make sure you have time, but you will learn a lot.",
                "Yes if you're confident that you can commit. Your grade will be fine, your growth will be immense.",
                "No. Unless they are a CS major.",
                "I would recommend this course to another student, given that they can set aside a lot of time for 323. Revisiting the lecture material, solving problem sets and going to office hours will take up the majority of your semester, and to get the most out of it, I feel that setting aside time is crucial. But if you do so, by the end of the semester, you'll feel that you really have learned a lot and might even go on to take more systems courses in the CS major.",
                "323 is hard. The rumors are true. It's by far the hardest class I've ever taken. That being said, it's also one of the most rewarding classes I've ever taken. I left each lecture having learned so much new material, and I am now a significantly better programmer than when I started the course. The course is a trial by fire, but you'll have a lot to show for it when you make it out. It's a required class for the major, so you'll probably have to take it. If you don't, I'd only take it if you're really interested in the material (if you are, it's a great class). You'll need to dedicate a significant amount of time to the course, with each of the 5 projects taking around ~30 hours. If you start early and put in the work, you'll be rewarded.",
                "Only if you are interested in lower level programming and systems.",
                "yes",
                "If you are a computer science major you have to. Just know that it is pretty rough. Don't expect to take a hard workload or have any type of life outside of 323. If I wasn't working on 323, I was thinking about how behind I was on the project. I led for a pretty miserable semester where I felt guilty a lot of times because I wasn't spending 24/7 working on the projects or I did not start the minute they came out. It was pretty rough every class when the professor would tell us to start early (which felt like he meant as soon as they came out ) and I had mounds of other work to catch up on from putting them off to work on 323. I felt pretty awful about this course the entire semester. Even when I did well, the average was so high that it didn't matter. I felt like there was no way to gain traction after my first PSET being not so great, and it weighed on me a lot throughout the semester. If you are going to take this course then make sure you take the lightest workload you can, find friends that you can talk through concepts with, and make sure to go to office hours earlier on in the projects.",
                "No, but you're only taking this as a major requirement anyway, same as the rest of us. I really hope it gets better. Hopefully Jay can make some changes to the workload, but seeing as this is a major req and is probably heavily monitored by the CS faculty leadership, I doubt much will change.",
                "No if youre a non-major, far too much work. If youre a major, bite the bullet and manage your time exceptionally and youll have an okay time. \r\n\r\nA note on the stresses of this course. Its a particular kind of stress that I wish Id known about before beginning. The psets are dauntingly large in scope, and that makes it hard to assess how near to the end you are. There were times I was freaking out, feeling lost in the sauce, when I was only one OH session of focused work away from finishing it. But if youd asked me beforehand, I would have had no idea whether I was four hours away or four days away from completion. So the prospect of not getting it done is always looming, and that is tough. I dont know if theres away for this to be better handled in the course admin side, but its a common sentiment.",
                "Yes. Favorite CS class Ive ever taken (love abhishek), also the most emotionally difficult",
                "This will most likely be the hardest class you take at Yale. If you are a computer science major, then you have to take it, and I'd strongly advise only taking it in a semester you have a light courseload and are prepared for a huge time commitment. If you are not a CS major, you may as well be one because this class is only really useful if you are pretty involved in CS, and also once you complete this class you have really done all the heavy-lifting of the major anyway.",
                "Of course, this course is required for any student studying any computer science-related topics, but even so, this course is definitely a must take even if it was not required. The course covers many, many computer systems topics at a very high level of detail, and you will come out of the course with a significantly greater understanding and appreciation of computers. While the course will most likely be a step or two up from most other courses you may take at Yale, if you are able to embrace the challenge of learning and understanding so much new content, I believe this course will be extremely valuable.",
                "Even if you have coding experience this is not a course you would take for fun.",
                "Yes, although I would caution people with high workload schedules and/or procrastination issues to figure those things out before taking this course.",
                "If you are interested in understanding how computer systems work and the details of computer architecture, yes. However, the class is very intense and the projects take a long time, so only take this class if you either have to or are very interested in the topic.",
                "yes, if you want to significantly improve your programming skills and learn more about computer system",
                "I wouldn't recommend it unless you are a CS major. Not because the content isn't useful, just because of how difficult the class is.",
                "if you dont have to take this course. dont take it",
                "Absolutely. The primary strengths are its extreme organization and abhishek is an excellent instructor",
                "Yes, the course builds character! Incompatible with procrastination, so if you procrastinate this class is your best shot at forcibly changing that.. Whether or not you need it for the CS major, the class is kind of fun and quite manageable provided you start projects within a few days of them being assigned. Make sure you have the time and space to do that, or you will have to spend several days nonstop working on just a 323 pset. Its really what you make of it, and i would not be discouraged by the workload as there is ample support.",
                "This course is a rite of passage in the CS Major  make sure to plan your other courses around it accordingly.",
                "Yes! I doubt you're taking this course unless you're a CS major, but even so, I would recommend this course to anyone who is interested in computers and how they operate. It's a hard course, but its also the most useful course I have taken here.",
                "Yes, absolutely. This is certainly the best STEM classand probably the best class at allthat Ive taken at Yale. I learned so much about how computers work, and it was incredibly rewarding to understand whats going on behind the scenesI left almost every class with a sense of awe at how amazing computers are. We covered a much more content in one semester than most courses do, but Abhishek is such a good lecturer that it was understandable. He is one of the most engaging and effective STEM lecturers Ive had, and our classes had much more student participationquestions wed ask him, and questions hed ask usthan is normal for a STEM course. He also clearly cares a lot about his students. CPSC 323 has a reputation for being a lot of work, and it is, but that didnt bother me. The projects are long, but they didnt feel like busywork and definitely improved my understanding. If you start early, you can finish without too much stress, and this class has more office hours than any class Ive ever seen. TLDR: I recommend taking a relatively light courseload along with 323, but if you have the time, it will be one of the best classes you take at Yale.",
                "No this was a terrible experience.",
                "I would recommend taking this class. The concepts are pretty interesting, but it certainly is a lot of work to keep up with all the content.",
                "Yes, even if you're not a CS major, I think you learn a lot (not only about systems/programming, but also how to manage your time on long psets and study well for exams).",
                "Easiest class in Ohio"
            ]
        }
    ],
    "extras": {
        "title": "CPSC 323 01 - SystemsProgramng&ComputerOrgzn"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.8830012083053589,
                0.8664515018463135,
                0.6765209436416626,
                0.916641891002655,
                0.9612110257148743,
                0.7875301241874695,
                0.675448477268219,
                0.7056465744972229,
                0.6380952596664429,
                0.5508081316947937,
                0.6222242116928101,
                0.8658022880554199,
                0.9558585286140442,
                0.6124186515808105,
                0.5729770064353943,
                0.6556352972984314,
                0.60179203748703,
                0.5736412405967712,
                0.6763964295387268,
                0.6206611394882202,
                0.7190386056900024,
                0.9599050283432007,
                0.5069150924682617,
                0.732843816280365,
                0.9261173605918884,
                0.8933044672012329,
                0.5214909315109253,
                0.6862185001373291,
                0.5635128617286682,
                0.5845868587493896,
                0.5150882601737976,
                0.7172225117683411,
                0.6133751273155212,
                0.6150298118591309,
                0.7595626711845398,
                0.7524720430374146,
                0.7228379249572754,
                0.8602744340896606,
                0.5819786190986633,
                0.9348393678665161,
                0.6423739790916443,
                0.8698452115058899,
                0.714226245880127,
                0.6417261958122253,
                0.5540850758552551,
                0.6178156137466431,
                0.9692313075065613,
                0.502532422542572,
                0.9253464341163635,
                0.6432336568832397,
                0.8135673403739929,
                0.7035191059112549,
                0.9374642372131348,
                0.5664861798286438,
                0.7236430644989014,
                0.7969285845756531,
                0.7479568123817444,
                0.5874044299125671,
                0.5560055375099182,
                0.5581953525543213,
                0.5935288667678833,
                0.6564798355102539,
                0.9678181409835815,
                0.5278890132904053,
                0.7430195212364197,
                0.6874220371246338,
                0.9381771683692932,
                0.7017292380332947
            ],
            "sentiment_counts": {
                "positive": 31,
                "neutral": 37
            },
            "sentiment_distribution": {
                "positive": 0.45588235294117646,
                "neutral": 0.5441176470588235
            },
            "sentiment_overall": [
                "neutral",
                37
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "positive",
                "neutral",
                "positive",
                "negative",
                "neutral",
                "negative",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "negative",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "negative",
                "negative",
                "negative",
                "positive",
                "neutral",
                "negative",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "negative",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "negative",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral"
            ],
            "sentiment_scores": [
                0.6520813703536987,
                0.617792546749115,
                0.9017234444618225,
                0.5245381593704224,
                0.8099714517593384,
                0.6709475517272949,
                0.5863109827041626,
                0.5866789817810059,
                0.5505008697509766,
                0.797432005405426,
                0.8605658411979675,
                0.9309940934181213,
                0.9056095480918884,
                0.4485715925693512,
                0.45058345794677734,
                0.689668595790863,
                0.5936197638511658,
                0.6893123984336853,
                0.48999062180519104,
                0.7604570388793945,
                0.8320471048355103,
                0.6425253748893738,
                0.8876987099647522,
                0.6441845297813416,
                0.618293046951294,
                0.5554940104484558,
                0.6822361946105957,
                0.7799501419067383,
                0.5634295344352722,
                0.7346522212028503,
                0.719780683517456,
                0.7237104177474976,
                0.8701000213623047,
                0.4504435360431671,
                0.8036820888519287,
                0.7787091135978699,
                0.7287287712097168,
                0.4815078377723694,
                0.6140678524971008,
                0.5411918759346008,
                0.6722561120986938,
                0.87947678565979,
                0.42758268117904663,
                0.6751976013183594,
                0.5445685982704163,
                0.7363999485969543,
                0.6929042339324951,
                0.504564642906189,
                0.8004809617996216,
                0.6220729351043701,
                0.6107608675956726,
                0.7732913494110107,
                0.8023635149002075,
                0.614965558052063,
                0.6755825281143188,
                0.4968719780445099,
                0.9104619026184082,
                0.5339521765708923,
                0.7351865768432617,
                0.7478330731391907,
                0.5249771475791931,
                0.508921205997467,
                0.5859923362731934,
                0.8629305958747864,
                0.7244865298271179,
                0.7569112777709961,
                0.456010103225708,
                0.8241735100746155
            ],
            "sentiment_counts": {
                "positive": 30,
                "neutral": 29,
                "negative": 9
            },
            "sentiment_distribution": {
                "positive": 0.4411764705882353,
                "neutral": 0.4264705882352941,
                "negative": 0.1323529411764706
            },
            "sentiment_overall": [
                "positive",
                30
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "neutral",
                "negative",
                "neutral",
                "neutral",
                "neutral",
                "negative",
                "positive",
                "positive",
                "negative",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "negative",
                "positive",
                "neutral",
                "neutral",
                "negative",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "negative",
                "neutral",
                "positive",
                "positive",
                "negative",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "negative",
                "neutral",
                "negative",
                "positive",
                "negative",
                "positive",
                "negative",
                "neutral",
                "neutral",
                "neutral",
                "negative",
                "negative",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "negative",
                "positive",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.7623776197433472,
                0.8132676482200623,
                0.5455607175827026,
                0.6407707333564758,
                0.6280770897865295,
                0.9051592946052551,
                0.8640610575675964,
                0.8807746767997742,
                0.4676004946231842,
                0.6476549506187439,
                0.924998939037323,
                0.6280345916748047,
                0.8785768747329712,
                0.7686732411384583,
                0.7030370235443115,
                0.7223568558692932,
                0.8336330652236938,
                0.5082821846008301,
                0.7869897484779358,
                0.6012932658195496,
                0.8995910286903381,
                0.8254245519638062,
                0.6233808398246765,
                0.4785582721233368,
                0.9395139217376709,
                0.8230147957801819,
                0.5768502354621887,
                0.6007405519485474,
                0.6119421124458313,
                0.8850705027580261,
                0.5818400382995605,
                0.96396803855896,
                0.7220113277435303,
                0.5398856997489929,
                0.8382570147514343,
                0.9139150977134705,
                0.5627762079238892,
                0.8658679127693176,
                0.8409640789031982,
                0.660969078540802,
                0.766072690486908,
                0.6822769045829773,
                0.8630775213241577,
                0.6870696544647217,
                0.8658299446105957,
                0.5756459832191467,
                0.4965512156486511,
                0.48252448439598083,
                0.8159291744232178,
                0.8230147957801819,
                0.6333963871002197,
                0.5330367088317871,
                0.5368558764457703,
                0.627510130405426,
                0.48899582028388977,
                0.824766993522644,
                0.7424951791763306,
                0.7507292032241821,
                0.7270905375480652,
                0.6093459129333496,
                0.7699804306030273,
                0.5943424105644226,
                0.8870900869369507,
                0.5051395893096924,
                0.8062395453453064,
                0.6972224116325378,
                0.9681531190872192,
                0.9237307906150818,
                0.7284656763076782,
                0.6702369451522827,
                0.6951414942741394
            ],
            "sentiment_counts": {
                "neutral": 31,
                "negative": 14,
                "positive": 26
            },
            "sentiment_distribution": {
                "neutral": 0.43661971830985913,
                "negative": 0.19718309859154928,
                "positive": 0.36619718309859156
            },
            "sentiment_overall": [
                "neutral",
                31
            ]
        },
        "final_label": "neutral",
        "final_count": 97,
        "final_proportion": 0.46859903381642515,
        "final_counts": {
            "positive": 87,
            "neutral": 97,
            "negative": 23
        },
        "final_distribution": {
            "positive": 0.42028985507246375,
            "neutral": 0.46859903381642515,
            "negative": 0.1111111111111111
        }
    }
}