{
    "crn_code": "21441",
    "season": "202303",
    "enrollment": {
        "enrolled": 13,
        "responses": 8,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                0,
                0,
                1,
                3,
                2
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                0,
                0,
                1,
                1,
                4
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                0,
                0,
                0,
                1,
                5
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                0,
                0,
                1,
                3,
                2
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                2,
                3,
                1
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                1,
                4,
                1
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "Lexing, parsing, conversions between DFA, NFA, and regex, register allocation and dataflow analysis, constant propagation and other optimizations, LLVM IR, OCaml, type checking.",
                "This course gives a thorough walk-through on the front-end, back-end of compiler, as well as the algorithms and concepts used to validate and optimize a compiler. After taking the course, I feel confident in the different components of compiler and the basic concepts of a compiler.\r\n\r\nThe slides and psets are well-structured. I tried to read related books, only to find them hard to follow and I feel good taking this course.",
                "Covered OCaml, LLVM IR, Formal Language/Computability Theory (context-free grammars, DFAs, NFAs), Lambda Calculus, Compiler Optimizations, x86 Assembly Language, and more",
                "I learned concepts to build an entire compiler (hence the name of the class), including assembly, and stripped down versions of LLVM IR, Oat (which is similar to C), and lexers. Furthermore, we learned code parsing and optimization techniques that are applicable to not just compilers.",
                "the steps of how a compiler works including lexing, parsing, ir language, register optimization, ASTs"
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Jay's lectures were great! He's one of the best CS profs at explaining concepts in a clear way. I also enjoyed the OCaml psets and loved that we can see our score on the private test cases. I do wish we could have covered the last week of material on compiling objected-oriented code and other optimizations, and moved slightly faster in the first few weeks of class where there is some overlap with 323. The only true weakness is that it's a 9am this semester.",
                "The strengths are:\r\n1) I have confident using OCaml for any programming task.\r\n2) I have clear understanding about different parts of a compiler and understand the steps I need to utilize LLVM.\r\n3) I have basic knowledge about inference rules, regular expression, lambda expression and register allocation algorithms.\r\n\r\nThe weaknesses are:\r\n1) Taking this class at 9am is a torture for me, especially for the second half of the semester when I stayed up for assignments.\r\n2) I think the pset can do better if some parts of the ocaml parser is left blank and I can learn to use the Ocaml parser and lexer.\r\n3) The last two weeks of the semester is a disaster with the final exam, final reading and the final pset. I suggest releasing the final reading assignments in the second half of the semester instead of the last two weeks.",
                "Strengths: Jay Lim, comprehensive lecture notes, clear syllabus\r\n\r\nWeaknesses: None",
                "This course is very well organized and taught. It seems that not many people take this class, which makes the class seem more like a discussion section than a lecture sometimes, which is cool because you get to interact with Jay Lim (or whoever is teaching the class).\r\n\r\nA weakness is that there's no lecture recording, so if you miss class on accident it might take a long time to catch up since so much content only makes sense when the prof speaks about it."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "Yes! Great content and prof",
                "Yes, I recommend the course for anyone who wants to learn functional programming, have a sense of the components of the compiler, and some performance enhancement algorithms of translating one language into another. In real life, compiler (which can be regarded as a translator) not only works for programming languages, it also works for database languages (e.g. SQL). I think it is very hard to learn those stuff by oneself since it is demanding for a lot of efforts. Taking a course makes a commitment and looking back, I feel proud of myself completing all the psets by myself.",
                "Yes, I think it's a necessary component of the curriculum for any true computer science major. If you enjoyed the compilers component of CPSC 323, then this is your chance to learn more about how compilers work. I definitely have a newfound respect for the theory behind compilers. It's a lot more complex than I think most people realize, and we really do take for granted how easy it is to just compile a program without having to worry about what's going on behind the scenes. Unless you've taken some CS theory classes, this will probably be your introduction to formal language theory as it is necessary to understand lexing and parsing. I would say that if you do the problem sets alone, the workload is a bit greater than 323, but because you get to work in pairs, it ends up being a little less. Also, while the problem sets are generally long, they're not incredibly challenging once you familiarize yourself with the code base. I wouldn't say the material is the most interesting thing you'll learn in CS, but I think it's integral in having a complete understanding of programming. By the end of the class, you'll have made your own compiler (for the most part) and have a great starting point for learning even more about the developing theory in compilers right now.",
                "Yes! Learning about compilers helps you understand why some programs are written the way they are. This class is like an extension of the assembly and compilers part of 323. You will be able to write better code optimized for certain platforms, and the strategies applied for compilers are applicable in other projects (high level code) as well",
                "I would recommend the class if you have any interest in compilers and don't mind doing long psets. The grading is very lenient, you just have to do the work, and you'll be fine.",
                "Highly recommend. Psets were quite fun (though really hard) and working with a partner made everything so much more bearable. Lectures were also mostly intuitive and the small class setting makes it easy for all your questions to be heard. Workload is somewhere around that of 323."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 421 01/CPSC 521 01 - Compilers and Interpreters"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral"
            ],
            "sentiment_scores": [
                0.5736940503120422,
                0.7917237877845764,
                0.6275628209114075,
                0.5117440223693848,
                0.6776373386383057
            ],
            "sentiment_counts": {
                "neutral": 4,
                "positive": 1
            },
            "sentiment_distribution": {
                "neutral": 0.8,
                "positive": 0.2
            },
            "sentiment_overall": [
                "neutral",
                4
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "positive",
                "neutral",
                "neutral",
                "positive"
            ],
            "sentiment_scores": [
                0.8833561539649963,
                0.6848355531692505,
                0.695208728313446,
                0.5974522233009338
            ],
            "sentiment_counts": {
                "positive": 2,
                "neutral": 2
            },
            "sentiment_distribution": {
                "positive": 0.5,
                "neutral": 0.5
            },
            "sentiment_overall": [
                "positive",
                2
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive"
            ],
            "sentiment_scores": [
                0.9559593200683594,
                0.6124575138092041,
                0.7199119329452515,
                0.6287028789520264,
                0.6306173205375671,
                0.9123954772949219
            ],
            "sentiment_counts": {
                "positive": 6
            },
            "sentiment_distribution": {
                "positive": 1.0
            },
            "sentiment_overall": [
                "positive",
                6
            ]
        },
        "final_label": "positive",
        "final_count": 9,
        "final_proportion": 0.6,
        "final_counts": {
            "neutral": 6,
            "positive": 9
        },
        "final_distribution": {
            "neutral": 0.4,
            "positive": 0.6
        }
    }
}