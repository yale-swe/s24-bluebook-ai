{
    "crn_code": "20956",
    "season": "202201",
    "enrollment": {
        "enrolled": 112,
        "responses": 91,
        "declined": null,
        "no response": null
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                1,
                12,
                21,
                33,
                13
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                1,
                17,
                22,
                28,
                11
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                0,
                12,
                24,
                28,
                15
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                3,
                13,
                23,
                34,
                6
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of intellectual challenge of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                1,
                15,
                45,
                16
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the workload of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                2,
                6,
                47,
                23
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?",
            "comments": [
                "Recursion babyyyy. And just more practice with programming skills and habits in general.",
                "Learned a lot about recursion, deep recursion, and coding in a non-traditional language.",
                "I learned about how to use Racket, recursion, gates, circuits, TC-201 and basic assembly language, boolean logic, Turing machines, and strings and languages. I don't think the class made me much better at coding, but it did cover a lot of interesting concepts and help me understand more about computer science.",
                "Learned racket coding, got a better sense of what computer science entails and the structure of programs",
                "Skills and topics include: writing recursive functions (tail recursive and non-tail recursive), UNIX, Computability/Turing Machines, Boolean Logic and Expressions, Logic Gates and Circuits, Computer Architecture, and Strings and Compilers.",
                "How to use recursion to build simple and complex functions in racket",
                "Learned recursion, fundamentally how computers work, lots of binary",
                "I am that this course taught me how to study better and organize my time.",
                "Some coding experience and a lot of practice with recursive thinking.",
                "I gained comfort with the idea of recursion in computer science, some knowledge about the functionality and history of computers, and the ability to write code in Racket.",
                "I learned how to code in Racket, unix commands, and most importantly, the various types of recursion. It helped build a solid foundation to learning more intricate topics in computer science.",
                "This course covered a large overview of many CS concepts and deepened my understanding of how computers and programs work.",
                "Knowledge of Racket, recursion, basics of computer programs",
                "Basic understanding of computer science",
                "Recursion, computability, architecture, circuits, and context-free grammar. Take a look at the syllabus, its available online. Search cs201 yale and it should pop up.",
                "Theoretical computer science concepts as well as racket",
                "cs knowledge",
                "Learned recursion.",
                "Learned how to use racket, recursion especially",
                "How computers work, what assembly languages, UNIX, and regular expressions are. This course makes you become comfortable with the idea of recursion.",
                "Some CS fundamentals like recursive programming, circuits, computer architecture, and Scheme languages.",
                "I learned how to properly implement recursion in my code.",
                "The topics in this course were very interesting and the p-sets teach the concepts very well",
                "Recursion and the science behind computer science",
                "I became a better programmer, especially with recursion. I also learned about Turing machines, gates and circuits, and computer architecture.",
                "Racket, recursion, machine code, memory",
                "Recursion and thinking programmatically",
                "Racket better understanding of what a computer is.",
                "Racket, recursion, deep recursion, tail recursion, manipulating lists, how computers are programmed, how to write a computer program, circuits, CFGs, regular expressions, DFAs, languages, etc",
                "I learned recursion and other basic computer science topics. I learned how to think fundamentally and critically to solve problems and how to model various computer science concepts in code (Racket). This course showed me the breadth of computer science and that it is not just all programming.",
                "Programming in Racket, recursion, introduction to computer architecture",
                "Some basic understanding of an array of computer science topics. Structs, Turing machines, and recursion recursion recursion.",
                "Recursion, computer architecture, gates and circuits, strings/booleans, and UNIX.",
                "My biggest takeaway from CS 201 was a solid foundation in recursion and computational thinking. We developed these through various different logical vehicles, be it logic gates, Turing Machines, or assembly. This class also provided a nice introduction to some more theoretical aspects of CS such as constraint free grammars and DFAs alongside the hardware side of things like assembly code and boolean circuits.",
                "Recursion, which is about recursion, which is about recursion, which is about recursion. And computer architecture, gates, circuits, etc.",
                "I learned a lot about recursion, gates, circuits, boolean expressions, Turing machines, DFAs, Grammars, and the assembly language.",
                "I learnt how to think qualitatively. I learnt how to identify more efficient techniques to solving problems in some cases.",
                "Racket, recursion",
                "I learned to code in racket and recursion.",
                "knowledge of the coding language racket, unix, and the basic workings of a computer",
                "Cs",
                "By learning this new language called Racket, I was able to code the inner workings of how a computer works. From processing information, how it receives and outputs data, etc. I learned about Turing machines, CFGs, TC-201, DFAs and so many more.",
                "I developed a great understanding of recursion.",
                "Racket, recursion, unix, tail recursion, deep recursion, Turing machines, TC-201, strings and grammar, and much much more.",
                "I developed the ability to think more logically and understand computer science more deeply.",
                "I am now a master of recursion and fairly knowledgeable in unix. I finally understand how assembly works, and because of the survey nature of the course I got glimpses of other really cool fields in the computer science wheelhouse.",
                "Learned the fundamentals of computer architecture, recursion-based programming, Turing machines, coding in Racket",
                "- Learned a lot more about computer architecture\r\n- learned how to think about programming differently, esp in terms of recursion\r\n- learned more about binary processes\r\n- learned a lot of practical UNIX code\r\n- learned about programs like Turing machines and TC201",
                "I learned a lotttt about recursion, as well as other topics like computer architecture, programming languages, etc. This class focused a lot on conceptually understanding how programming works.",
                "I learned how to program recursively in Racket. Some basic theory behind how computers work (ie. gates, turing machine, etc.)."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?",
            "comments": [
                "Weaknesses: lectures. they're generally one long tangent\r\nStrengths: great TA's. interesting content and psets.",
                "The course is taught well and in a way that helped me learn and understand all of the concepts we went over.",
                "Strengths: interesting problem sets and material\r\nWeaknesses: heavy amount of work, also racket sucks",
                "Strengths: Professor Slade's lecture notes are great. You could honestly take the class without even attending lecture once because of how thorough they are, but I wouldn't recommend it because Professor Slade gives some helpful tips on homework when you're in class. The problem sets are pretty long but you get a week free of homework after every midterm exam which is nice (also, if you've taken CS50, the workload in this course is definitely lower, so don't worry about that nightmare any longer). Professor Slade is also a really interesting guy and tries to make his class interesting with one logical problem at the start of every class (which are in no way graded). He also talks a lot about the history behind the computer concepts being taught which is not knowledge you'll need for the exams but still really cool to learn about. You also get 10 free late days to spend on problem sets which really come in handy when you need to study for an exam and don't have time to do the problem set. The review sessions are thorough and the expected knowledge for each exam is clearly communicated to the students. \r\n\r\nWeaknesses: I don't think there are many weaknesses for this course. Professor Slade states his expectations for his students so you know what you're getting into when you're shopping the class. One criticism I have, though, is that the class moves a little bit too slowly. I really wanted to spend more time on compilers and formal language theory (the last topic of the course) which probably could've been accomplished had we not spent so much time on learning Racket. I think Racket is relatively easy to pick up and there really aren't that many functions to know, so I think we could've cut down the time spent on learning it. My last criticism would be that there needs to be a better way to test student's knowledge of UNIX on the exams. The exams pretty much test your ability to memorize the outputs of UNIX commands rather than your understanding of how to actually use them and some of the UNIX commands taught are rather useless (as in, I can guarantee that I will never need to use some of the UNIX commands taught in this class).",
                "Strength: Professor Slade's commitment to recursion\r\nWeakness: Recursion",
                "Lectures didnt seem that significant in terms of what we needed to know. Pset questions can be dense. The ULA team is wonderful",
                "I think the courses involves to much theory and less practical things",
                "The homework problems are fun and the lecture environment is welcoming and fun. The biggest weakness is that a number of the harder homeworks are during the last few weeks of the term without off weeks, which, on top of other classes, makes it hard to keep up with the class.",
                "I think the Psets for this course were relatively engaging and enjoyable, I also felt that they prepared me well for the coding I had to do on the exams. I did not, however, feel that the lectures were so engaging. Most of the material shared in lectures felt trivial, redundant, or irrelevant, with a little less than half of each lecture devoted to new topics. I believe the class could meet for half the time it currently does if the lectures were refined and made more succinct. I rarely attended class because of how useless the lectures seemed to me and I did not feel like it impacted my learning negatively.",
                "I liked that the course was recorded. However, the last few lectures regarding TC201 and strings were hard to understand.",
                "The lectures were kind of boring. While Professor Slade has some very interesting insights, a lot of the time it felt like we were just sitting there watching him type things into the terminal, rather than watching a real lecture. I would prefer to have a more traditional lecture style, perhaps with a powerpoint or something that would make the information more accessible. \r\n\r\nOne big strength of the course is the website and those lecture notes. They were so thorough it made watching the lectures in person kind of useless. I wish the lectures were more like the notes.",
                "The concepts we learned in class were important for understanding CS and the lecture notes were helpful and accompanied lectures well. Racket as a programming language still seems a bit obscure and unnecessary but the way we used it to learn about concepts was fine.",
                "Strengths: PSETS are fun, course content is good, support in the class is exceptional (TAs, ULAs)\r\nWeaknesses: Lecture is boring",
                "The class essence is in its psets, and I have mixes feelings about them. I genuinely enjoyed how all psets had a meaning behind them. For example, building a Turing Machine simulator, an assembly language interpreter, and so much more. I also love the amount of office hours and resources for help. However, doing all these grand projects often takes time. Not because youre thinking extremely  hard to get one detail right, but because you have to create a thousand helper functions to get all those simulators and interpreters to work. Its a mix of exciting and boring.",
                "The psets are organized and expectations are clear. The lectures are not as beneficial as they could be",
                "High workload high reward",
                "Didnt find Dr. Racket helpful but learned a lot of good principles.",
                "Professor slade seriously needs to rethink how he runs the classes. I struggled to stay interested with the classes, but not because of the material. He effectively just played around with racket or read from paragraphed webpage material which we could already access and read through which did not make for an engaging experience at all.",
                "You can watch the recordings, and understand the course material well, so it's practically a asynchronous class.",
                "Strengths: You learn a lot through the PSETs.\r\n\r\nWeaknesses: Coding in Racket just is not very applicable for the future. Lectures are not very engaging and sometimes unhelpful (unless going over material directly for the PSAT).",
                "Some of the PSETs were confusing in the sense that I didnt know how some concepts were actually applicable to computers.",
                "Overall, very well structured. Looking back, everything we learned can be tied together rather than a series of discontinuous topics.",
                "Its very solid.",
                "Lectures very boring and psets close together appreciated the 10 late days though",
                "The homeworks were very engaging and interesting. It was stimulating and rewarding develop the different models. I felt at times we were tested on minutia. I suggest testing more conceptual thinking.",
                "Could space out problem sets more around exams",
                "The recorded order lectures were great and the array of support and edDiscussion feed was helpful. The class could be improved if it didnt rely so heavily on exams and focused more on constant practice and problem sets",
                "I really appreciated office hours, and found the ULAs very helpful. Juliana was particularly helpful and kind!",
                "Strengths: ULA office hours and exam review sessions (support was very strong).",
                "The biggest strengths of the class, despite their occasional extreme difficulty, are definitely the PSETs as they help you appreciate and understand the larger concept you're trying to understand step-by-step.  This may be an unpopular opinion but I personally liked Professor Slade's lecture style a lot. It was dry but in the best-dry-humorous ways. He is very willing to explain concepts and generally goes over most of the homeworks in great detail. He also has fun intros to classes, with logical problems of the day and a nice little jingle to listen to. I would recommend actually attending lectures if you want to gain anything from them directly -- otherwise there's no point watching them online as you can practically gain everything from the notes and pset. \r\n\r\nI also personally loved learning racket, because the functional nature of it just makes you think harder as a programmer to find elegant recursive solutions. I believe programming solutions in racket was definitely an important aspect of gaining a better understanding of CS through this class.",
                "The strength is that the instructor has really good notes and material for students to learn with. A weakness would be that the class is very large so I often feel like I'm not getting as much individual help.",
                "The strengths of the class are all of the out-of-class materials that there are for students to use to help understand the content. The homework walkthroughs done by the TAs were particularly wonderful and gave a lot of extra insight that helped me complete the homework faster.",
                "The class introduces different aspects in the computer science field in a programming language that is new to almost everyone. The uniqueness of the language subtly teaches one how to read a programming language documentation and figure things out.",
                "The weighting of the exams is absurd. Given the time commitment to problem sets each week, the problem sets should be more heavily weighted. The content itself is interesting and engaging however it is not delivered well. Additionally, the timing of midterms in conjunction with the problem sets makes it difficult to perform well on the exam and keep up with weekly problem sets. The weeks in which we do not receive the problem set should coincide with the midterms.",
                "More TA's at office hours",
                "Lectures are not very informative or engaging. There are sufficient sources online through the youtube channel and the ed discussion posts where the TFs were very helpful.",
                "Lectures could be more engaging",
                "The strengths was that everything was doable at the comfort of your own room (except taking the midterms and the finals) because everything from lectures and reviews were recorded. Office hours were held and there was also a discussion at Ed dedicated to answering the class's questions, which is extremely helpful and I wish could be implemented in other class since it was so simple and easy to use. Weaknesses, there weren't any that I could think of. I guess the pacing of the lectures were a bit weird because something would be due that week but our professor would already be teaching new material by that time, but other than that, the class was great overall.",
                "I loved how the lectures were recorded - it made everything so much less stressful. Also, the TAs were so amazing and helpful.",
                "The CS201 TAs are the biggest strength that this course offers. There is so much support for the students. \r\n\r\nThe late day policy was also super helpful. However, exams would kind of mess me up because I would stop working on psets and start studying for exams. I wish psets that were after an exam would be due on fridays instead. But the amount of late days really came through for me this semester.",
                "I like this course, I dont think theres much improvement.",
                "There's sometimes a disconnect between lecture, homework, and tests, however there were so many other resources - office hours, youtube, tutorials, review sessions, to supplement where lecture was lacking",
                "Strengths:\r\n- a lot of content, well organized\r\n- good support from TAs and office hours\r\n- notes are good\r\n\r\nWeaknesses:\r\n- lectures could be more engaging and faster-paced\r\n- the 201 website could be more updated\r\n- there could be more resources for the class,",
                "The strengths of the course mainly revolves around the content taught (such as recursion) which builds a strong foundation for students interested in majoring in cs. However, the structure of the class was overall less engaging which made it difficult to feel like I was fully understanding. To combat this, I appreciated office hours being offered almost daily as it provided a strong support system.",
                "Strengths: The exams were fair. If you understood the homeworks, you should do well on the exams.\r\nWeaknesses: The problem sets are dense. You learn a lot and get a lot of practice with problem sets, but sometimes more dense that I thought necessary. For example, on the problem set focused on Turing Machines, a good portion of the problem set was coding in Racket the functions to read Turing Machines, rather than designing Turing Machines. This made problem sets more time consuming, and considering I take four other courses and had covid this semester, this made me eventually CRED/D/FAIL this course because although I understood all of the concepts and did on the exams, the homeworks just took too much time.",
                "I guess this class is good as a foundational course, and I'm sure it will help me with future classes. However, in the moment it's difficult to see the relevance of a lot of topics we cover. Most of the psets felt very difficult, and often out of touch with what we were learning. I understand that the topics covered were the same as the psets, but most times it didn't make sense to have to apply it in Racket. Generally, I also feel as though this class could use better organization. Topics were covered at a random pace, some being covered way faster than others (even if they were more difficult, in my opinion). Also, the feedback for the psets was never clear at all. It would say how many points we got off, and that a certain part of a code didn't pass a test. However, we don't receive any comprehensive explanation as to what we did wrong and how we could correct it.",
                "Strengths: Great ULA help, everything is available online\r\nWeaknesses: Everything is available online"
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.",
            "comments": [
                "found it super fun and interesting and I don't care what the haters say. I think it's the most slandered class, and for what??? FOR WHAT??? it's a really fun class. I think people are haters. And I want to emphasize, I'm no CS whiz, no child prodigy. I'm just a boy in the world doing my best. Like is racket useful? Probably not. But was each pset a new and interesting concept. You betcha. So don't listen to the haters and take this class.",
                "Yes, as an intro course for CS programming.",
                "This course is good if you're thinking about continuing in CS. I had the option to skip to 223, but I don't regret taking 201 since it went over a lot of interesting concepts, and since recursion is probably more important than you think it is. If you don't plan on taking more CS classes, there might be better classes to learn how to code with more applications than 201.",
                "Not unless you are a major or it's required. There are better courses for just a taste of computer science works.",
                "Yes, this is a great class. I don't really understand why the course has gotten bad reviews in the past because Professor Slade is nice and his exams are not that hard (they could very easily be harder). I think people just need to understand that this is NOT a programming-focused class (if you want a class that focuses on writing and applying programs, go take CS50). It's called introduction to computer science for a reason. The class focuses on teaching you how a computer actually works which culminates into a good understanding of computer memory and compilers. You implement these concepts into code using a language called Racket. While some people say this language is \"not used in industry\", it's actually a pretty good language for debugging recursive functions (almost all of the functions you write in this class will be recursive). Also, it's not like everything you learn at Yale is supposed to be for some professional gain and being able to adapt to a new language quickly is a skill you'll definitely need if you plan on pursuing computer science professionally. If you plan on doing the computer science major, I would definitely take this class because many of the core courses in the major use C as the primary language. In order to be a good programmer in C, having an understanding of computer memory and how a compiler works are very important skills because it's a low-level language. You can probably get by in CPSC 223 without taking this class, but if you skip this class and run into a bug involving memory leaks, pointers, integer overflow, etc. in CPSC 223, I can guarantee you would have an understanding of the issue had you taken this course. However, if you have no programming experience at all, I would try taking one of Yale's introductory courses in programming like CS50 (CPSC 100 on the Yale catalog) or CPSC 112 first because there is an expectation that you've programmed a little bit before taking the class which professor Slade emphasizes from the beginning. The homework assignments really focus on your problem-solving abilities so having some programming experience will definitely help with that. There are plenty of office hours and there's a CS201 YouTube channel which is really helpful for all the homework assignments and exams (shoutout to Lucas). If you can get the hang of recursion (especially deep recursion), you should have no issues with this course as the main challenge of this course is writing simulators using recursive functions to implement the concepts introduced in class into code.",
                "Yes if they are a CS major and are interested in learning Racket",
                "Only if necessary for programming certification or the cs major",
                "depends, if the student likes computer theory so yes.",
                "I would recommend this course if someone wanted to have some fun solving problems, doing brainteasers almost, especially if they had very little coding experience. If someone already had some foundation in coding, probably not. Although fun, I do not know if it is requisite for being proficient at coding more generally, maybe if the course was in a more modern language.",
                "No. If the student is a CS major, I would recommend that they take CS50 and then move onto 223 directly after if possible. If the student is interested in computer organization. I would recommend that they take EENG 201 as it will teach them far more. The topics that I learned about in this course that will stay with me in the future amount to about two to three weeks worth of lecture material.",
                "Definitely if anyone's interested in majoring in computer science. It helps with understanding how recursion works. However, if someone just want to learn how to code, this isn't the best course.",
                "Yes, but only because it's required for any CS classes you want to take in the future.",
                "Generally, for students in CS are have great interest in CS, I think a lot of the concepts covered in this course are very useful. That said, they must be ready for the coursework.",
                "YES, its challenging but its so much fun.",
                "If youre expecting an intro class with a similar vibe to CS50, this is not it. However, its still a great class nonetheless, mostly because of its psets. Take it if you are a CS major or are looking for something that goes deeper than CS50.",
                "Yes! A lot of people think this course isn't necessary for a computer science major, but if you enjoy programming/problem solving, the psets are fun and the right level of challenging. Although Racket probably isn't going to be useful as a language, the concepts taught are quite interesting, and I feel much more familiar with how programming and computers work in general.",
                "Yes as an intro to other CS courses. No to learn CS",
                "only if youre a cs major",
                "Only if needed for CS.",
                "Yes, if you are interested in the fundamentals of computers (how boolean expressions, assembly language, and programming language combines to make it work). But I would recommend another class if you want to know how to \"program.\"",
                "If you're looking at this course--you probably have to take it. My recommendation: see if you can take CPSC 200 instead (this is sometimes allowed; I have heard good things at it is a very similar class with the same professor, but in Python).",
                "Yes if you are continuing with CS you have to learn the basics taught in this class.",
                "Yes",
                "Yes, I think it is fundamental towards learning Computer Science",
                "Yes, good cs foundations.",
                "For CS majors who have to take it sure",
                "I would take this class if you are thinking about using it for a requirement. The class isn't the most inspiring, so if you're looking for something more fun then maybe take CS50.",
                "It was not interesting to me but if you are a big fan of CS Im sure there is some value in this course for you.",
                "Yes, it teaches important fundamentals for computer science and serves as a solid introductory course/",
                "Yes, I would recommend this course to a student with some prior background in computer science (or at least an interest in computer science.) Note that I say CS and not programming, for I believe this class is not for people who strictly want to learn to code from scratch. There are classes like those here, but this one would not be best for people taking their first ever CS class as it assumes a decent amount of familiarity with programming/logical reasoning.",
                "Yes, if you want to be a computer science major / are curious about the major.",
                "Absolutely recommend this course to anyone that wants to purse computer science or even get a basic grasp of how computers work. Absolutely wonderful in building the basic frameworks for understanding computers.",
                "Yes, I would. I think the class gives a very solid understanding to recursion and computability which would be very useful in subsequent CS classes",
                "Yes if you are a very interested in cs, no as an interest class or extra.",
                "Yes it is a very good course and will give great insight into the principles of cs.",
                "Yes, the content is interesting and important to know for computer science. However, I would make it clear that they will mainly have to teach and learn it on their own or in office hours and not in lecture.",
                "If interested in cs",
                "I would recommend this class to anyone that is interested in Computer Science and wants to learn more about it.",
                "I would! Though Racket isn't necessarily \"practical,\" recursion is an important concept that is easier learned through a procedural language.",
                "If you are interested in the theoretical part of computer science, and how a computer can be created from 1's and 0's, this is an amazing course. I highly recommend it. You do really have to love theory and logic to enjoy this course though.",
                "For people only interested in learning programming, no; for Computer Science majors, yes. Racket is a pretty useless programming language but you do learn a lot about computer architecture and how computers work in this course. ULA's (the teaching assistants) were probably the best part of this course.",
                "Yes. If your a cs major, this is a requirement.",
                "Yes. Only if you want to learn computer science theory.",
                "If this class is not required, I would not recommend it. If you're a non-major looking to take a CS class, I'd take CPSC 200, as it's the same as this class but with Python instead of Racket",
                "I would only recommend this course to students who need to complete their computer science requirements for their major or students who really enjoy learning about the intricacies of programming and don't mind using an less common programming language. This course was good, but I'm not sure if I would recommend it as a fun class to take",
                "I would recommend this course to students who have prior experience in computer science and are planning to major in cs",
                "Yes! Great introduction to Computer Science. Stephen Slade knows what he is talking about and cares about the students. I took CPSC 100 in the fall land then took this class in the Spring. Both classes are manageable except the work adds up so you cannot get behind. We had midterms the same week problem sets were due. Overall, very fun problem sets.",
                "I mean if you're a CS major then yes but otherwise no. This isn't some gut QR class and isn't super interesting.",
                "I would recommend it if you're planning on majoring in Computer Science."
            ]
        }
    ],
    "extras": {
        "title": "CPSC 201 01 - Intro to Computer Science"
    },
    "sentiment_info": {
        "YC401": {
            "sentiment_labels": [
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "positive",
                "neutral"
            ],
            "sentiment_scores": [
                0.5011295676231384,
                0.5650873184204102,
                0.6542677879333496,
                0.5460424423217773,
                0.5348961353302002,
                0.5057553648948669,
                0.6115841269493103,
                0.8800129294395447,
                0.6374971270561218,
                0.6775246858596802,
                0.7724295258522034,
                0.8483403921127319,
                0.661659300327301,
                0.6131911277770996,
                0.5155633687973022,
                0.6502587795257568,
                0.648512601852417,
                0.7559077143669128,
                0.4947728216648102,
                0.654503345489502,
                0.743159830570221,
                0.6096248626708984,
                0.9681334495544434,
                0.6082785129547119,
                0.9085261225700378,
                0.5229983329772949,
                0.5234724879264832,
                0.6558329463005066,
                0.7294216752052307,
                0.6018736958503723,
                0.5990403294563293,
                0.682040810585022,
                0.5909866094589233,
                0.8322127461433411,
                0.7308424115180969,
                0.6816636919975281,
                0.636145830154419,
                0.6131053566932678,
                0.64956134557724,
                0.6949822306632996,
                0.5109822750091553,
                0.5199231505393982,
                0.9341335296630859,
                0.5950285196304321,
                0.7021555304527283,
                0.9287292957305908,
                0.6034979224205017,
                0.5696614384651184,
                0.7730672955513,
                0.7806065082550049
            ],
            "sentiment_counts": {
                "neutral": 29,
                "positive": 21
            },
            "sentiment_distribution": {
                "neutral": 0.58,
                "positive": 0.42
            },
            "sentiment_overall": [
                "neutral",
                29
            ]
        },
        "YC403": {
            "sentiment_labels": [
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "negative",
                "negative",
                "neutral",
                "neutral",
                "neutral",
                "negative",
                "positive",
                "positive",
                "positive",
                "negative",
                "neutral",
                "neutral",
                "negative",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "negative",
                "positive",
                "neutral",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "positive",
                "neutral",
                "negative",
                "neutral",
                "negative",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive"
            ],
            "sentiment_scores": [
                0.5054206252098083,
                0.7437825798988342,
                0.6015663743019104,
                0.7459129095077515,
                0.7977008819580078,
                0.45622751116752625,
                0.5194768905639648,
                0.5274545550346375,
                0.5451529622077942,
                0.5783358216285706,
                0.5953248143196106,
                0.5318689942359924,
                0.6361832618713379,
                0.8236547112464905,
                0.787295937538147,
                0.6437599658966064,
                0.586893618106842,
                0.8112479448318481,
                0.6122118830680847,
                0.7118096947669983,
                0.5894112586975098,
                0.6161642670631409,
                0.5977691411972046,
                0.7261886596679688,
                0.8037492036819458,
                0.7630429863929749,
                0.6559156775474548,
                0.9196918606758118,
                0.6604683995246887,
                0.6961912512779236,
                0.5494810342788696,
                0.6996452212333679,
                0.7537463903427124,
                0.7556628584861755,
                0.8064345717430115,
                0.8090413212776184,
                0.6707077622413635,
                0.5641171336174011,
                0.9348778128623962,
                0.7417808175086975,
                0.5347432494163513,
                0.6287975311279297,
                0.5700346827507019,
                0.6080601215362549,
                0.5978014469146729,
                0.5919903516769409,
                0.5707674622535706
            ],
            "sentiment_counts": {
                "positive": 19,
                "neutral": 20,
                "negative": 8
            },
            "sentiment_distribution": {
                "positive": 0.40425531914893614,
                "neutral": 0.425531914893617,
                "negative": 0.1702127659574468
            },
            "sentiment_overall": [
                "neutral",
                20
            ]
        },
        "YC409": {
            "sentiment_labels": [
                "positive",
                "neutral",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "neutral",
                "positive",
                "neutral",
                "neutral",
                "positive",
                "positive",
                "positive",
                "neutral",
                "neutral",
                "neutral",
                "negative",
                "positive",
                "neutral",
                "positive",
                "negative",
                "neutral"
            ],
            "sentiment_scores": [
                0.6328098773956299,
                0.8987643718719482,
                0.8604577779769897,
                0.4935034513473511,
                0.7398738265037537,
                0.792472243309021,
                0.8532057404518127,
                0.7355043292045593,
                0.6594011187553406,
                0.8216482400894165,
                0.6040031313896179,
                0.8573250770568848,
                0.8432963490486145,
                0.8390084505081177,
                0.4684111773967743,
                0.8279165029525757,
                0.8767921328544617,
                0.79127436876297,
                0.8187187910079956,
                0.6804864406585693,
                0.6256278157234192,
                0.8820223808288574,
                0.895555853843689,
                0.5094891786575317,
                0.5539264678955078,
                0.8381507396697998,
                0.4957670271396637,
                0.5498571395874023,
                0.5717666745185852,
                0.6668298840522766,
                0.7434502840042114,
                0.9289699792861938,
                0.899101972579956,
                0.7945178151130676,
                0.8917840123176575,
                0.5305892825126648,
                0.88816899061203,
                0.5424700975418091,
                0.5040385127067566,
                0.9527425169944763,
                0.4572380483150482,
                0.832560122013092,
                0.8375306129455566,
                0.5509812235832214,
                0.6395905017852783,
                0.7972053289413452,
                0.9470851421356201,
                0.7677921652793884,
                0.6581594944000244
            ],
            "sentiment_counts": {
                "positive": 16,
                "neutral": 31,
                "negative": 2
            },
            "sentiment_distribution": {
                "positive": 0.32653061224489793,
                "neutral": 0.6326530612244898,
                "negative": 0.04081632653061224
            },
            "sentiment_overall": [
                "neutral",
                31
            ]
        },
        "final_label": "neutral",
        "final_count": 80,
        "final_proportion": 0.547945205479452,
        "final_counts": {
            "neutral": 80,
            "positive": 56,
            "negative": 10
        },
        "final_distribution": {
            "neutral": 0.547945205479452,
            "positive": 0.3835616438356164,
            "negative": 0.0684931506849315
        }
    }
}