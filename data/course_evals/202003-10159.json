{
    "crn_code": "10159",
    "season": "202003",
    "enrollment": {
        "enrolled": 81,
        "responses": 63,
        "declined": 4,
        "no response": 5
    },
    "ratings": [
        {
            "question_id": "YC601",
            "question_text": "Which of the following best describes your mode of learning in this course?",
            "options": [
                "recorded lecture",
                "live virtual lecture",
                "in-person lecture",
                "virtual seminar or other discussion format",
                "in-person seminar or other discussion format",
                "virtual lab",
                "in-person lab",
                "other or multiple (please describe below)"
            ],
            "data": [
                15,
                40,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                0,
                1,
                15,
                18,
                20
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                1,
                2,
                15,
                14,
                25
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                1,
                0,
                6,
                25,
                24
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                1,
                5,
                10,
                20,
                19
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge<\/u> of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                2,
                23,
                29
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the <u>workload<\/u> of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                0,
                0,
                1,
                13,
                40
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC601N",
            "question_text": "Please list any other mode(s) of learning, including any combination or variation of the above options.",
            "comments": [
                "All lectures and review sessions were also recorded and uploaded.",
                "All lectures were recorded",
                "Lectures and problem sets.",
                "Lectures were recorded for later viewing.",
                "Recorded lectures",
                "and recorded",
                "n\/a",
                "N\/A",
                "recorded lecture",
                "Recorded lecture",
                "The live virtual lectures were also recorded. A lot of virtual office hours were available for students.",
                "n\/a",
                "Recorded lectures.",
                "The live lectures were also recorded and posted to canvas.",
                "Office hours sun-friday",
                "In addition to the main virtual lecture (which was also recorded for people in other time zones), Professor Eisenstat would stay after class to answer questions, as well as host scheduled and on-demand virtual office hours and virtual exam review sessions. The TA and ULAs hosted frequent virtual office hours, which were essential for planning and troubleshooting, as well as face-to-face code review sessions. Additionally, Professor Eisenstat was very responsive via the newsgroup and via email, providing answers to theoretical questions and homework clarifications. Finally, the TA Richard hosted live virtual homework walkthroughs for each of the six assignments, which provided great background and direction for completing them."
            ]
        },
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Everything from number representation, data compression, the linux filesystem, error detection, the memory hierarchy, concurrency, system-level input output, processes, and instructions. Essentially a grand tour of systems programming and computer architecture.",
                "continued experience programming in C, understanding of the Bash shell",
                "Learned about how computer back-ends work! Got very familiar with C.",
                "R.I.P to a Yale CS legend. Learned alot about the inner-workings of a computer, from adders, to compression, to memory.",
                "Just looking back at the code I wrote for the first and the last problem sets, I saw an enormous jump in quality and complexity. I'm a much better programmer, and I feel like I have a broad picture of the internal workings of a computer.",
                "Learned a lot about how computers are organized and how executions are broken down into processes and run in a shell.",
                "Systematic programming, compression, C, and basic competency programming.",
                "Learned about computer organization, including compression, file organization, error detection and correction, memory organization, the shell, and more. Also improved skills in C a lot.",
                "Debugging code, memory allocation, how some computer hardware works",
                "This class is considered a rite of passage for CS majors and I wholeheartedly agree with that. With the first assignment, you are thrown into the deep end with understanding the spec, implementing it and edge casing. I became a better programmer all around, as well as more familiar with computer architecture and design. More specifically, you get better at reading documentation and man pages for functions to help you complete your assignment. You also become better at debugging and testing your code. These skills are definitely fundamental for any programmer.",
                "I improved my coding skills in C and learned about computer architecture, data compression, etc.",
                "Systems programming",
                "coding in c.\r\nA greater understanding of parser and bash",
                "Underlying principles of computer systems and how they work, general computing knowledge of software and hardware.",
                "Learned a lot about how linux works, and how to write better code for more complex problems.",
                "I learned how computers work and the basics of systems programming",
                "Computer architecture, error detection\/correction, compression algorithms, instruction set architectures, caching, virtual memory",
                "Through the problem sets, I gained a deeper understanding of data structures and systems programming. I am more confident in my abilities in C and also have a stronger grasp of how computer systems work.",
                "I learned about Systems Programming and about Computer Architecture and Data Compression",
                "Matured as a CS student",
                "I was always saying that it was ironic I was a CS major, because I had no idea how computers actually work.  This was a huge step to fixing that.  I was not a great student, and I'm sure I could have gotten even more out of this class if I had all the time and focus in the world, but I definitely learned a lot no matter what.  the basics of systems programming, bash, architecture & OS, plus some time on compression and encoding.",
                "I became a much more efficient programmer and gained better logical reasoning skills.",
                "data compression, linux programming,",
                "My programming improved as did my understanding of computer systems.",
                "number representations in machinery, data compression, error detection, how operating systems work in conjunction with programming (cache, memory, parallel programming), sharpening C skills",
                "Stan was an incredible professor. I learned about how computers work in a way that I didnt know before.",
                "I learned a lot about how computers work and how to tackle complex computer organizational problems.",
                "I learnt about computer system and organization, including binary representation, memory hierarchy, parallel programming, pipeline, e.t.c.",
                "An understanding of systems programming",
                "This course is often described as two different courses in one: what you learn in lecture\/is on the exams and what you do\/learn on the problem sets, and in some ways this is true. The class lectures and exams focused on number representations and adders, data compression and the Lempel-Ziv-Welch Algorithm, error detection and correction, computer systems organization and memory hierarchy, parallel architectures and networks, virtual memory, system-level I\/O, the backend of a shell and shell processes, and instruction set architecture. Meanwhile, the five homework assignments focused on the Linux file system, lexing and parsing, macro processing and regular expressions, the Lempel-Ziv-Welch algorithm, and the backend of the shell. Clearly, there is some intersection between class and assignments, but they definitely are not perfectly matched like in many traditional classes. While this division is often described negatively, it actually ends up being quite complementary, especially for assignments like implementing the backend of the shell where we discussed it more theoretically in class and implemented it concretely in code. Generally, class lectures really gave me a strong understanding of specific aspects of computer systems, which could easily be applied to more general architecture questions. Meanwhile, with homework assignments, I greatly built my systems programming skills in C, while learning a lot about Linux system design and programs (file system, regex, shell, etc.). Most of all, through programming assignments I learned a lot about code organization and debugging, i.e. my main sources of frustration during the semester XD. Notably, this is not a systems class in the traditional sense, focusing on a variety of higher-level computing system problems instead of reviewing all aspects of computer architecture at a very low level."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Strengths: well-structured live lectures, plenty of ULAs and office hours to help with assignments, constantly updated newsgroup site, not as \"hell\" as people make 323 out to be. Weaknesses: not many, just harder to learn because of general remote learning.",
                "The courses were well-structured and informative; I liked how the notes were posted in advance so you could follow along during lecture. The nightly office hours were incredibly helpful when questions arise for the homework sets.",
                "The lectures are not great and only occasionally are relevant to the problem sets. The problem sets are great.",
                "This class will sorely miss the prospect of being taught by Stanley Eisenstat.",
                "I thought that the problem sets were particularly strong and contributed a lot to the learning experience, but sometimes the lectures could go by a bit fast--if you didn't catch something the first time, it was unlikely to be repeated (though Prof. Eisenstat was always happy to reiterate\/re-explain if you asked). Upon rewatching lectures in preparation for exams, everything made much more sense.",
                "Stan was such an incredible professor, he is always patient and willing to help, he will be sorely missed.",
                "Lectures are a weakness, and arent very tied to assignments. The big assignments are the bulk of the class and also where youll learn everything important.",
                "The material feels outdated but it is really useful to understand how a computer works. Lectures are informative and often interesting.",
                "Problem sets are very long. ULAs provide a lot of help though.",
                "Strength: rigorous material, teaches you how to be an independent programmer\r\nWeakness: material is highly theoretical and completely useless for those going into industry",
                "If anything, and I think this may be unique to Stan, but the course material was a bit isolated from the programming assignments. The midterm and final were supposed to be based off of lecture notes, not necessarily our homework or coding. This isn't a huge problem, but I found it disorienting at times and had to cram notes the week before an exam. Other than that, I feel like the course is very successful, providing enough guidance for you to complete your assignments as well as independence for you to code up your assignment from scratch.",
                "Even though the problem sets were difficult and time consuming, I was able to greatly improve my coding skills over the semester.",
                "I think lectures can be more interesting and related to homework.\r\nThe lectures can get a bit boring sometimes\r\nThe office hours are great!",
                "Strengths: excellent content and a foundational course for all CS students. Weaknesses: few or none.",
                "Strengths: The structure is very tight, the feedback and assignments are very clear, the information is dense but still digestable. Lots of Office Hours. \r\n\r\nWeaknesses: Repetitive lecture format.",
                "This was a great course. Prof. Eisenstat was a gem of Yale CS. One of the best professors I ever had.",
                "The material is a little dense when you first encounter it and takes some time outside of the lectures to understand.",
                "A strength is that Professor Eisenstat really cared about the students and would personally invest in our learning. Something that could have been improved is to write more during lectures instead of reading from lecture notes.",
                "Strengths: Professor Stan, challenging but rewarding PSETs, interesting material\r\nCons: PSETs are very time consuming",
                "The course encourages students to learn alot of the material from the textbook and to do research on their own before applying it to psets.",
                "Very difficult course, but Stan always made it accessible.",
                "excellent",
                "Strengths: Stan is a great teacher; though he is gruff at times, he always answers questions in-depth. \r\n\r\nWeaknesses: Not a fan of course material (prereq. for CS majors) and was hard to pay attention in lecture, psets were very challenging\/time-consuming",
                "Problem sets were interesting, lectura material was great. Most helpful part were the homework walkthroughs.",
                "The lectures are very informative and the problem sets are challenging in a way that makes you learn a lot for each assignment.",
                "The materials are certainly challenging but the lecture is easy to follow. Professor Eisenstat provides us with all the handwritten lecture notes and go through them carefully, and I can always ask for further clarification quickly. The readings and coding assignments are extremely useful for us to understand and internalize the new concepts.",
                "Prof. Eisenstat was an amazing man whose strengths extended beyond teaching to empathy and care. He was the backbone of this course and this course really is essential to a computer science major's path. It is one of the most difficult courses I've ever taken due to the nature of the content, and for the difficulty of the content, it was taught as well as it could've been. Some concepts are simply so convoluted in and of themselves that they cannot be conveyed any clearer than they already were.",
                "The greatest strengths of this course were the strong overall course structure, the engaging lectures and problem sets, the abundant support system, and the excellent instruction from everyone involved. The class lectures were always fun and interactive, with ample room for questions and clarifications. The assignments, while incredibly time consuming, were usually worthwhile in the end and taught a lot about systems programming in C. These two aspects of the course complemented each other nicely, with frequent intersections but unique flavors. Furthermore, the exams were reasonable, and the grading policy was quite transparent and sensible. All of the submission and coding systems were very organized, while also teaching good general programming practices. Most of all though, the support systemincluding homework walkthroughs, office hours from Professor Eisenstat, TA Richard, and the ULAs (especially Miles and Jau), and face-to-face gradingwas exceptional. Everyone involved really cared about you doing well, and you could reach out to any of them for help. Professor Eisenstat was one of my favorite teachers ever, and I hope future iterations of this class and Yale CS overall continue his legacy of instruction. The only weaknesses of the course was the incredible difficulty, which is inherent to the course and what makes it worthwhile, and the slightly lonely\/disconnected atmosphere, which was caused by remote learning. The difficulty could possibly have been alleviated with a few more late days (even though the 6 was quite generous), as the problem sets took anywhere from 15 to 40 hours and were hard to manage time wise. Additionally, a bit more clarity on the specs\/test cases may have also alleviated this a bit, but that was a part of the challenge as well :). Hopefully the remote disconnectedness will be over soon, but the Gather.town and all of Professors Eisenstats efforts probably made it as good as possible. I will always miss his daily small talk and New Haven weather updates. Rest in (Processing) Power Stan."
            ]
        },
        {
            "question_id": "YC602",
            "question_text": "Among the practices in this course geared toward learning during the COVID-19 pandemic, which succeeded and which could be improved? Please comment on course practices that allowed for virtual engagement. (Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "All lectures were recorded to make it helpful for missed lectures or review. Office hours were plentiful and very helpful. All homework assignments had a corresponding walkthrough to go over key concepts. Overall very solid.",
                "The virtual queue for office hours was great.",
                "Office hours was extremely helpful",
                "I really liked Stan's use of Notability in visualizing the notes and concepts that he was teaching. I also like how he enabled us to access all resources, including his code, worksheets, readings, articles, his notes and recorded lectures.",
                "The notes and lectures were all posted on Canvas, so I was able to watch them back to review for exams or if I missed a lecture.",
                "More engagement for students during the class. (Polls, breakout rooms, etc.)",
                "Posting recorded lectures online and lecture notes was helpful since you could review exactly what the professor said.",
                "Although virtual, the layout for office hours was still conducive to obtaining help and guidance.",
                "There were lots of virtual office hours available for the students",
                "I thought gathertown rooms were nice, as were virtual homework walkthroughs.",
                "I actually found that live lectures that were also recorded worked wonders for me.  I often have trouble focusing during auditory lectures, so having the option to go back later and repeat it at my own pace was great for my learning.",
                "n\/a",
                "It was great.",
                "I think the office hours could be improved a bit. The online queue worked pretty well, but there seemed to be fewer ULAs than normal so sometimes it would take hours to get help.",
                "The recorded lectures and the lecture notes are of great help.",
                "The consistent office hours were what kept me going through the semester and provided me with the support I needed to complete psets effectively.",
                "The virtual class lectures were quite effective, as sharing the iPad screen with a PDF of notes made sure they were clear, legible, and could be annotated as well; however, it was definitely easier to lose attention on the static PDF than on a live written set of notes like a blackboard. Maybe some sort of combination of these methods (pre-written and live-written) would be best. Additionally, despite the increased bandwidth concerns, I did like when Professor Eisenstat had his camera on, as it felt much more connected. Similarly, the virtual homework walkthroughs were solid, and sharing the presentation slides worked quite well to overcome the digital barrier. Overall, however, the best remote learning practices were definitely for office hours. While I only used it a few times, I think the Gather.town was really creative and fun. It made office hours feel more social and similar to Hillhouse 17, despite being a bit cheesy and still more awkward than in-person settings. The Google doc queue for office hours was also highly effective, keeping things simple and reliable. I think using student Zoom links was a good decision, as you could just sit in your meeting and work while you waited for a TA or ULA to join. The only thing that I would really improve is the exam submission structure, as it was stressful to try to finish the exam, scan it, and upload it in just 15 additional minutes. It might have been better with just some more extra time (maybe 30 minutes more than usual), but I found myself struggling to get it retrieved, downloaded from the Zoo, written out, and uploaded to the Zoo all in the time allotted."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Yes, definitely. All CS majors need to take 323 eventually, and it's not as bad as people make it out to be. Probably don't take this if you're not a CS major, unless the course description really speaks to you. Yes, the programming assignments can take over 20 hours, but spread over two weeks, it's not unmanageable at all. All assignments are coupled with a detailed specification and helpful walkthrough session, and all the office hour times are very useful. You learn a ton about systems programming, and about all the nitty gritty details about how computers ACTUALLY work, which is fascinating. Gives you a better appreciation of operating systems and modern computing.",
                "Yes, this is a great course that continues from 223 with interesting assignments in C. Professor Eisenstat is very kind and helpful. The difficulty is perhaps a bit harder than 223, but it's not the huge leap that I feared it was going to be.",
                "Honestly at times this course made me wonder if I was cut out for CS. It's pretty hard. And I don't know if my interest in CS was enough to carry me through hours and hours of PSETs and trying to understand lecture material. But definitely learned a lot!",
                "I absolutely loved CPSC 323. Genuinely one of the best classes I've ever taken at Yale, in terms of engagement, the content I learned, and the quality of the course. Professor Eisenstat really cared, and was extremely generous with his time if you ever got stuck anywhere. It was quite well-structured, and by the end of the semester, I could really see the difference. It's definitely a lot of work, but it was very manageable and I came away having learned an incredible amount. 100% recommend, it is an essential.",
                "Only if you have to for the major. I'm not sure what this course will look like without Stan, but even if the computer organization concepts don't interest you, you learn a lot about time management and problem solving from the psets. TAs\/ULAs are very helpful.",
                "If you want to learn CS, this is the course to take. This course is not for the faint of heart but only for people who truly love computer science.",
                "Definitely. Assignments are a ton of work and youll have many frustrated nights struggling through them, but you will also learn a ton and come out the other end a much more confident programmer.",
                "You're probably taking this to fulfill a CS requirement. The workload is definitely quite a lot and the material is sometimes fairly difficult to wrap your head around. If you're willing to put in the time, then this class is really rewarding and really gives you insight into how a computer works. But just take an easier workload for your other classes when you're doing this one.",
                "Not if you don't have to.",
                "If it is not required, it is best not to take it if you plan to get a job in the industry.",
                "Only if you are serious about the CS major or becoming a better programmer. I don't think it would be worth it to take this course unless you are a CS major or really want to hone your programming skills.",
                "Yes, this course is a must for students majoring in cs.",
                "Yes. System programming is very relevant for cs major",
                "If they are a CS student, absolutely. It is a foundational course into computer systems that every CS students should take.",
                "Absolutely!",
                "Definitely would recommend to any CS major, although you have to take it anyways.",
                "Only as a CS requirement",
                "Yes, you learn alot but it is also a lot of work",
                "Yes, fantastic CS course that teaches you a ton but do be prepared to spend about 25 hours per Pset, roughly one every 2-3 weeks.",
                "Yes. Professor Eisenstat is the best professor I have ever had. May he Rest In Peace.",
                "It's a prereq for CS major, so you have to. If you're interested in learning computer architecture, go ahead (though be advised of the workload)",
                "Yes! Taking this class with Stan was incredible, and he will always be respected and honored but the students who benefited from his instruction.",
                "Computer Science majors have to take it, but I wouldn't necessarily take it if you're not a CS major. It's a really good class, it's just not particularly relevant if you're not studying CS.",
                "You should take this course. This is a must for CS students and it builds a foundation of understanding.",
                "For any student required to take this for their major, yes. Otherwise, devote 30+ hours\/week to other pursuits.",
                "Yes",
                "I would recommend this course to any student looking for a challenging computer science course to learn high-level systems programming. You should feel confident about programming in C, but you need not know or remember every little detail about pointers and data structures to succeed. Because of the intense workload and difficulty of the programming assignments, this class can be very rewarding, as long as you are willing to work for it. Conversely, it is not a class to take with an overloaded schedule or if you are not prepared to put a lot of work into the programming assignments. I often started assignments too late, which made them more stressful than necessary; being prepared for the workload would definitely help avoid this and other pitfalls. While it wont be the same without Stan, I hope future iterations of the class maintain the very engaging and proven problem sets and the breadth of interesting lecture topics. I know the Spring course covers more low-level system design, so that is also something to consider if that does or doesnt interest you. Otherwise, it doesnt have to be as bad as people say; just give yourself enough time and mental space, and you can really enjoy it!"
            ]
        }
    ],
    "extras": {
        "title": " CPSC 323 01\n        SystemsProgramng&ComputerOrgzn "
    }
}