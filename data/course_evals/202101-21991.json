{
    "crn_code": "21991",
    "season": "202101",
    "enrollment": {
        "enrolled": 175,
        "responses": 148,
        "declined": 8,
        "no response": 9
    },
    "ratings": [
        {
            "question_id": "YC402",
            "question_text": "Your level of engagement with the course was:",
            "options": [
                "very low",
                "low",
                "medium",
                "high",
                "very high"
            ],
            "data": [
                0,
                12,
                36,
                54,
                25
            ]
        },
        {
            "question_id": "YC404",
            "question_text": "What is your overall assessment of this course?",
            "options": [
                "poor",
                "fair",
                "good",
                "very good",
                "excellent"
            ],
            "data": [
                1,
                6,
                31,
                53,
                37
            ]
        },
        {
            "question_id": "YC405",
            "question_text": "The course was well organized to facilitate student learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                2,
                2,
                18,
                70,
                36
            ]
        },
        {
            "question_id": "YC406",
            "question_text": "I received clear feedback that improved my learning.",
            "options": [
                "strongly disagree",
                "disagree",
                "neutral",
                "agree",
                "strongly agree"
            ],
            "data": [
                4,
                19,
                49,
                42,
                12
            ]
        },
        {
            "question_id": "YC407",
            "question_text": "Relative to other courses you have taken at Yale, the level of <u>intellectual challenge<\/u> of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                1,
                3,
                41,
                68,
                15
            ]
        },
        {
            "question_id": "YC408",
            "question_text": "Relative to other courses you have taken at Yale, the <u>workload<\/u> of this course was:",
            "options": [
                "much less",
                "less",
                "same",
                "greater",
                "much greater"
            ],
            "data": [
                1,
                10,
                49,
                49,
                20
            ]
        },
        {
            "question_id": "YC601",
            "question_text": "Which of the following best describes your mode of learning in this course?",
            "options": [
                "recorded lecture",
                "live virtual lecture",
                "in-person lecture",
                "virtual seminar or other discussion format",
                "in-person seminar or other discussion format",
                "virtual lab",
                "in-person lab",
                "other or multiple (please describe below)"
            ],
            "data": [
                45,
                82,
                0,
                1,
                0,
                0,
                0,
                4
            ]
        }
    ],
    "narratives": [
        {
            "question_id": "YC401",
            "question_text": "What knowledge, skills, and insights did you develop by taking this course?\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Different data structures, how to code in C.",
                "basic C, how data structures can be made, how to choose a structure to solve a problem.",
                "I learned C, data structures, and general programming techniques.",
                "I started with no knowledge of C, and ended up learning about many data structures and a lot about memory management.",
                "Developed a really good understanding of coding at a low level. This class forces you to completely understand how data is stored which is so important going into 323. It's not a practical course, after all it is in C so it's not meant to teach you any practical skills, just to improve your data understanding and manipulation skills.",
                "I learned about programming in C and various data structures like BSTs, heaps, hash tables, and graphs.",
                "I learned a lot of fundamental Computer Science concepts that I know I will continue to utilize",
                "Programming skills in c and data structures.",
                "Great introduction to the language of C and various data structures.",
                "CPSC 223 was a challenging, but very educational course. I gained much stronger problem solving skills and the ability to approach very complex problems in a methodical manner.",
                "I learned a lot about how to program in C. I also learned a lot of the essentials of data structures and algorithms.",
                "I developed the ability to code in C. I also learned about memory allocation and how to manage data on the heap and the stack. Finally, I learned about different data structures and their advantages.",
                "I developed an understanding of the C programming language and how to program at a somewhat lower level compared to other languages such as Python. I also improved my ability to debug large programs and come up with algorithms or specific data structures to solve problems in optimal time or space complexity.",
                "I developed my programming and debugging skills significantly, specifically in C. I also bettered my understanding of memory management, system architecture, and how programs can be written to best optimize the usage of this resource.",
                "Programming in C, various data structures, tools for debugging, organizing larger programs, thinking in abstractions",
                "Overview of data structures, coding in C, pointers and memory",
                "We learn data structures through programming in C. Data structures like linked lists, arrays, hash tables, binary search trees, and heaps. I learned when it is better to use one data structure over another. We also learn about time complexity like big-O notation.",
                "Lots of advanced programming in C. If you think you know everything there is to know about C before taking this class, you don't. The assignments are mostly implementing specific data structures we went over in class (stacks, heaps, treaps, binary search trees, hash tables, dictionaries, arrays). If you use Vim during the semester like I did, you'll also learn Linux command line tricks including in-terminal debugging software, such as GDB and Valgrind. I got really good at debugging on my own through this class; just like programming in general, I thought (incorrectly) that I was a master debugger going into this class, but I improved leaps and bounds.",
                "I learned the language C and a lot about data structures and algorithms. I became a better coder and debugger.",
                "I gained a very thorough understanding of C and how to be a good programmer.",
                "This course not only develops one's knowledge of data structures, which serves as greatly helpful for later use in computer science, but also developed one's knowledge of the C programming language, and importantly, the ability to debug one's code (which is where I spent most of the time on the problem sets for this course).",
                "I improved my knowledge of the C programming language, got comfortable with dynamically allocating memory, and developed a basic understanding of data structures. However, I'm not as knowledgeable about data structures as I'd like to be, even after taking this course.",
                "I learnt data structures. I also got comfortable writing in C.",
                "C programming and implementation of common data structures",
                "We learned how to program in C and about different data structures.",
                "A good understanding of fundamentals in C as well as an introduction to many data structures including linked lists, graphs, trees, and hash tables.",
                "I learned a ton about how to program in C, ways to use and implement data structures, and generally developed my programming skills",
                "C basics and implementing data structures in C",
                "Learn a lot of new data structures. Learned how to properly valgrind and debug.",
                "Data structures: using arrays, linked lists, heaps, binary search trees, treaps, graphs, etc to solve problems. How to program in C: implementing abstract data types, memory allocation, debugging, etc",
                "Data structures, algorithms, problem-solving",
                "Learned about a variety of data structures, programming techniques, and algorithms. Overall became a better programmer.",
                "How to code in C, basic algorithms, many different data structures and how to implement them, and a bit of memory management and run time efficiency.",
                "I gained a lot of skill as a programmer - particularly in debugging code, thinking about how to make my code run quickly and use memory efficiently, and understanding how the code was executed on the computer itself.",
                "Cs data structures",
                "I learned how to code in C, how to manage memory at a lower level, and how various useful data structures work and how they can be applied.",
                "Data structures, programming in C (pretty relevant course in the CS major for technical interviews)",
                "C programming skills and familiarity with data structures",
                "Learned about programming in C and basic data structures",
                "Im pretty proficient at C now and feel like I genuinely understand the utility and implementation for a lot of data structures. I also learned quite a bit about persistence and debugging. Generally just feel like a better coder.",
                "A good overview of various data structures.",
                "I gained much more confidence in programming in C and a wide breadth of knowledge about data structures.",
                "Coding in C\r\nData structure design\/motivation \r\nRelationship between coding and \"under the hood\" processes",
                "I learned a lot about data structures and C.",
                "I learned about all the basic data structures in CS and how to write in C.",
                "Knowledge of the C programming language and basic techniques. Data structures, memory management, etc.",
                "Data structures, programming techniques, some unix stuff",
                "Extensive knowledge of C programming language as well as data structures and programming methods",
                "I learned how to program in c and a lot more about building data structures.",
                "Programming in C and various data structures",
                "c programming skills, how to debug, how to use gdb, valgrind, and vim.",
                "Basics of c programming and abstract data types",
                "Programming in C, data structures",
                "I learned a lot about data structures, coding efficiently, how to think about problems in a very programmatic manner, and ultimately, translating ideas into code. I benefitted greatly from this course.",
                "How to code in C",
                "Data structures and Algorithms, C",
                "Basic data structures and how to program in C",
                "I learned to code in C.",
                "I learned about C and gained a deeper understanding of how computer science works on a fundamental level.",
                "Learned all about the fundamentals of data structures (trees, heaps, arrays, linked lists, doubly linked lists, stacks, queues, tries, etc.) and search algorithms (best first search, BFS, DFS, heapsort, quicksort, radix sort, ternary search trees) through coding in C.",
                "I learned many types of data structures which have varying use cases, some performing better than others in certain situations. I was able to learn how to implement these concepts in C and think about which would be the most appropriate implementation and to ensure that the code works properly and efficiently.",
                "Data structures (e.g. linked lists, trees, arrays). Programming in language C.",
                "I learn all about different data structures (linked lists, hash tables, trees, heaps, etc.) and when to implement them.  I became very familiar with C and learned valuable techniques to program effectively in C.",
                "How to use C; more nitty-gritty programming techniques such as memory allocation",
                "Data structures, programming in C, how programming language interact with the machine, writing more efficient code, run time and abstraction layers, how to approach a coding interview question",
                "C programming language, data structures, and algorithmic thinking",
                "This class is a challenging but incredibly fulfilling introduction to C program that teaches you what to consider when writing solutions. I learned a lot about how C actually works, and what makes it faster and is reasonable to consider. I also learned a lot of different data structures, programming techniques, and algorithms that helped me begin to develop an approach to coming up with elegant solutions to hard problems. The course also began to formalize a lot the algorithms and ideas I had taught myself but never fully appreciated the beauty of.\r\nThe psets can be challenging, but aid in this endeavor by giving you a chance to apply what you learn in class and try to figure out how you like approaching problems. They are also just fun.",
                "A knowledge of data structures and programming in C",
                "I learned about the basics of C programming along with many different data types including linked lists, binary search trees, graphs, matrices, etc. I also learned about how to debug your code and write code that is time efficient for the problem you are solving. I also learned to write code that is not only time-efficient but also uses memory efficiently as well.",
                "I've learned a lot about data structures this semester. The differences between them and when\/how to implement them.",
                "Strategies for programming in C, how to use VSCode, debugging tools (GDB, Valgrind)",
                "I learned the basics of C, data structures, and computer science in general. The course's topics were very detailed and laid out in the lectures.",
                "Fundamental data structures",
                "how to program in c, programming conventions, how to write better code",
                "C, how data structures like heaps or queues work \"behind the scenes\"",
                "C Language, stacks, queues, structs, arrays and arrays of structs, dictionaries, hash tables, heaps, trees, treaps, recursion, big O, graphs... For more info, refer to the class website: https:\/\/www.cs.yale.edu\/homes\/aspnes\/classes\/223\/notes.html",
                "C programming, data structures, some algorithms and runtime analysis, programming techniques (recursion, DP, etc)",
                "Programming in C: basic data structures, control flow, algorithms",
                "I learned how to program in C and gained an appreciation for the higher-level programming languages. Working with C allows for a deeper understanding of what the computer does in the background for other programming languages.",
                "Data Structures and Programming Techniques",
                "A good understanding of memory",
                "C programming techniques & data structure implementation. I also learned a few algorithms such as tree search.",
                "As the title suggests, different Data Stuctures in CS. Very important for coding interviews!",
                "This course gives a fantastic foundation for functional programming in C and choosing and implementing data structures to efficiently solve problems.",
                "I learned C along with important programming concepts and techniques",
                "Programming in C, pros and cons of different types of data structures such as arrays, linked lists, hash tables, stacks, queues, deques, etc. and some algorithms and techniques like graph search, heap sort,  object-oriented programming, and dynamic programming.",
                "I learned to program in C and use some basic data structures.",
                "I developed computational problem solving skills, understanding of the theory behind basic data structures, and coding skills in C.",
                "This course adequately introduced me to programming, and it was even more fruitful since we did everything in C.",
                "This was the first time I did anything with C, and I feel much more confident using it going forwards. We learned how to control everything going on when running code, from compiling using dependent files to allocating specific space for data. Some data structures we learned were linked lists, queues, stacks, hash tables, trees, and graphs.",
                "C language, basic understanding of various data structures (queues, trees, etc)",
                "Programming in C, organizing data",
                "I learned quite a bit about a variety of data structures in computer science, such as pointers, structs, stacks, hash functions, heaps, trees, and graphs. The course material is taught in the language C, so you learn quite a bit of C in the process of taking this course, although the concepts learned in the course are relatively universal across languages, even though you only learn them in C syntax."
            ]
        },
        {
            "question_id": "YC403",
            "question_text": "What are the strengths and weaknesses of this course and how could it be improved?\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "Strengths: you will learn A LOT. There is a website with the notes for the entire class that is very comprehensive and super helpful for psets. Office hours are super helpful; even if you've never used them before, you will almost definitely use them in this course.\r\nWeaknesses: the lectures are very boring and incredibly disorganized; he spends most of his time debugging the code he is writing. It's honestly not worth going to if Aspnes is teaching it again. You should probably just look at the syllabus with the notes.",
                "They need to offer FAR more support\/guidance for students.",
                "This class was well-designed and very informative. One thing I would have preferred was more clarity on the specs of certain assignments. I sometimes found myself a little confused with the specifics of the assignment.",
                "The lectures in the course were not very strong. It was difficult especially virtually to follow along, especially if seeing a concept for the first time. Almost all of the coding I learned through Professor Aspnes' notes (which were excellent), through TAs, or online.",
                "The grade was just the average of 12 psets, no participation or exam component. This makes it pretty scary if you can't figure out one pset because you risk getting a 0, but if you start early and work with other people and GO TO OFFICE HOURS you'll be fine. I loved the automated grading and efficient nature of the course, but it does feel a bit impersonal and intimidating if it's not your style.",
                "This course makes you much better at programming in C! Lectures move pretty fast (in this sense having the lectures recorded was a blessing because I could go back and watch stuff I missed) and Aspnes isn't always the most engaging, but overall he's a good lecturer\/professor; he tried to answer all of the questions in the chat and adjust based on feedback. Another weakness is that we zipped through a lot of data structures, especially near the end, so I don't really know how much I understand the content covered near the end of the class. One of the strengths of this course is the TAs -- they are SO HELPFUL; however, the set up of OH was also a weakness because the queue would sometimes get super long (like, more than 20 people for 3 or 4 TAs) and you had to be there as soon as OH started.",
                "A strength of the course was definitely the online notes and code that were provided, they really helped me study the concepts even after the lecture. A weakness was that sometimes certain aspects of the material was brushed over and not clarified very well.",
                "I thought the lectures were interesting and that the ULAs and workshops were very helpful. I enjoyed having weekly assignments rather than projects and exams. I did not have a clear sense of where I stood in the class grade-wise, however.",
                "I would say the strongest aspects of this course were the extensive resources available to students beyond lectures. Professor Aspnes provided detailed notes with multiple examples, while TAs and ULAs held office hours multiple times of the day ,every day of the week in addition to Professor Aspness instruction. I have no complaints with the course, though I do wish the problem sets were given with longer deadlines because I often found myself pressed for time as some psets took me 12 hours+.",
                "I think the lectures themselves were quite hard to follow in terms of learning content through live coding sessions. However, there was a clear schedule to the course. The problem sets aligned nicely with what we learned during the lectures.",
                "I thought the lectures were very informative. In addition, there were plenty of teaching assistants who were very helpful in office hours.",
                "Under Dr. Aspnes, this course did not prove as stressful as the typical CPSC 223 experience. We had weekly homework assignments which were quite reasonable, so I never felt overwhelmed by the course. Some assignments took a significant amount of debugging, but it was a mostly enjoyable experience. I think the strengths of this course lie in the support from ULAs. There are plentiful office hours, which is very helpful when working on assignments. To improve the course, I would suggest moving slightly faster through the initial lectures on the C programming language. Everyone should have some programming background, so it felt unnecessary to spend such a considerable amount of time on basic boolean or arithmetic operations.",
                "During this semester, one of the greatest strengths of the course was the lack of exams. In former CS courses (both at Yale and outside Yale), I have found CS exams to have a negative impact on my learning; instead of bettering my programming abilities and working to optimize my code and increase the rate at which I could solve problems, I had exams which forced me to be bogged down by theoretical subtleties which I inevitably forgot in the weeks after an exam and that failed to assess the problem-solving skills the problem sets build over time. Although the lack of exams likely compressed the grading distribution and thus potentially hindered the ability for course instructors to create distinctions between levels of performance, it greatly boosted my ability to learn.\r\n\r\nThe workshops were also very useful, and well-executed. Similarly, yet to an even greater extent, the ULA OH were fantastic; the system was quite robust and enabled seemingly the most efficient OH system, and the ULAs themselves were almost always extremely patient, kind, knowledgeable, and helpful.",
                "The assignments were fun to work on. Lectures were enjoyable but especially towards the beginning bogged down by questions of questionable merit.",
                "Really liked the pset format and office hours support, but lectures were not very engaging (mostly just drawing on whiteboard) -- could use more applications \/ visual supplements",
                "Professor Aspnes is very engaging and funny. Office hours were helpful a lot of the times! The TA's tried really hard to support students by holding review sessions for topics.",
                "Strengths: Not enough good things can be said about the TAs and ULAs. Holy cow, they are fantastic. Especially in C where there are so many technicalities that could go wrong, their help in office hours was absolutely essential to pass many of the test cases. And despite them often walking you through what you're trying to do (it's hard to give general hints in CS that are also helpful), I still managed to learn so much from them. Truly amazing - every last one of them. :)\r\nFor the rest of the class, Dr. Aspnes is really funny in class and knows his stuff inside out; it was a privilege to attend lectures with him. I also really appreciated the student community in this class (despite being remote, we had an active GroupMe and Discord server) that provided support whenever I needed it.\r\n\r\nWeaknesses: I'd say one thing that could be improved is more homogeneity in what development environment we used. The TAs and students were split between Vim (which Dr. Aspnes used in lectures), VS Code (which everyone used in the fall but then didn't like so the staff did not universally recommend it this time) and numerous other text editors. This made it harder to seek help because people weren't seeing eye to eye on debugging strategies, for example.",
                "Strengths: ULAs, content of courses\r\nWeakness: I feel like walkthroughs of code during class could be slightly improved because it's a bit hard to follow along. Also worth considering switching to teaching C++ instead of C.",
                "Strengths: problem sets were engaging, did not have exams so coding was a much more realistic task (we could debug, did not have to write code and get it graded in a pedantic manner).\r\n\r\nWeakness: so much material; sometimes felt like we were skipping some things; there should have been a better explanation of core C functions and how the work.",
                "One of the biggest strengths of this course is its organization, which lies in a large yet well-organized web page with all of the reading, examples, and problem set questions, both past and present. With links to different sections, this web page became greatly useful, not only in learning new information, but also for referencing\/looking up old information about past topics.",
                "Strengths: the wonderful support from ULAs, the walkthroughs, the frequency of psets, the responsiveness and accessibility of Aspnes and teaching staff on Ed\r\nWeaknesses: the lectures can be a bit disorganized, the psets didn't feel challenging enough to prepare us for 223 as there weren't many edge cases, the specs could be more detailed",
                "The TA sessions were useful but the professor's notes are amazing!",
                "I think the course notes are a very helpful resource. In terms of what can be improved, I didn't find the textbook helpful for learning data structures. Maybe listing another, more relevant textbook would be helpful. Additionally, some of Prof. Aspnes' lectures are just watching him code in C. I haven't taken any other CS classes so maybe this is the norm, but I feel that something like a Powerpoint may be more effective at conveying the information we need to learn.",
                "I liked a lot that the course was project based and that there were many assignments which took off the pressure for each one. I learned a lot from the projects about to build data structures. The course didnt emphasize as much how to use data structures (the assignments often told you which one to use) which could be a helpful skill for coding interviews. Additionally, it would have been helpful if the problem sets were posted more in advance.",
                "The amount of office hours were extremely helpful when the assignments became difficult. Some of the ULAs were a bit unhelpful, but most gave excellent advice. I thought that lectures were great because Aspnes would use a whiteboard to explain the abstract goals of a data structure and then switch to his code where he showed implementation.",
                "Strengths  Aspnes is fantastic. Such a clear lecturer and super engaging. He really teaches a lot of material I think will be really relevant in my future career. The psets do really help you work on the material covered in class.\r\nWeaknesses I wish the psets were a little bit more applicable to the real world  some of the psets were super esoteric or just generally seemed a little pointless. but that's a small complaint!",
                "Prof. Aspnes's online course book was really useful and contained all the information I needed for the course.",
                "Strengths are that the TAs were really great. Sometimes virtual office hours got super busy though.",
                "The problem sets were fun and a good way to implement what we were learning in class. This semester was special due to no tests so it was low stress",
                "The Ed Discussions were very helpful",
                "This semester there were no tests so it is unique. However, the problem sets were quite easy compared to what people have described 223 to be (class average was >90%). It teaches C well, but a more rigorous approach might be better to prepare for 323.",
                "The course was overall quite strong. In particular, the course notes were very detailed and well-organized, the assignments were interesting and helped me internalize the content, and the lectures did a good job of explaining things. I only have a couple minor complaints about lectures - sometimes they got a bit boring, and sometimes when coding live professor Aspnes would do a couple quick things without mentioning what he was doing or would spend a long time doing detailed work without mentioning the big picture\/objective of what he was doing.",
                "The lectures were good but I wish we could do more group office hours",
                "Strengths: data structures are something that you need to know if you want to work with software.\r\n\r\nWeaknesses: this is a pretty tough course if you don't have extensive CS experience, not sure if there's much that can be improved that way.",
                "Strengths: helpful ULAs and nice walkthroughs toward the end of the semester for harder problem sets, live lectures were pretty engaging, focus on problem sets (no exams this semester) helped me actually hone in the implementation of all the structures and understand how to build them myself (useful towards interviewing); Weaknesses: office hours queues get long with one-on-one set up and sometimes they end before everyone gets helped (an open Zoom room where students can work in groups with ULAs and others would be a helpful addition)",
                "the whole on zoom part made this course weird and not that engaging but I think that's just what happens online",
                "Strengths: The Coding assignments are practical, which can make them more interesting to work on and think about. Youre usually implementing things that mildly apply to real life. Theres also a great feeling when you complete them. This may be the case for any CS class, though. The class is also not too difficult if youre able to read between the lines of the spec.They have something they clearly want you to do on every assignment and that direct task is never too difficult. \r\n\r\nWeaknesses: I think this class may not have been as rigorous or as far reaching as some other instances of the class(we may have been rushed in some topics)? I guess Ill wait and see how prepared I am for CS323.",
                "A few exams would be very helpful to give time for thorough review of previous material.\r\nSlides during class in addition to hand drawing.\r\nSome small multiple choice quizzes to test knowledge of weekly material.",
                "Great course. Hard, but fair. I appreciated that it was all PSET based; if exams were to be brought back, allow them to be open computer, open note and typed, just like solving a problem in the real world.",
                "The strength of this course was its consistency; the psets were always doable, but difficult enough to learn from, and felt very relevant to what we did in class. they were actually enjoyable. In addition I deeply appreciated the ommitance of any exams; not enough professors understand how different it is to learn in a virtual setting. \r\n\r\nThe weakness of this course was probably its office hours occasionally. It was difficult to get help quickly at times.",
                "Exams would help, but otherwise the course content was great. Problem sets were relevant, challenging, and interesting.",
                "I think there should've been a final-something to test my cumulative knowledge. Overall, the weekly assignments were helpful in reinforcing what I'd just learned.",
                "i enjoyed this course, though it was difficult.",
                "It was a good course",
                "Professor Aspnes is a really entertaining lecturer. I felt engaged with the course despite the remote format. There is a lot of support outside of lectures, with office hours and the occasional workshops, but some weeks the queue would be upwards of 40 people. As a result, it would sometimes be tough to get the help needed. I felt that the lectures and PSETs were well connected, and the online notes are really helpful.",
                "Strengths - Great Professor, interesting content, interesting Problem Sets\r\nWeaknesses - More TAs to help out in OH",
                "I thought the lectures and examples given were designed well to explain things and that I learned a lot from the homework (which was challenging!), which had a good blend of \"adapt knowledge from class\" and \"problem-solve on your own.\" For improvement: I wish lectures had been more interactive (prof asking students for input as he implemented certain data structures, asking \"how should we do [next step]?\").",
                "Lectures were sometimes a little hard to follow regarding the coding. I enjoyed the difficulty level of the coding assignments.",
                "Strengths: The assignments are interesting and are rewarding to work through. Weaknesses: The specs of the psets can be confusing and unclear.",
                "I think being taught virtual is honestly better than in person for this type of class. Virtual office hours is definitely better and would assume most would agree.",
                "The lectures were for the most part very instructive and the Aspnes is very knowledgable with C. The assignments were pretty difficult and you spend a ;lot of time debugging",
                "I thought this course was well done.",
                "Overall, covering content and weekly exercises were well done. Lectures were occasionally quite fast, but knowing a bit about the material beforehand helped. I think the course could greatly benefit with larger projects that require connecting earlier material with more recent topics.",
                "This course has many resources available to students taking the course. The ones that I took the most advantage of are the extensive course notes posted on the course's syllabus webpage and the undergraduate learning assistants. One thing I think could be improved are the workshops outside of class. They were helpful, but at times they were not recorded for unknown reasons and it has been quite difficult to attend all meetings being a remote student.",
                "Strength: The absence of exams allowed me to put more emphasis on understanding and implementing specific data structures in the context of a programming language through assignments. Weakness: The course could have more flexibility with turning in assignments, such as offering a small bank of free late days.",
                "The strengths were its engaging subject matter and the professor.  Aspnes is a great lecturer although it would have been better if he had prepared more code before class.",
                "Strengths: I think the lack of midterm and final during the virtual semester is very considerate. After all, in real life, programming more often takes the form of projects instead of short-term timed trials.\r\n\r\nWeaknesses: Pre-prepared slides would have been helpful. Also, code examples in class often contained lots of bugs, and we spend too much time debugging.",
                "Strengths: Funniest and nicest professor, super informative and knowledgable. Homework problems were challenging but fun, and they train you to think through all the edge cases.",
                "Strengths: Professor Aspnes, the TAs, the online notes, and the lack of exams (though this last point is probably just a temporary result of the pandemic)\r\n\r\nWeaknesses: the virtual office hours queue, which was ridiculously long at times",
                "Overall the course was very strong. Sometimes I got a bit lost in lecture and frequently did not use the lecture notes. However, there is nothing that is bad in the structure of the course itself. It was very well taught and all the psets were clearly centered around furthering my understanding as a student.\r\nThe course also had both intuitive and very rigorous approaches to explaining concepts which I really liked and help me understand many of the topics.",
                "One of the definite strengths of this course is the strong ULAs.",
                "Strengths include very thorough course notes and well-designed psets. Good evaluation through the autograder.",
                "I think a strength of this course was being a computer science class remote learning worked better for this course than some of my other courses. I think that the lecture style with going over new concepts and then actually testing them out in a code editor was helpful. I also think having recorded lectures was a strength of the course that allowed me to review certain concepts while doing psets in a way I wouldn't be able to do with in person live lectures. A weakness would be that having such a large class on zoom made it so I didn't really get to know my fellow classmates but this wouldn't really be an issue in the future hopefully.",
                "It's a tough class. Having more TAs might make it better for the students, since they were really helpful with the homework, but were often overwhelmed later in the week.",
                "Strengths: plenty of resources (notes, lectures, slides), engaging lectures, office hours support for psets\r\n\r\nWeaknesses: sometimes office hours were overcrowded, likely because virtual learning inhibited students from forming study groups amongst themselves",
                "The lectures were entertaining and clear. Professor Aspnes did a great job with the visualization of the data structures and code in general. The increased tutoring hours, workshops, and consistent Ed discussion replies were god-sends.",
                "Strength: clear material, well organized\r\nWeakness: could be a bit boring at times",
                "strength: well structured, nice that notes were online\r\nweaknesses: zoo is an outdated way to submit assignments, need feedback on assignments",
                "Course generally seemed to lack structure, ended up covering pretty much all the advertised content but jumped around a bit",
                "Strengths: Recordings of lectures were helpful for catching up and review. The class website has all the course content and sample code, which are very helpful for review and psets. Given the below regarding the 2 main learning channels of this course, the website was vital.\r\nWeaknesses: Lectures are very fast and confusing, and don't fully explain things sometimes. Pset instructions were often unclear. In office hours, when you have to wait 2 hours in the queue, only to get kicked off without even getting to ask your question or only to get no answers or insulted, it feels terribly hopeless. Several ULAs avoided answering my questions, kicked me off the queue, or spent only a few minutes with me. They said it's because \"That depends on your implementation\" or \"I can't tell you the answer\" or \"I need to get to other people in the queue.\" One ULA even said, \"This is not the kind of question you bring to office hours. You're halfway through the class already\" and \"Office hours is only for asking conceptual questions\" and accused me of making him do my homework for me. Office hours made me feel so lost, alone, discouraged, and invalidated. Students would greatly appreciate if office hours and ULAs are patient, share knowledge generously, and admit it when they don't know how to help, instead of wasting students' time with excuses and negativity.",
                "Very organized course notes and helpful lectures. Professor Aspnes explains concepts and code clearly and honestly, while being one of the funniest professors in lecture I know of. Assignments this semester were pretty chill--cool and concise programming challenges that use what we learn in class without being overbearing in workload. Having no exams in exchange for a couple extra assignments I think was a good call (exams for intro CS classes tend not to be so helpful and effective in my opinion), but not sure if this will be the case for future classes. No weaknesses.",
                "The amount of resources put into this course was remarkable. Between the abundance of notes posted online, the recorded lectures, and the office hours, it was rare to get hung up on a question\/bug for too long. That said, the class was content-driven to the point where interaction with peers and TAs was pretty minimal. It might just be a product of covid, but the course felt a bit impersonal at times.",
                "Pure lecture course. Would be nice to have some student interaction with professor.",
                "This is an excellent course -- well-structured from basic C language to more advanced data structures and their applications. The materials are taught well and useful. The class atmosphere is also an enjoyable one.",
                "Strengths: Virtual lectures were optional and recorded, Aspnes is an extremely chill instructor. You can take the entire class asynchronously, which some students did\r\nWeaknesses: Problem sets were occasionally varied in difficulty. Office hours could become extremely crowded, and it could take hours to hop in the queue",
                "This course goes over a lot of content - which is very good. The notes for the course are detailed, and the code examples are extremely useful. There are some things that are only mentioned in the course, which I feel should be more detailed in the notes, even if not given much time in lecture.",
                "The course was very structured -- from the assignments to the lectures. But, I do wish there was some sort of exam that tested my knowledge because the 12 assignments themselves don't require the actual conceptual learning.",
                "The lectures use a combination of drawings and coding sections, which gives us good visual intubation before diving into the code, so it was much easier to understand, and watching the professor writing and debugging the code live is both instructional and entertaining, and we got to see tools like vim, gdb, and valgrind in action, which is really nice.",
                "Strengths: The lectures were well taught and enjoyable. The workload was fair.\r\nWeaknesses: Sometimes you had to wait a super long time to get help from office hours.\r\n\r\nMaybe adding more ULAs could help make getting help a smoother process.",
                "This course was good! But it's easy for students to get lost sometimes and then go to office hours but not really learn as deeply as they could.",
                "Strengths: Interesting problem sets! Taking this class has made me a least a little excited about taking 323. Aspnes' detailed course notes are online, lecture code was also posted online. This made it easier to review what was discussed in lecture at your own pace, or to even self-study completely. Grades were completely based on assignments this semesterno midterms or finalso your grade was relatively more predictable. TA's could help you debug, and the groupme + discord chats were relatively active and had many helpful people asking and answering questions. Ed discussion posts were responded to quickly, and TA office hours generally had helpful, patient TA's. \r\n\r\nStrength and weakness: For this Aspnes class, aside from a small handful of test cases, most final test cases were very close to the public tests, so there wasn't too much racking your brain over coming up with weird edge cases. Also, especially for some assignments, the set-up of the structures has a lot of copying and pasting lecture code (ex. for tree structures) and then modifying it. The majority of the work is still your thinking, but I could complete assignments while still being lost on how some methods from class worked.\r\n\r\nWeaknesses: Although covered in lectures, assignments didn't quite reemphasize some of the trivia-esque knowledge of computers, C, and its programming tricks that probably would be asked about on a test. Not a complaint because I didn't have to study and could solely focus on specs and debugging. However, while I walk away with better coding ability and some understandings, I'm sure I lack some small but useful details that might've made me a better programmer had the class been in person or included some midterms.",
                "Strength: Prof Aspnes is highly knowledgeable and is a very engaging lecturer. The problem sets will take a few hours but are very interesting and rewarding. You will definitely learn a lot from the course.\r\nWeakness: Aspnes is too smart... Sometimes he doesn't realize he's going over things too fast. But he's always ready to answer questions, so just be prepared to ask lots of questions!",
                "Lectures and assignments were well-organized and clear to understand! No major weaknesses I can think of",
                "You definitely learn a lot about data structures in the class, and the class itself isn't too boring or dry, although lectures aren't very engaging. I feel like you end up really learning\/understanding the material by doing the problem sets rather than watching the lectures, which feels pretty normal for a STEM class. However, it is sometimes difficult to apply the concepts you learn in lecture to the homework, so I ended up attending office hours a lot during my time in the course, and the queues were sometimes super long (longest I waited was three hours)"
            ]
        },
        {
            "question_id": "YC602",
            "question_text": "Among the practices in this course geared toward learning during the COVID-19 pandemic, which succeeded and which could be improved? Please comment on course practices that allowed for virtual engagement. (Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "I think this course was well adjusted for the pandemic",
                "Virtual workshops were good. Office hours at times were horrendously bad, and I would not wish them on anybody.",
                "They were all great. Office hours format should stay this way after the pandemic.",
                "The live and recorded lectures were definitely a great success I think as well as the virtual Office Hours setup.",
                "Recorded lectures were very useful and the office hours system worked well. I wish there was more of an opportunity to collaborate with classmates or attend office hours with other students to address broader, more conceptual questions.",
                "I think that everything about this course adapted extremely well to the online format. The system of office hours was pristine, while lectures followed a standard lecture format just online. My main comment for improvement is that sometimes I would find myself in an office hours situation where the ULA\/TA is unable to help me at all. Ive had moments where the underlying reason to my issue was that my approach to a pset was completely wrong and no one would tell me. Instead, they tried and often failed to figure out a way to make my very incorrect approach work. I wish ULAs\/TAs were more blunt in telling me to start over and explaining a proper approach to follow. It would have saved me so much time, effort, and frustration.",
                "The virtual office hours offered were great and very helpful. The actual lecture wasn't engaging in a virtual setting.",
                "The recorded lecture made it easy for students to catch up if they missed a lecture. The virtual office hours queue worked well so students could receive help if they needed it.",
                "The office hours systems was sometimes overwhelmed with people, but it mostly worked well. I think there should have been one ULA in an open Zoom during office hours that people could drop into whenever so they don't have to wait in the long queue for trivial or quick questions.",
                "I think the homework was well geared towards the pandemic and remote education but there was little to no consideration for any problems that may arise from learning from a different country.",
                "The lack of exams greatly benefited the class by side-stepping the poor management of examination that is seemingly inherent to the nature of the pandemic and not the fault of any specific instructor. By relying strictly on problem sets, the learning was facilitated through actual experience and not exam-based cramming, and thus this learning was much more thorough and helpful. Additionally, the lectures being offered synchronously allowed for questions to be asked, yet the recordings still served well as both reference and for circumstances in which synchronous participation was difficult. This flexibility was seemingly the best of both worlds.",
                "The focus on weekly assignments was quite nice.",
                "Psets only grading scheme was really nice, though I was less incentivized to attend live lecture",
                "I really love the walkthrough sections and workshops! Office hour times were good too!",
                "The office hours site worked perfectly (I'm not sure if this is something new for this year though). I hope that for in-person classes in the future this continues to be how office hours work.",
                "I think the whole course succeeded.",
                "Virtual office hours were helpful, albeit we would have preferred a big Zoom room to allow for student engagement instead of only 1-on-1 office hours. Ed was also helpful in answering questions, and the professor and course director were both very fast to respond to emails.",
                "One of the biggest successes was the office hours system implemented during COVID-19 and virtual learning. With an organized queue, there was a logical, linear path to receiving help from the peer tutors. Furthermore, with screen share via Zoom, it became smoothless.\r\n\r\nHowever, one of the biggest issues was engagement with the pandemic.  I found myself skipping the live lectures the last few weeks, opting to watch the recordings. The professor was interesting, as was the content, but the lack of testing detracted from my motivation to learn the content on time, so I decided to simply watch the recordings. If tests were implemented, or if the lectures were not recorded, I feel as if my engagement with the course would be higher.",
                "Success: online walkthroughs that utilized Zoom technologies like breakout rooms, the whiteboard for drawing diagrams",
                "I really liked the virtual office hours. It was very convenient to be able to get help on an assignment while you are working on it, without having to pack your work up, walk across campus, sit and wait for a TA to become available, etc. Also, written exams were removed from the course for COVID-19. I really enjoyed this change, as I think CS by nature is better suited for assessment through projects, rather than exams.",
                "Virtual office hours and lecture were very successful.",
                "This class did very well online. The lectures still felt very tolerable -- probably because we do CS on a computer anyways. The office hours were great through zoom. They did a great job.",
                "The use of EdDiscussion was great!",
                "The class had all psets and no exams which I thought was a great change.",
                "Loved the fact that there were no tests since it reduced stress",
                "I enjoyed being able to watch the recorded lectures.",
                "I think this course was very well-adapted to zoom - professor Aspnes was able to share his screen and write code live in class, and also write notes. One minor complaint is that sometimes his handwriting was a bit tough to read.",
                "I think the weekly psets were at a good level",
                "Successful: the workshops and the frequent office hours were incredibly useful!",
                "Succeeded\r\n- virtual office hours\r\n- workshops\r\n\r\nCould be improved\r\n- lecture structure",
                "Keep office hours online and record in person lectures moving forward!",
                "No exams wasnt a good move. The lectures were delivered well virtually.",
                "The lectures were relatively easy to follow and office hours were helpful, despite being virtual.",
                "i wish there had been more walkthroughs for the psets-- would have saved me a lot of unnecessary stress.",
                "I felt that the online office hours could have been streamlined a bit more. I can't speak to how the lounge worked, but I thought the few workshops we had that went over the PSET were really helpful.",
                "A few in-person workshops \/ seminars \/ OH would have been great!",
                "I liked the structure of assignments and grading for this course compared to what I had heard about 223 in the fall.",
                "I feel that the changes with grading with the pandemic was helpful, but at times it was harmful. For example, one of the assignments had its due date pushed back because of a break day. I feel like that put unnecessary stress and lowered grades despite understanding the content but being punished for being late because of the adjusted due date.",
                "Recording live lectures and uploading these recordings for future viewings was extremely helpful, especially for students who may struggle understanding content during a live lecture. The virtual office hours queue system was not ideal--on some days the queue would be very long and not all students may receive help.",
                "The course was very well suited to be taught via zoom recorded lectures.",
                "No midterms and finals is very appreciated. Definitely beneficial for mental health.",
                "Drawing on an iPad (instead of using slides) was very conducive to learning. The professor was really funny, so that kept me engaged.",
                "The Ed discussion board was a great resource for asking questions and seeing what other students were thinking about, especially for the problem sets. The office hours queue was ridiculously long at times though, but I understand that it is probably the best solution available in a virtual setting.",
                "Only CS office hours are probably the main thing. They are amazing; the site is great.",
                "Lectures were traditional lecturing with chances to have all your questions answered easily through typing in chat.",
                "Not requiring us to attend lecture and recording all of them was very helpful!",
                "I think the recording of lectures and virtual workshops were very helpful. I specifically appreciated the walk throughs of psets where the question may have been slightly difficult to understand from just reading the assignment. I also think the ULAs did a great job with helping in office hours the best they could through zoom. I think zoom actually lended pretty well to debugging help with its screen share optionl",
                "I liked how the class was recorded. In addition, professor Aspnes did a good job switching between his notes and his command terminal, which let him talk about things and then show how they would be implemented in C.",
                "The one time a pset was due earlier due to a break day messed up my grade a bit  I think postponing it to the weekend would have been more fair, as I have had homework due on weekends before.",
                "I loved the fact that the only work was homeworkCS exams always have felt unnatural, like you're forcing the material into a format that it doesn't make sense in.",
                "I really appreciated removing the testing for this course. It allowed me to dedicate more time on the pset and not have to worry about cramming information for tests. The switch to Ed discussions and allotted meeting times with ULA's were also great.",
                "Recorded lectures worked well for me",
                "recorded lectures were very useful, change the way assignments are submitted, zoo is too confusing",
                "CS courses are generally affected less by the pandemic imo",
                "Canceling midterms, finals, and projects, and recording lectures were greatly helpful for reducing stress, as the pandemic is not easy on everyone (there's a lot to adapt to and a lot of physical and mental health concerns on top of work).\r\nPsets were really stressful though because of how difficult to get help it was. In office hours, when you have to wait 2 hours in the queue, only to get kicked off without even getting to ask your question or only to get no answers or insulted, it feels terribly hopeless. Several ULAs avoided answering my questions, kicked me off the queue, or spent only a few minutes with me. They said it's because \"That depends on your implementation\" or \"I can't tell you the answer\" or \"I need to get to other people in the queue.\" One ULA even said, \"This is not the kind of question you bring to office hours. You're halfway through the class already\" and \"Office hours is only for asking conceptual questions\" and accused me of making him do my homework for me. Office hours made me feel so lost, alone, discouraged, and invalidated. Students would greatly appreciate if office hours and ULAs are patient, share knowledge generously, and admit it when they don't know how to help, instead of wasting students' time with excuses and negativity.",
                "This was a lecture class, so it was fine.",
                "I think that having classes over Zoom may have actually made learning easier, since split-screen or dual monitor allows for easier following along coding, providing greater visibility. Also, having only homework assignments reduced the amount of stress while still allowing a good understanding of the language.",
                "Office hour system was very poor with unnecessary long queues.",
                "I really appreciate Dr. Aspnes's flexibility in accomodating students from different time zones by allowing async attendance. The combination of recorded lecture + office hours turns out to be very efficient.",
                "The office hour queues were absurdly long. Sometimes half of the students in the course would be waiting for help at the same time, leaving students to wait for hours until they could get help.",
                "The virtual environment was done well, but there were too many assignments and no examinations this semester. This made it easy to go through the course without learning the material that well.",
                "The live lectures were really engaging, and the recordings, codes, and notes are also uploaded, so it is very easy to review. The class notes website is also very nice and has pretty much all the information you need on it, although finding things can be a bit hard due to its length.",
                "I thought the mixture of drawing and coding lectures worked really well and gave me a good understanding of the material. I also really liked Ed and thought it worked well.",
                "The new office hours website was amazing! A complete success. It would have been great to also have more workshops!",
                "TA's have been improving upon an online office hours system, which I think worked for the most part this semester. Sharing screen on Zoom sometimes made debugging a bit smoother. Still, especially closer to the deadline, you'd often be in a queue of 50 people as soon as the office hours opened.",
                "Live lectures were a relatively good medium for teaching the class, although the lectures themselves weren't necessarily very engaging. Virtual office hours were a great help when doing the homework and allowed me to achieve a deeper understanding of the material through completing the homework. However, sometimes the queues for office hours were super long (longest I waited was three hours) so it might've been beneficial to hire more ULAs to spread the office hour work more evenly and allow them to get through the queues in a timely manner when many people needed help."
            ]
        },
        {
            "question_id": "YC409",
            "question_text": "Would you recommend this course to another student? Please explain.\n(Your anonymous response to this question may be viewed by Yale College students, faculty, and advisers to aid in course selection and evaluating teaching.)",
            "comments": [
                "I definitely recommend this course to a prospective computer science major or somebody else who is really interested in coding. The workload is high. I cried once over the psets. But I left that class a much better coder. Don't let this class discourage you or push you out of the major; it is hard but so worth it and you will be so much better for it.",
                "I would recommend this course to anyone interested in CS. The workload can sometimes get annoying but it usually arises from silly mistakes like forgetting a \" * \" or connecting pointers improperly. The assignments are all super reasonable and the startup code professor posts is very useful. The only problem with this class was the office hours at times which had a queue of 40 people, taking 2-3 hours until your question was answered.",
                "yeah if I hated that student and wanted them to suffer",
                "Definitely! I thoroughly enjoyed learning about data structures and C. The workload was very manageable (1 pset per week) and the TA's were incredibly helpful.",
                "I believe I am a better coder after this class.",
                "I loved 223. The problem sets are extremely cool and I love that there were no exams. With Aspnes, it was easier than it has been in the past.",
                "If you're majoring in CS or something related you have to take this. It's not that bad, though definitely a commitment. Start the psets early so you're not freaking out about not understanding the content the day before they're due!",
                "Mostly only recommend to perspective CS majors but if your major is closely related or you are interested then taking it is also fine.",
                "Yes. I gained a clear understanding of data structures. The course is also required for CS majors.",
                "I would definitely recommend CPSC 223 to students interested in CS and related fields. It is a tough course no doubt and it will consume a significant portion of your time outside of class. Certain weeks Id find myself spending over 20 hours on a single PSET,  but attending office hours made the experience more manageable. You will learn a lot and Professor Aspnes is a very intelligent and passionate Professor that made the experience that much better. The content is interesting and has practical applications in the real world. If youre a beginner in CS\/not interested enough about the subject to spend most of your time every week working on this class, I would pass this class for another CS class instead. If you love CS and cant get enough of it, I recommend it. Finally, if youre a CS major, well, you have no choice but to take 223, and my main piece of advice to you is to attend office hours regularly!!! Office hours were a life saver for me during the complex assignments this class assigned.",
                "It was an interesting course if you are interested in C programming.",
                "Yes, I would. The material of this course is pivotal to anyone interested in Computer Science and I enjoyed the challenge of the psets.",
                "I would recommend this class to anyone interested in improving their capabilities as a programmer. The knowledge and skills taught in this class will be helpful to anyone who wants to enter a tech-related field.",
                "Yes; it's a difficult course and takes a significant amount of time, but I feel it gives a very good understanding of how to program in C, as well as how to approach programming, problem-solving, and debugging in general. Additionally, even if the memory-level access granted in C is not present in other languages, this experience certainly helped provide an opportunity to better my understanding of memory and processor management to optimize code. As long as you have time in your schedule for the course and are willing to attend lectures and especially focus on the prof's code, the class is manageable and success is quite feasible. Additionally, Prof. Aspnes is fantastic; he is always energetic during class and makes sure to do a lot of his coding\/debugging live, which not only makes the process more understandable but also more relatable. This live format enables him to also embed a lot of other important tips into his lectures that go beyond a specific lecture's core topic.",
                "This was definitely THE semester to take this course. Only assignments and all were relatively straightforward. Did it prepare us for the intensity of 323? Hopefully.",
                "This is a required major course for comp sci majors. If you're not a comp sci major, I don't think its worth it.",
                "Yes absolutely! If you're considering this class, you've got 201 as a prereq, so I'm writing this review assuming you have that experience. The workload is objectively higher (and harder) than in 201, but it's by far more rewarding without being overly painful. Dr. Aspnes's version of 223 is not the highest workload version of the course that exists at Yale - the grade was entirely based off of the 12 homework assignments over the course of the term. It's still very challenging though, and programming in C is no walk in the park. It's a relatively old language that's extremely low-level, to the point where according to the syllabus you can \"push around individual bits with your bare hands\" (that's a direct quote). Since its compiler isn't as smart as say a Python compiler, there are tons of small errors that will end up happening that don't break the code, and it's extremely hard to find them. That's where the TAs and ULAs come in. They are far and away the BEST course staff I have had during my time at Yale - not even close, and I've had some good TA teams so that is really saying something. The amount they helped in office hours and extra walkthroughs over Zoom just went absolutely above and beyond and made it possible to survive the frustration that C programming inevitably brings in this class. I'd try to name them all but I'd just be missing people and feel bad about that, so I'll just say phenomenal 11\/10 to Rob and the entire staff :) . In class, Dr. Aspnes was fantastic in his lectures (often with extremely funny and meme-worthy drawings or one-liners) - it was a privilege to get to learn from him. Definitely go to office hours if you want to pass all the test cases, but getting to the test cases was easier than I expected going into this class. A lot of times I found the programming strategies to follow from the specs pretty logically. If you really didn't like 201, the frustration will probably outweigh the benefits of the class for you, but even if you disliked 201 and still are interested in more CS definitely give 223 a try. It's the kind of course I will remember for a very long time, and for the right reasons.\r\n\r\nThis report dedicated to the legendary Prof. Stan Eisenstat, who was supposed to teach this class in the spring but passed away last December. RIP legend :(",
                "yes definitely. a must for any CS major.",
                "If you are a CS major, you have to take it. Otherwise, you may take the course but definitely Credit\/D\/Fail it.",
                "Yes, I would recommend this course to many different students, especially if they were considering computer science as a major (or part of their major with a joint major), as this is really the first deep dive into a specific, challenging area of computer science. The course is organized well to facilitate learning, and, during normal, non-pandemic times, I expect it to be engaging with its students.",
                "I'd recommend 223 with Aspnes to students who are less comfortable with programming. He does do a decent amount of C review in the beginning, and the psets don't seem nearly as difficult as the ones in Glenn's class. There also isn't that much edge casing or spec review, which might make taking 323 even more challenging. There's a pset each week, and most of the pset can be done by basing your solution on Aspnes's example code. While I appreciate how manageable this class was, I wish that I had been able to learn more about data structures and prep for 323.",
                "Yes! You'll be glad you learnt Data Structures and Algorithms",
                "There is a MASSIVE difficulty spike midway through the semester with the encode\/decode PSet. This occurs after the add\/drop deadline, so people using this course as an elective for majors other than CS that had previously had an easy time were fighting for their lives. There was one point in which the Office Hours queue was over 40 people long. Regardless of what you heard from your really smart friend, this is not an easy class and is one I would only take if required to do so.",
                "I would recommend this course to another student, with a small caveat. This was my first CS class, and I was hoping to improve my programming skills for research. This class did teach me a lot of skills that will certainly be helpful, like data structures. But my caveat is that this class will mostly teach you low level programming, which may or may not help you if you want to be better at something like Python. In C, you have to wrestle with memory allocation, and some of the projects in this class would be significantly easier in a newer language. So I would simply make sure that your goals align with the goals of the course before you enroll.",
                "Yes, I would recommend.",
                "Yes. If you want to become a better programmer take this class. You will learn a ton almost regardless of your background. I highly recommend skipping 201 and going straight into this class if you are interested in the certificate or just a few CS classes to learn how to become a useful programmer.",
                "yes! great class. I definitely learned a lot, and Aspnes was fantastic.",
                "Yes. I got a lot better at C programming.",
                "Yes, if you are interested in putting in the time.",
                "Yes would recommend! Data structures is important for anyone interested in CS to know. This class will teach you how to think about them from the ground up and implement them in C, which I think is one of the best languages to learn data structures since it really forces you to understand how they work since the language is so rudimentary. This semester was especially chill since there were no tests so it was low stress. Prof Aspnes is hilarious and makes class really enjoyable.",
                "Yes. It is very engaging and makes one a better programmer. It's also a requirement for the CS major so if you're a cs person you should probably take this course.",
                "If you are a computer science major, you have to take it but its not a bad class at all, I had a good experience. Otherwise, with Aspnes it is a manageable introduction to C coding and computer science and I would recommend.",
                "Absolutely, a very good course to take if you have a small amount of coding experience and would like a more in-depth overview.",
                "Yes",
                "Take this course if you are a CS major or if you ever want to work with software. The key value of this course really is its usefulness in the field.",
                "For the CS major, you have to take 223 so yes. If you enjoy it is another question, I personally did since I found myself liking C and the problem sets, even though it can be frustrating at times",
                "ye",
                "Yes",
                "If you enjoy coding and problem solving, then I think this class scratches those itches. Obviously, the actual subject matter for the course is obtuse unless youre a CS major\/certificate. C is also not the most practical language unless youre trying to learn more about Computer Architecture\/take 323. Otherwise, for CS majors, its required and a fun class. It is extremely helpful to have some friends in the class to discuss assignments.",
                "Yes if they want to learn how to implement data structures",
                "Yes! It has been the best and clearest programming course I have taken at Yale.",
                "For doing a CS major, yes - a lot of essential info in this course.\r\nFor \"general enrichment\", no - I feel like the material could be structured and presented in a more intuitive and meaningful way.",
                "Yes. It taught me a lot about storing data and efficiency.",
                "Yes if you plan to get serious about CS. You learn about all the basics in this course.",
                "Yes it is a great introduction to C and data structures",
                "I found the course to be very intellectually rewarding, however, if you are not a CS major, better to take CS 50 and CS 201 first.",
                "Yes. I enjoyed this course and thought I became a significantly programmer through it. The workload was not too bad either.",
                "Yes, anyone whos serious about CS should take this class",
                "Yes, especially if you're a cs major. Knowing your data structures is important.",
                "Yes, this course taught me a lot about important data structures that are commonly used.",
                "Yes.",
                "Yes, I would recommend this course if you plan to use CS later on in your career or at Yale. It teaches you how to think about approaching problems, especially in terms of using appropriate data structures. It would be helpful to have some experience programming before taking this class.",
                "Yes, definitely! Great class to learn the art of programming, using efficient Data Structures, and I highly recommend taking it with Dr. Aspnes. He has been a wonderful professor, far better than the other professors I have heard about.",
                "Yes, it's just a good class for anyone who wants to program",
                "Yes!",
                "Large work load but managable depending on the week",
                "Take it if you need it",
                "Yes I would. From what I had heard this fall, I thought this course was going to be very challenging, but I thought the structure of assignments made it conducive to learning without killing us with work.",
                "Yes, the course covers pretty fundamental topics that are necessary for any CS major. Although the course this year was quite easy as there were no large programming assignments (due to saddening circumstances resulting in a last minute teacher change), so it was harder to be challenged.",
                "Yes, I would recommend this class to another student. It teaches a lot of fundamental computer science concepts that are not limited to a single programming language and gives insight on what different applications these data structures and algorithms could be used for.",
                "This course is required for CS majors. For students who are not CS majors but are considering this course, I would recommend it only if you are very interested and motivated.",
                "Yes I would recommend this course to anyone interested in computer science.",
                "For computer science students, absolutely!",
                "Most definitely.",
                "Yes, since the course teaches valuable CS concepts like data structures and algorithms. Professor Aspnes's humor is also underrated, and it really helped with remembering important ideas.",
                "If you are someone interested in CS (even if you do not intend to major in the subject), it is a really good programming course. I improved a lot as a programmer and found many of the approaches we discussed in class fascinating. The course is challenging at times (debugging is not fun) but it is very rewarding because every week you feel yourself become a better and more confident programmer.",
                "I would recommend it. It is obviously a required course for CS majors but I hope that it also provided the fundamental knowledge we need in C that we can use in future courses.",
                "If you want to major in Computer Science, you need to take this class. If you don't want to major in computer science and are taking it for some other reason I think you should still take this class, but be aware that it can take a lot of time out of your schedule. Starting assignments early will help you a lot though. The two assignments I didn't do well on were also the two I started the latest. Lastly, use the TAs. They are there and they should be used. I've spent hours trying to find something wrong, and after ten to twenty minutes with a TA they would point something out that would fix the problem.",
                "Yes, programming skills applicable to other languages \/ generally learning how to code, fairly accessible",
                "Yes! Especially with Prof Aspnes!",
                "Yes. It's pretty fundamental to CS.",
                "it wasn't bad during virtual learning but the course will probably change a lot in-person so I don't think I can give a recommendation at the moment",
                "if you're a CS major\/certificate you're definitely going to take this course; otherwise, only if you're really interested in it",
                "If your major requires it.",
                "Yes. This class is required for CS majors but also really fun. Getting down to lower level C code (or lower) is probably something a programmer should experience. This class made me understand computer systems and programming a lot more even as someone with CS experience, while offering clear and concise explanations and demos for some common data structures and techniques.",
                "Yes! No major complaints-- if you want to learn how to program (in C) then this is the way to go.",
                "Yes, would recommend to those interested in computer science! Learning C is definitely an although tedious, but valuable experience. Plus, it's a major required class...",
                "Yes. Really important to know.",
                "Definitely for anyone who wishes to pursue computer science. The materials taught (data structure, search algorithm) are very basic and important. The class is fun and I think people will enjoy it.",
                "Absolutely essential if you're interested in data structures, C, software engineering, or computer science. If you're only interested in coding some web apps and are not a cs major, this is not essential but helpful.",
                "If you are interested in learning a strong foundation in C, functional programming, or data structures, this course is a must have.",
                "For CS students, it's mandatory. But for others, I do think it is a core class that teaches fundamental programming principles.",
                "Yes, if you would like to major in computer science, learn about C programming, or just understand how computers work a little better. C can be an unpleasant language to work with but it does give you a really good insight of what is going on inside of the computer.",
                "A qualified yes - before taking this class, I had heard rumors about how hard 223 was, but the class was way easier this semester. In previous semesters, I had heard stories of PSETs taking upwards of 20 hours a week, but this semester the PSETs took me at most 3 hours a week. If the instructor is James Aspnes, and the course structure is the same, I would recommend this course.",
                "Yes! I thought the material was interesting and relevant to CS majors especially, but I think anyone could benefit from the coding skills and fundamental understanding developed in this course.  The workload was fair and the lectures were fun (I really liked Professor Aspnes).",
                "Yes, it is a very important class for anyone looking to learn programming.",
                "I enjoyed this class with Aspnes! My positive experiences learning additional quirks of C in lectures and seeing those passing test cases have made me more certain about going with the CS major.",
                "Yes! Prof Aspnes is so knowledgeable and so smart and you'll definitely learn a lot from him! Also the course goes over some fundamental materials on data structure, which would be very useful for anyone interested in computer science.",
                "Yes! It's a good programming course regardless of whether you are majoring in CS or not.",
                "I think this class is a good class to take if you have a pretty good understanding of the basics of CS and want to achieve a deeper understanding of CS, particularly with data structures. CS 223 is a required class for the CS major, so of course take it you are planning to major in CS, but if you're not considering a CS major or certificate, the class definitely does get more into the weeds of programming than 201 or any 100 level CS course."
            ]
        },
        {
            "question_id": "YC601N",
            "question_text": "Please list any other mode(s) of learning, including any combination or variation of the above options.",
            "comments": [
                "Occasional workshops",
                "virtual workshops as well",
                "none",
                "The lectures were live but were recorded.",
                "The live lectures were also recorded",
                "Live lectures were recorded for later viewing which was really helpful for me",
                "N\/A",
                "Rewatching lectures, watching recorded workshops",
                "Lectures could also be watched asynchronously, after the live virtual lecture.",
                "There were live virtual lectures 2x's a week. After class, the lectures are recorded and uploaded to Canvas.",
                "Live virtual lectures along with live virtual office hours and walkthroughs",
                "n\/a",
                "live virtual walkthroughs to supplement lectures",
                "Office hours, \"seminars\" on difficult topics held by TAs",
                "Virtual office hours",
                "Lectures were recorded and uploaded.",
                "Lots of virtual live office hours with ULAs",
                "Office hours, workshops",
                "There were live virtual lectures over zoom, but they were recorded as well.",
                "Officer hours",
                "Workshops",
                "Live virtual lecture",
                "none",
                "The course included workshops, live lecture, and office hours.",
                "Problem sets\r\nOffice hours",
                "Recorded live virtual lecture.",
                "virtual workshops",
                "Sometimes watched lecture live",
                "edstem\r\nproject walkthroughs\r\nULA office hours",
                "Live virtual lectures, recorded and put in canvas after",
                "Workshops and Office Hours",
                "Office hours sessions over Zoom",
                "Office hours alot aswell",
                "Recorded Lecture",
                "Live virtual lecture -- lectures are recorded and uploaded to course library. Additionally, there were live workshops\/walkthroughs on specific topics -- these were also recorded.",
                "lectures were shared live and recorded for later viewing",
                "lectures were also recorded so they did not have to be viewed live",
                "Extremely detailed course notes!",
                "We also completed psets each week for which office hours were held.",
                "It was all recorded, so if you couldn't make it to class, you could watch the lectures later",
                "I learned the most from working on the problem sets and parsing through course materials (rewatching lectures, reading course notes, etc.)",
                "The live virtual lectures were recorded for students to access later in the Media Library.",
                "No",
                "Asynchronous lectures, office hours",
                "notes page",
                "Recordings of live virtual lectures, virtual office hours with ULAs",
                "Online notes",
                "recorded lectures were posted",
                "Virtual Office Hours",
                "N\/A",
                "Combination of live lecture and recorded lecture",
                "The lectures were also recorded.",
                "Supplemental workshops\/topic reviews were led by some of the teaching fellows.",
                "Live virtual lectures which are also recorded for asynchronous attendance.",
                "Office hours"
            ]
        }
    ],
    "extras": {
        "title": " CPSC 223 01\n        DataStructres&ProgrmmngTechnqs "
    }
}